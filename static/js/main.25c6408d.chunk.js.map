{"version":3,"sources":["utils/Utils.js","store/confirm/actions.js","utils/Text.js","store/confirm/types.js","store/resource/actions.js","store/resource/reducers.js","store/project/actions.js","store/project/reducers.js","store/account/actions.js","store/account/reducers.js","store/task/actions.js","store/task/reducers.js","store/schedule/types.js","store/schedule/actions.js","store/schedule/reducers.js","store/confirm/reducers.js","store/attachment/actions.js","store/attachment/reducers.js","store/verification/actions.js","store/verification/reducers.js","store/index.js","components/Error.jsx","components/EditAccount.jsx","components/SideBar.jsx","components/ProjectHeader.jsx","components/Task.jsx","components/TaskForm.jsx","components/ProjectForm.jsx","components/AttachmentForm.jsx","components/Project.jsx","components/ResourceForm.jsx","components/Resource.jsx","components/ChartBar.jsx","utils/ScheduleConfig.js","components/Gantt.jsx","components/Main.jsx","components/VerificationForm.jsx","components/SignIn.jsx","components/SignUp.jsx","components/Confirm.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["Utils","apiEndpoint","OPEN_CONFIRM","openConfirm","payload","type","closeConfirm","ask","destroy","INTERNAL_SERVER_ERROR","title","description","SENT_MESSAGE","openResourceForm","id","closeResourceForm","getAllResources","dispatch","a","url","buildRequestUrl","token","localStorage","getItem","axios","get","headers","catch","error","response","status","resources","data","createResource","params","post","is_created","resource","errors","deleteResource","delete","is_delete","updateResource","patch","is_updated","initialResouceFormState","visible","initialResouceState","openProjectForm","closeProjectForm","getAllProjects","projects","createProject","project","deleteProject","updateProject","searchProjects","createTask","task","deleteTask","updateTask","initialProjectFormState","initialProjectState","openAccountForm","closeAccountForm","getAllAccount","users","updateAccount","user","initialAccountFormState","initialAccountState","openTaskForm","projectID","taskID","closeTaskForm","toggleDeleteButton","initialTaskFormState","initialTaskState","deleteButtonVisible","DAYS","changeToWeeks","scheduleType","changeToDays","initialScheduleState","scheduleReducer","state","action","initialConfirmState","confirm","confirmReducer","openAttachmentForm","closeAttachmentForm","getAllAttachment","attachments","createAttachment","attachment","deleteAttachment","initialAttachmentFormReducer","initialAttachmentReducer","openVerificationForm","closeVerificationForm","initialVerificationFormState","verificationFormReducer","rootReducer","combineReducers","resourceForm","filter","String","map","projectForm","targetProject","tasks","accountForm","account","taskForm","schedule","attachmentForm","verificationForm","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Messages","props","err","className","key","EditAccuount","getCurrentAccount","avatar","name","email","setState","uri","handleUpdate","FormData","append","onChangeFile","event","target","files","URL","createObjectURL","onChangeName","value","onChangeEmail","onClickOverlay","stopPropagation","this","onClick","length","htmlFor","onChange","icon","src","alt","placeholder","Component","connect","accountActions","projectActions","confirmActions","SideBar","toggleAccountMenu","accountMenuVisible","signOut","removeItem","isSignOut","accountFormVisible","to","EditAccount","PureComponent","resourceActions","taskActions","notExist","mapStateToProps","ProjectHeader","search","projectId","taskName","startDateFrom","startDateTo","endDateFrom","endDateTo","extendFrom","extendTo","orderDuration","project_id","task_name","start_date","from","order","orderStartDate","end_date","orderEndDate","extend","orderExtend","duration","in_charge","inCharge","selectedResources","sortingByDateRange","rangeStart","rangeEnd","onChangeRangeStart","onChangeStartDateRangeS","onChangeRangeEnd","onChangeStartDateRangeE","onChangeEndDateRangeS","onChangeEndDateRangeE","onChangeExtendRangeS","onChangeExtendRangeE","onClickResource","searchByResourceVisible","onClickName","searchByNameVisible","onClickDate","currentTarget","dataset","searchByDateVisible","dateType","onClickDuration","searchByDurationVisible","onClickInCharge","searchByUsersVisible","onChangeOrder","by","onChangeProject","onChangeTask","onClickAvatar","inChargeCopy","targetIndex","indexOf","push","splice","onClickResourceIcon","selectedResourcesCopy","clearSearchName","clearSearchStartDate","clearSearchEndDate","clearSearchExtend","clearSearchDuration","clearSearchInCharge","closeAllModal","resourceIconClass","data-type","SearchByResource","SearchByName","selected","SearchByUsers","OrderBy","data-by","aria-label","label","selection","SearchByDuration","SearchByDate","dateFormat","showWeekNumbers","placeholderText","data-id","style","backgroundColor","color","Avatars","members","member","i","handleDestroy","percentComplete","startDate","endDate","TaskForm","editTaskFormValue","userIds","resourceId","complete","stringUserIds","userId","Date","selectedResource","onChangeResource","onChangeStartDate","date","onChangeEndDate","onCheck","onChangeDescription","handleCreate","Moment","diff","resource_id","user_ids","percent_complete","submit","ProjectForm","editProjectFormValue","AttachmentForm","link","onChangeUrl","rel","href","attachmentFormVisible","attachmentAction","Projects","onClickEditProject","onClickAddTask","onClickAttachmentIcon","previousProps","projectFormVisible","taskFormVisible","index","ResourceForm","getIndexColors","colors","editResourceFormValue","resourceID","pickedColor","color_id","onPickColor","ColorPallets","modifier","data-color","Resource","resourceFormVisible","ChartBar","onMouseEnter","isOverflowX","innerWidth","clientX","isOverflowY","innerHeight","clientY","offsetX","offsetY","isHover","onMouseLeave","chartWidth","width","Members","Window","top","left","START_DAY","subtract","startOf","END_DAY","add","offset","calcOffset","Math","ceil","calcOffsetForWeeks","end","endOf","calcChartWidthForWeeks","isBefore","isBeforeForWeek","paddingLeft","mapDispatchToProps","scheduleActions","scheduleAttr","day","attr","formatDate","format","modifireForDays","startOfWeek","Schedule","schedules","Header","weeks","days","VerificationForm","handleSubmit","result","verificationActions","SignIn","handleSignIn","password","setItem","isSignIn","emailOnChange","passwordOnChange","verificationFormVisible","verificationFormActions","SignUp","handleSignUp","passwordConfirmation","isSignUp","onChangePassword","onChangePasswordConfirmation","onClickConfirm","iconType","confirmType","Home","isAuthenticated","confirmVisible","path","exact","Boolean","location","hostname","match","library","fab","fas","far","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kaAAqBA,E,6GACIC,GAGrB,MAFgB,kCAECA,M,KCJRC,EAAe,eAGfC,EAAc,SAACC,GAAD,MAAc,CACvCC,KAAMH,EACNE,YAGWE,EAAe,iBAAO,CACjCD,KAR2B,kBCShBE,EAAM,gBAENC,EAAU,UCVVC,EAAwB,CAAEJ,KAAM,QAASK,MDE3B,wBCF+CC,YDIpD,sBCFTC,EAAe,CAAEP,KAAM,UAAWK,MAAO,YAAaC,YAAa,2BCSnEE,EAAmB,eAACC,EAAD,uDAAM,KAAN,MAAgB,CAC9CT,KATgC,qBAUhCS,OAGWC,EAAoB,iBAAO,CACtCV,KAbiC,wBAgBtBW,EAAkB,yDAAM,WAAOC,GAAP,qBAAAC,EAAA,6DAC7BC,EAAMnB,EAAMoB,gBAAgB,cAC5BC,EAAQC,aAAaC,QAAQ,SAFA,SAGZC,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALS,UAOX,OAJlBA,EAH6B,QAOtBC,OAPsB,uBAQjCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARP,0BAW3BsB,EAAcF,EAASG,KAAvBD,UACRd,EAAS,CAAEZ,KA3BoB,oBA2BK0B,cAZD,4CAAN,uDAelBE,EAAiB,SAACC,GAAD,8CAAY,WAAOjB,GAAP,2BAAAC,EAAA,6DAClCC,EAAMnB,EAAMoB,gBAAgB,cAC5BC,EAAQC,aAAaC,QAAQ,SAFK,SAGjBC,IAAMW,KAAKhB,EAAKe,EAAQ,CAC7CR,QAAS,CAAE,gBAAiBL,EAAO,eAAgB,sBAClDM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALc,UAOhB,OAJlBA,EAHkC,QAO3BC,OAP2B,uBAQtCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARF,4BAWCoB,EAASG,KAA1CI,EAXgC,EAWhCA,WAAYC,EAXoB,EAWpBA,SAAUC,EAXU,EAWVA,OAE5BrB,EADEmB,EACO,CAAE/B,KA1CgB,kBA0COgC,YAEzB,CAAEhC,KAzCwB,0BAyCOiC,WAfJ,4CAAZ,uDAmBjBC,EAAiB,SAACzB,GAAD,8CAAQ,WAAOG,GAAP,mBAAAC,EAAA,6DAC9BC,EAAMnB,EAAMoB,gBAAN,qBAAoCN,IAC1CO,EAAQC,aAAaC,QAAQ,SAFC,SAGbC,IAAMgB,OAAOrB,EAAK,CACvCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALU,UAOZ,OAJlBA,EAH8B,QAOvBC,OAPuB,uBAQlCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARN,0BAWdoB,EAASG,KAAvBS,WAENxB,EAAS,CAAEZ,KA5DgB,kBA4DOS,OAbA,4CAAR,uDAiBjB4B,EAAiB,SAAC5B,EAAIoB,GAAL,8CAAgB,WAAOjB,GAAP,2BAAAC,EAAA,6DACtCC,EAAMnB,EAAMoB,gBAAN,qBAAoCN,IAC1CO,EAAQC,aAAaC,QAAQ,SAFS,SAGrBC,IAAMmB,MAAMxB,EAAKe,EAAQ,CAC9CR,QAAS,CAAE,gBAAiBL,EAAO,eAAgB,sBAClDM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALkB,UAOpB,OAJlBA,EAHsC,QAO/BC,OAP+B,uBAQ1Cb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARE,4BAWHoB,EAASG,KAA1CY,EAXoC,EAWpCA,WAAYN,EAXwB,EAWxBA,OAAQD,EAXgB,EAWhBA,SAE1BpB,EADE2B,EACO,CAAEvC,KA5EgB,kBA4EOgC,YAEzB,CAAEhC,KA7EwB,0BA6EOiC,WAfA,4CAAhB,uD,yjBC/D9B,IAAMO,EAA0B,CAAEC,SAAS,EAAOhC,GAAI,KAAMwB,OAAQ,IAC9DS,EAAsB,CAAEhB,UAAW,ICO5BiB,EAAkB,eAAClC,EAAD,uDAAM,KAAN,MAAgB,CAC7CT,KAd+B,oBAe/BS,OAGWmC,EAAmB,iBAAO,CACrC5C,KAlBgC,uBAqBrB6C,EAAiB,yDAAM,WAAOjC,GAAP,qBAAAC,EAAA,6DAC5BC,EAAMnB,EAAMoB,gBAAgB,aAC5BC,EAAQC,aAAaC,QAAQ,SAFD,SAGXC,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALQ,UAOV,OAJlBA,EAH4B,QAOrBC,OAPqB,uBAQhCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARR,0BAW1B0C,EAAatB,EAASG,KAAtBmB,SACRlC,EAAU,CAAEZ,KAhCkB,mBAgCM8C,aAZF,4CAAN,uDAejBC,EAAgB,SAAClB,GAAD,8CAAY,WAAOjB,GAAP,2BAAAC,EAAA,6DACjCC,EAAMnB,EAAMoB,gBAAgB,aAC5BC,EAAQC,aAAaC,QAAQ,SAFI,SAGhBC,IAAMW,KAAKhB,EAAKe,EAAQ,CAC7CR,QAAS,CAAE,gBAAiBL,EAAO,eAAgB,sBAClDM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALa,UAOf,OAJlBA,EAHiC,QAO1BC,OAP0B,uBAQrCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARH,4BAWCoB,EAASG,KAAzCI,EAX+B,EAW/BA,WAAYE,EAXmB,EAWnBA,OAAQe,EAXW,EAWXA,QAE1BpC,EADEmB,EACO,CAAE/B,KA/Ce,iBA+COgD,WAExB,CAAEhD,KA1CuB,yBA0COiC,WAfJ,4CAAZ,uDAmBhBgB,EAAgB,SAACxC,GAAD,8CAAQ,WAAOG,GAAP,mBAAAC,EAAA,6DAC7BC,EAAMnB,EAAMoB,gBAAN,oBAAmCN,IACzCO,EAAQC,aAAaC,QAAQ,SAFA,SAGZC,IAAMgB,OAAOrB,EAAK,CACvCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALS,UAOX,OAJlBA,EAH6B,QAOtBC,OAPsB,uBAQjCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARP,0BAWboB,EAASG,KAAvBS,WAENxB,EAAS,CAAEZ,KAjEe,iBAiEOS,OAbA,4CAAR,uDAiBhByC,EAAgB,SAACzC,EAAIoB,GAAL,8CAAgB,WAAOjB,GAAP,2BAAAC,EAAA,6DACrCC,EAAMnB,EAAMoB,gBAAN,oBAAmCN,IACzCO,EAAQC,aAAaC,QAAQ,SAFQ,SAGpBC,IAAMmB,MAAMxB,EAAKe,EAAQ,CAC9CR,QAAS,CAAE,gBAAiBL,EAAO,eAAgB,sBAClDM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALiB,UAOnB,OAJlBA,EAHqC,QAO9BC,OAP8B,uBAQzCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARC,4BAWHoB,EAASG,KAAzCY,EAXmC,EAWnCA,WAAYN,EAXuB,EAWvBA,OAAQe,EAXe,EAWfA,QAE1BpC,EADE2B,EACO,CAAEvC,KAjFe,iBAiFOgD,WAExB,CAAEhD,KA9EuB,yBA8EOiC,WAfA,4CAAhB,uDAmBhBkB,EAAiB,SAACtB,GAAD,8CAAY,WAAOjB,GAAP,mBAAAC,EAAA,6DAClCC,EAAMnB,EAAMoB,gBAAgB,iBADM,SAEjBI,IAAMW,KAAKhB,EAAKe,EAAQ,CAC7CR,QAAS,CAAE,eAAgB,sBAC1BC,OAAM,SAACC,GAAD,OAAWA,EAAMC,YAJc,UAMhB,OAJlBA,EAFkC,QAM3BC,OAN2B,uBAOtCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IAPF,0BAUhC0C,EAAatB,EAASG,KAAtBmB,SACRlC,EAAS,CAAEZ,KAjGiB,iBAiGK8C,aAXO,2CAAZ,uDAcjBM,EAAa,SAACvB,GAAD,8CAAY,WAAOjB,GAAP,2BAAAC,EAAA,6DAC9BC,EAAMnB,EAAMoB,gBAAgB,UAC5BC,EAAQC,aAAaC,QAAQ,SAFC,SAGbC,IAAMW,KAAKhB,EAAKe,EAAQ,CAC7CR,QAAS,CAAE,gBAAiBL,EAAO,eAAgB,sBAClDM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALU,UAOZ,OAJlBA,EAH8B,QAOvBC,OAPuB,uBAQlCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARN,4BAWCoB,EAASG,KAAtCI,EAX4B,EAW5BA,WAAYE,EAXgB,EAWhBA,OAAQoB,EAXQ,EAWRA,KAE1BzC,EADEmB,EACO,CAAE/B,KAhHY,cAgHOqD,QAErB,CAAErD,KA9GoB,sBA8GOiC,WAfJ,4CAAZ,uDAmBbqB,EAAa,SAAC7C,GAAD,8CAAQ,WAAOG,GAAP,yBAAAC,EAAA,6DAC1BC,EAAMnB,EAAMoB,gBAAN,iBAAgCN,IACtCO,EAAQC,aAAaC,QAAQ,SAFH,SAGTC,IAAMgB,OAAOrB,EAAK,CACvCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALM,UAOR,OAJlBA,EAH0B,QAOnBC,OAPmB,uBAQ9Bb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARV,4BAWJoB,EAASG,KAA7BS,EAXwB,EAWxBA,UAAWiB,EAXa,EAWbA,KACfjB,GACFxB,EAAS,CAAEZ,KAlIY,cAkIOqD,SAbA,4CAAR,uDAiBbE,EAAa,SAAC9C,EAAIoB,GAAL,8CAAgB,WAAOjB,GAAP,2BAAAC,EAAA,6DAClCC,EAAMnB,EAAMoB,gBAAN,iBAAgCN,IACtCO,EAAQC,aAAaC,QAAQ,SAFK,SAGjBC,IAAMmB,MAAMxB,EAAKe,EAAQ,CAC9CR,QAAS,CAAE,gBAAiBL,EAAO,eAAgB,sBAClDM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALc,UAOhB,OAJlBA,EAHkC,QAO3BC,OAP2B,uBAQtCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARF,4BAWHoB,EAASG,KAAtCY,EAXgC,EAWhCA,WAAYN,EAXoB,EAWpBA,OAAQoB,EAXY,EAWZA,KAE1BzC,EADE2B,EACO,CAAEvC,KAlJY,cAkJOqD,QAErB,CAAErD,KAlJoB,sBAkJOiC,WAfA,4CAAhB,uD,yjBCrI1B,IAAMuB,EAA0B,CAAEf,SAAS,EAAOhC,GAAI,KAAMwB,OAAQ,IAC9DwB,GAAsB,CAAEX,SAAU,ICJ3BY,GAAkB,iBAAO,CACpC1D,KAP+B,sBAUpB2D,GAAmB,iBAAO,CACrC3D,KAVgC,uBAarB4D,GAAgB,yDAAM,WAAOhD,GAAP,qBAAAC,EAAA,6DAC3BC,EAAMnB,EAAMoB,gBAAgB,UAC5BC,EAAQC,aAAaC,QAAQ,SAFF,SAGVC,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALO,UAOT,OAJlBA,EAH2B,QAOpBC,OAPoB,uBAQ/Bb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IART,0BAWzByD,EAAUrC,EAASG,KAAnBkC,MACRjD,EAAS,CAAEZ,KAxBkB,kBAwBK6D,UAZD,4CAAN,uDAehBC,GAAgB,SAACjC,GAAD,8CAAY,WAAOjB,GAAP,2BAAAC,EAAA,6DACjCC,EAAMnB,EAAMoB,gBAAgB,iBAC5BC,EAAQC,aAAaC,QAAQ,SAFI,SAGhBC,IAAMmB,MAAMxB,EAAKe,EAAQ,CAC9CR,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALa,UAOf,OAJlBA,EAHiC,QAO1BC,OAP0B,uBAQrCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARH,4BAYFoB,EAASG,KAAtCY,EAZ+B,EAY/BA,WAAYwB,EAZmB,EAYnBA,KAAM9B,EAZa,EAYbA,OAExBrB,EADE2B,EACO,CAAEvC,KAxCe,iBAwCO+D,QAExB,CAAE/D,KAzCuB,yBAyCOiC,WAhBJ,4CAAZ,uD,6jBC1B7B,IAAM+B,GAA0B,CAAEvB,SAAS,EAAOR,OAAQ,IACpDgC,GAAsB,CAAEJ,MAAO,ICLxBK,GAAe,SAAC,GAAD,QAAGC,iBAAH,MAAe,KAAf,MAAqBC,OAArB,MAA0C,CACpEpE,KAL4B,iBAM5BD,QAAS,CAAEoE,YAAWC,YAFI,MAA8B,KAA9B,KAKfC,GAAgB,iBAAO,CAClCrE,KAT6B,oBAYlBsE,GAAqB,iBAAO,CACvCtE,KAZkC,yB,6jBCCpC,IAAMuE,GAAuB,CAC3B9B,SAAS,EAAO0B,UAAW,KAAMC,OAAQ,KAAMnC,OAAQ,IAGnDuC,GAAmB,CAAEC,qBAAqB,GCNnCC,GAAO,OCIPC,GAAgB,iBAAO,CAClC3E,KAJ6B,kBAK7B4E,aDPmB,UCURC,GAAe,iBAAO,CACjC7E,KAR4B,iBAS5B4E,aAAcF,KCTVI,GAAuB,CAAEF,aFHV,SEgBNG,GAXS,WAA2C,IAA1CC,EAAyC,uDAAjCF,GAAsBG,EAAW,uCAChE,OAAQA,EAAOjF,MACb,IDL2B,kBCMzB,MAAO,CAAE4E,aFRM,SESjB,IDN0B,iBCOxB,MAAO,CAAEA,aAAcF,IACzB,QACE,OAAOM,ICVPE,GAAsB,CAC1BzC,SAAS,EACTzC,KAAM,GACNK,MAAO,GACPC,YAAa,GACb6E,QAAS,cAoBIC,GAjBQ,WAA0C,IAAzCJ,EAAwC,uDAAhCE,GAAqBD,EAAW,uCAC9D,OAAQA,EAAOjF,MACb,KAAKH,EACH,MAAO,CACL4C,SAAS,EACTzC,KAAMiF,EAAOlF,QAAQC,KACrBK,MAAO4E,EAAOlF,QAAQM,MACtBC,YAAa2E,EAAOlF,QAAQO,YAC5B6E,QAASF,EAAOlF,QAAQoF,SAE5B,IdnByB,gBcoBvB,OAAOD,GACT,QACE,OAAOF,ICXAK,GAAqB,SAAClB,GAAD,MAAgB,CAChDnE,KARkC,uBASlCmE,cAGWmB,GAAsB,iBAAO,CACxCtF,KAZmC,0BAexBuF,GAAmB,SAACpB,GAAD,8CAAe,WAAOvD,GAAP,qBAAAC,EAAA,6DACvCC,EAAMnB,EAAMoB,gBAAN,oBAAmCoD,EAAnC,iBACNnD,EAAQC,aAAaC,QAAQ,SAFU,SAGtBC,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALmB,UAOrB,OAJlBA,EAHuC,QAOhCC,OAPgC,uBAQ3Cb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARG,0BAWrCoF,EAAgBhE,EAASG,KAAzB6D,YACR5E,EAAS,CAAEZ,KA1BqB,qBA0BKwF,gBAZQ,4CAAf,uDAenBC,GAAmB,SAAC5D,EAAQsC,GAAT,8CAAuB,WAAOvD,GAAP,2BAAAC,EAAA,6DAC/CC,EAAMnB,EAAMoB,gBAAN,oBAAmCoD,EAAnC,iBACNnD,EAAQC,aAAaC,QAAQ,SAFkB,SAG9BC,IAAMW,KAAKhB,EAAKe,EAAQ,CAC7CR,QAAS,CAAE,gBAAiBL,EAAO,eAAgB,sBAClDM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YAL2B,UAO7B,OAJlBA,EAH+C,QAOxCC,OAPwC,uBAQnDb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARW,4BAWVoB,EAASG,KAA5CI,EAX6C,EAW7CA,WAAYE,EAXiC,EAWjCA,OAAQyD,EAXyB,EAWzBA,WAE1B9E,EADEmB,EACO,CAAE/B,KAzCkB,oBAyCO0F,cAE3B,CAAE1F,KAzC0B,4BAyCOiC,WAfO,4CAAvB,uDAmBnB0D,GAAmB,SAAClF,GAAD,8CAAQ,WAAOG,GAAP,mBAAAC,EAAA,6DAChCC,EAAMnB,EAAMoB,gBAAN,uBAAsCN,IAC5CO,EAAQC,aAAaC,QAAQ,SAFG,SAGfC,IAAMgB,OAAOrB,EAAK,CACvCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALY,UAOd,OAJlBA,EAHgC,QAOzBC,OAPyB,uBAQpCb,EAAS,CAAEZ,KAAMH,EAAcE,QAASK,IARJ,0BAWhBoB,EAASG,KAAvBS,WAENxB,EAAS,CAAEZ,KA3DkB,oBA2DOS,OAbA,4CAAR,uD,6jBC9ChC,IAAMmF,GAA+B,CAAEnD,SAAS,EAAO0B,UAAW,KAAMlC,OAAQ,IAC1E4D,GAA2B,CAAEL,YAAa,ICPnCM,GAAuB,iBAAO,CACzC9F,KAJoC,2BAOzB+F,GAAwB,iBAAO,CAC1C/F,KAPqC,4BCCjCgG,GAA+B,CAAEvD,SAAS,GAajCwD,GAXiB,WAAmD,IAAlDjB,EAAiD,uDAAzCgB,GAA8Bf,EAAW,uCAChF,OAAQA,EAAOjF,MACb,IDNkC,yBCOhC,MAAO,CAAEyC,SAAS,GACpB,IDPmC,0BCQjC,MAAO,CAAEA,SAAS,GACpB,QACE,OAAOuC,ICMPkB,GAAcC,YAAgB,CAClCC,afLiC,WAA8C,IAA7CpB,EAA4C,uDAApCxC,EAAyByC,EAAW,uCAC9E,OAAQA,EAAOjF,MACb,IDV8B,qBCW5B,MAAO,CAAEyC,SAAS,EAAMhC,GAAIwE,EAAOxE,GAAIwB,OAAQ,IACjD,IDX+B,sBCY7B,MAAO,CAAEQ,SAAS,EAAOhC,GAAI,KAAMwB,OAAQ,IAC7C,IDRmC,0BCSjC,OAAO,EAAP,GACK+C,EADL,CAEE/C,OAAQgD,EAAOhD,SAEnB,QACE,OAAO+C,IeNXhD,SfU6B,WAA0C,IAAzCgD,EAAwC,uDAAhCtC,EAAqBuC,EAAW,uCACtE,OAAQA,EAAOjF,MACb,IDxB6B,oBCyB3B,MAAO,CAAE0B,UAAWuD,EAAOvD,WAC7B,IDzB2B,kBC0BzB,OAAO,EAAP,GACKsD,EADL,CAEEtD,UAAU,GAAD,mBAAMsD,EAAMtD,WAAZ,CAAuBuD,EAAOjD,aAE3C,ID7B2B,kBC8BzB,OAAO,EAAP,GACKgD,EADL,CAEEtD,UAAWsD,EAAMtD,UAAU2E,QAAO,SAACrE,GAAD,OAAcsE,OAAOtE,EAASvB,MAAQwE,EAAOxE,QAEnF,IDjC2B,kBCkCzB,OAAO,EAAP,GACKuE,EADL,CAEEtD,UAAWsD,EAAMtD,UAAU6E,KAAI,SAACvE,GAAD,OAC7BA,EAASvB,KAAOwE,EAAOjD,SAASvB,GAAKwE,EAAOjD,SAAWA,OAG7D,QACE,OAAOgD,Ie/BXwB,YbHgC,WAA8C,IAA7CxB,EAA4C,uDAApCxB,EAAyByB,EAAW,uCAC7E,OAAQA,EAAOjF,MACb,IDd6B,oBCe3B,MAAO,CAAEyC,SAAS,EAAMhC,GAAIwE,EAAOxE,GAAIwB,OAAQ,IACjD,IDf8B,qBCgB5B,MAAO,CAAEQ,SAAS,EAAOhC,GAAI,KAAMwB,OAAQ,IAC7C,IDRkC,yBCShC,OAAO,KACF+C,EADL,CAEE/C,OAAQgD,EAAOhD,SAEnB,QACE,OAAO+C,IaRXhC,QbY4B,WAA0C,IAAzCgC,EAAwC,uDAAhCvB,GAAqBwB,EAAW,uCACrE,OAAQA,EAAOjF,MACb,ID5B4B,mBC6B1B,MAAO,CAAE8C,SAAUmC,EAAOnC,UAE5B,ID9B0B,iBC+BxB,OAAO,KACFkC,EADL,CAEElC,SAAS,GAAD,mBAAMkC,EAAMlC,UAAZ,CAAsBmC,EAAOjC,YAGzC,IDnC0B,iBCoCxB,OAAO,KACFgC,EADL,CAEElC,SAAUkC,EAAMlC,SAASuD,QAAO,SAACrD,GAAD,OAAasD,OAAOtD,EAAQvC,MAAQwE,EAAOxE,QAG/E,IDxC0B,iBCyCxB,OAAO,KACFuE,EADL,CAEElC,SAAUkC,EAAMlC,SAASyD,KAAI,SAACvD,GAAD,OAC3BA,EAAQvC,KAAOwE,EAAOjC,QAAQvC,GAAKwE,EAAOjC,QAAUA,OAI1D,ID/C0B,iBCgDxB,MAAO,CAAEF,SAAUmC,EAAOnC,UAE5B,IDjDuB,cCkDrB,IAAM2D,EAAgBzB,EAAMlC,SAASuD,QAAO,SAACrD,GAAD,OAC1CA,EAAQvC,KAAOwE,EAAO5B,KAAKc,aAG7B,OADAsC,EAAc,GAAGC,MAAjB,sBAA6BD,EAAc,GAAGC,OAA9C,CAAqDzB,EAAO5B,OACrD,KACF2B,EADL,CAEElC,SAAUkC,EAAMlC,SAASyD,KAAI,SAACvD,GAAD,OAC3BA,EAAQvC,KAAOgG,EAAc,GAAGhG,GAAKgG,EAAc,GAAKzD,OAK9D,ID7DuB,cC8DrB,IAAMyD,EAAgBzB,EAAMlC,SAASuD,QAAO,SAACrD,GAAD,OAC1CA,EAAQvC,KAAOwE,EAAO5B,KAAKc,aAK7B,OAHAsC,EAAc,GAAGC,MAAQD,EAAc,GAAGC,MAAML,QAAO,SAAChD,GAAD,OACrDA,EAAK5C,KAAOwE,EAAO5B,KAAK5C,MAEnB,KACFuE,EADL,CAEElC,SAAUkC,EAAMlC,SAASyD,KAAI,SAACvD,GAAD,OAC3BA,EAAQvC,KAAOgG,EAAc,GAAGhG,GAAKgG,EAAc,GAAKzD,OAK9D,ID3EuB,cC4ErB,IAAMyD,EAAgBzB,EAAMlC,SAASuD,QAAO,SAACrD,GAAD,OAC1CA,EAAQvC,KAAOwE,EAAO5B,KAAKc,aAK7B,OAHAsC,EAAc,GAAGC,MAAQD,EAAc,GAAGC,MAAMH,KAAI,SAAClD,GAAD,OAClDA,EAAK5C,KAAOwE,EAAO5B,KAAK5C,GAAKwE,EAAO5B,KAAOA,KAEtC,KACF2B,EADL,CAEElC,SAAUkC,EAAMlC,SAASyD,KAAI,SAACvD,GAAD,OAC3BA,EAAQvC,KAAOgG,EAAc,GAAGhG,GAAKgG,EAAc,GAAKzD,OAK9D,QACE,OAAOgC,IanFX2B,YXXgC,WAA8C,IAA7C3B,EAA4C,uDAApChB,GAAyBiB,EAAW,uCAC7E,OAAQA,EAAOjF,MACb,IDR6B,oBCS3B,MAAO,CAAEyC,SAAS,EAAMR,OAAQ,IAClC,IDT8B,qBCU5B,MAAO,CAAEQ,SAAS,EAAOR,OAAQ,IACnC,IDRkC,yBCShC,MAAO,CAAEQ,QAASuC,EAAMvC,QAASR,OAAQgD,EAAOhD,QAClD,QACE,OAAO+C,IWGX4B,QXC4B,WAA0C,IAAzC5B,EAAwC,uDAAhCf,GAAqBgB,EAAW,uCACrE,OAAQA,EAAOjF,MACb,IDnB2B,kBCoBzB,MAAO,CAAE6D,MAAOoB,EAAOpB,OACzB,IDpB0B,iBCqBxB,OAAO,MACFmB,EADL,CAEEnB,MAAOmB,EAAMnB,MAAM0C,KAAI,SAACxC,GAAD,OACrBA,EAAKtD,KAAOwE,EAAOlB,KAAKtD,GAAKwE,EAAOlB,KAAOA,OAGjD,QACE,OAAOiB,IWZX6B,STf6B,WAA2C,IAA1C7B,EAAyC,uDAAjCT,GAAsBU,EAAW,uCACvE,OAAQA,EAAOjF,MACb,IDX0B,iBCYxB,MAAO,CACLyC,SAAS,EACT0B,UAAWc,EAAOlF,QAAQoE,UAC1BC,OAAQa,EAAOlF,QAAQqE,OACvBnC,OAAQ,IAEZ,IDjB2B,kBCkBzB,MAAO,CACLQ,SAAS,EACT0B,UAAW,KACXC,OAAQ,KACRnC,OAAQ,IAEZ,ILT+B,sBKU7B,OAAO,MACF+C,EADL,CAEE/C,OAAQgD,EAAOhD,SAEnB,QACE,OAAO+C,ISNX3B,KTUyB,WAAuC,IAAtC2B,EAAqC,uDAA7BR,GAAkBS,EAAW,uCAC/D,OAAQA,EAAOjF,MACb,IDnCgC,uBCoC9B,MAAO,CACLyE,qBAAsBO,EAAMP,qBAEhC,QACE,OAAOO,IShBX8B,SAAU/B,GACVI,QAASC,GACT2B,eHhBmC,WAAmD,IAAlD/B,EAAiD,uDAAzCY,GAA8BX,EAAW,uCACrF,OAAQA,EAAOjF,MACb,IDTgC,uBCU9B,MAAO,CAAEyC,SAAS,EAAM0B,UAAWc,EAAOd,UAAWlC,OAAQ,IAC/D,IDViC,wBCW/B,MAAO,CAAEQ,SAAS,EAAO0B,UAAW,KAAMlC,OAAQ,IACpD,IDRqC,4BCSnC,OAAO,MACF+C,EADL,CAEE/C,OAAQgD,EAAOhD,SAEnB,QACE,OAAO+C,IGKXU,WHD+B,WAA+C,IAA9CV,EAA6C,uDAArCa,GAA0BZ,EAAW,uCAC7E,OAAQA,EAAOjF,MACb,IDvB8B,qBCwB5B,MAAO,CAAEwF,YAAaP,EAAOO,aAC/B,IDxB6B,oBCyB3B,OAAO,MACFR,EADL,CAEEQ,YAAY,GAAD,mBAAMR,EAAMQ,aAAZ,CAAyBP,EAAOS,eAE/C,ID5B6B,oBC6B3B,OAAO,MACFV,EADL,CAEEQ,YAAaR,EAAMQ,YAAYa,QAAO,SAACX,GAAD,OAAgBY,OAAOZ,EAAWjF,MAAQwE,EAAOxE,QAE3F,QACE,OAAOuE,IGbXgC,iBAAkBf,KAaLgB,GATDC,YACZhB,GACAiB,YACEC,YAAgBC,KAChBC,OAAOC,8BAAgCD,OAAOC,iC,0ECxB5CC,I,OAAW,SAACC,GAAD,OACfA,EAAMxF,OAAOsE,KAAI,SAACmB,GAAD,OAAS,yBAAKC,UAAU,iBAAiBC,IAAKF,EAAInG,OAAQmG,EAAInG,YAGlEA,GAdD,SAAC,GAAwB,IAAtB0D,EAAqB,EAArBA,OAAQhD,EAAa,EAAbA,OACjB5B,EAAK,UAAM4E,EAAN,YACX,OACE,yBAAK0C,UAAU,SACb,yBAAKA,UAAU,gBAAgBtH,GAC/B,kBAAC,GAAD,CAAU4B,OAAQA,MCuBlB4F,I,kBACJ,WAAYJ,GAAQ,IAAD,8BACjB,8CAAMA,KAaRK,kBAdmB,sBAcC,wCAAAjH,EAAA,6DACZC,EAAMnB,EAAMoB,gBAAgB,eAC5BC,EAAQC,aAAaC,QAAQ,SAFjB,SAGKC,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALR,UAOM,OAJlBA,EAHY,QAOLC,OAPK,uBAQR3B,EAAgB,EAAK2H,MAArB3H,aACIM,GATI,4BAYcoB,EAASG,KAAKoC,KAAtCgE,EAZU,EAYVA,OAAQC,EAZE,EAYFA,KAAMC,EAZJ,EAYIA,MACtB,EAAKC,SAAS,CAAEC,IAAKJ,EAAQC,OAAMC,UAbjB,4CAdD,EA8BnBG,aA9BmB,sBA8BJ,0CAAAvH,EAAA,+DACmB,EAAKmE,MAA7B+C,EADK,EACLA,OAAQC,EADH,EACGA,KAAMC,EADT,EACSA,OAChBpG,EAAS,IAAIwG,UACZC,OAAO,aAAcN,GAC5BnG,EAAOyG,OAAO,cAAeL,GACzBF,GACFlG,EAAOyG,OAAO,eAAgBP,GANnB,EAS6B,EAAKN,MAAvC5E,EATK,EASLA,eAAgBiB,EATX,EASWA,cATX,SAUPA,EAAcjC,GAVP,OAWbgB,IAXa,2CA9BI,EA4CnB0F,aAAe,SAACC,GACd,IAAMT,EAASS,EAAMC,OAAOC,MAAM,GAC5BP,EAAMQ,IAAIC,gBAAgBb,GAChC,EAAKG,SAAS,CAAEC,MAAKJ,YA/CJ,EAkDnBc,aAAe,SAACL,GACd,IAAMR,EAAOQ,EAAMC,OAAOK,MAC1B,EAAKZ,SAAS,CAAEF,UApDC,EAuDnBe,cAAgB,SAACP,GACf,IAAMP,EAAQO,EAAMC,OAAOK,MAC3B,EAAKZ,SAAS,CAAED,WAzDC,EA4DnBe,eAAiB,SAACR,GAAD,OAAWA,EAAMS,mBA1DhC,EAAKjE,MAAQ,CACXmD,IAAK,GACLJ,OAAQ,KACRC,KAAM,GACNC,MAAO,IANQ,E,kFAWjBiB,KAAKpB,sB,+BAmDG,IAAD,EAC8BoB,KAAKzB,MAAlC9D,EADD,EACCA,iBAAkB1B,EADnB,EACmBA,OADnB,EAEsBiH,KAAKlE,MAA1BmD,EAFD,EAECA,IAAKH,EAFN,EAEMA,KAAMC,EAFZ,EAEYA,MAEnB,OACE,yBAAKN,UAAU,mBAAmBwB,QAASxF,GACzC,yBAAKgE,UAAU,gBAAgBwB,QAASD,KAAKF,gBAC3C,yBAAKrB,UAAU,kBAAf,gBACmB,IAAlB1F,EAAOmH,QAAgB,kBAAC,GAAD,CAAcnE,OAAO,eAAehD,OAAQA,IACpE,2BAAOoH,QAAQ,aAAa1B,UAAU,mBACpC,2BACElH,GAAG,aACHT,KAAK,OACL2H,UAAU,qBACV2B,SAAUJ,KAAKX,eAER,KAARJ,EACG,kBAAC,KAAD,CAAiBoB,KAAM,CAAC,MAAO,QAAS5B,UAAU,sBAClD,yBAAK6B,IAAKrB,EAAKsB,IAAI,SAAS9B,UAAU,sBAE5C,yBAAKA,UAAU,sBAAf,sBACA,2BACE3H,KAAK,OACL2H,UAAU,gBACV+B,YAAY,OACZZ,MAAOd,EACPsB,SAAUJ,KAAKL,eAEjB,2BACE7I,KAAK,OACL2H,UAAU,iBACV+B,YAAY,QACZZ,MAAOb,EACPqB,SAAUJ,KAAKH,gBAEjB,4BAAQ/I,KAAK,SAASmJ,QAASD,KAAKd,aAAcT,UAAU,mBAA5D,gB,GAlGiBgC,cA2GZC,gBA9HS,SAAC5E,GAEvB,MAAO,CACL/C,OAFsB+C,EAAhB2B,YAEc1E,WAIG,SAACrB,GAAc,IAChC+C,EAAoCkG,GAAlB/F,EAAkB+F,GACpChH,EAAmBiH,EACnBhK,EAAgBiK,EACxB,MAAO,CACLpG,iBAAkB,kBAAM/C,EAAS+C,MACjCG,cAAe,SAACjC,GAAD,OAAYjB,EAASkD,EAAcjC,KAClDgB,eAAgB,kBAAMjC,EAASiC,MAC/B/C,YAAa,SAACC,GAAD,OAAaa,EAASd,EAAYC,QA+GpC6J,CAA6C/B,IC3GtDmC,I,mBACJ,WAAYvC,GAAQ,IAAD,8BACjB,8CAAMA,KAORwC,kBAAoB,WAAO,IACjBC,EAAuB,EAAKlF,MAA5BkF,mBACR,EAAKhC,SAAS,CAAEgC,oBAAqBA,KAVpB,EAanBC,QAAU,WACRlJ,aAAamJ,WAAW,SACxB,EAAKlC,SAAS,CAAEmC,WAAW,KAb3B,EAAKrF,MAAQ,CACXkF,oBAAoB,EACpBG,WAAW,GAJI,E,uEAkBT,IAAD,EACmCnB,KAAKlE,MAAvCkF,EADD,EACCA,mBAAoBG,EADrB,EACqBA,UADrB,EAIHnB,KAAKzB,MADPjH,EAHK,EAGLA,iBAAkBmC,EAHb,EAGaA,gBAAiBe,EAH9B,EAG8BA,gBAAiB4G,EAH/C,EAG+CA,mBAAoBhG,EAHnE,EAGmEA,mBAG1E,OACE+F,EAAY,kBAAC,KAAD,CAAUE,GAAG,kBACvB,yBAAK5C,UAAU,WACb,yBAAKA,UAAU,6BAA6BwB,QAASxG,GACnD,kBAAC,KAAD,CAAiB4G,KAAM,CAAC,MAAO,QAAS5B,UAAU,mBAEpD,yBAAKA,UAAU,8BAA8BwB,QAAS7E,GACpD,kBAAC,KAAD,CAAiBiF,KAAM,CAAC,MAAO,SAAU5B,UAAU,mBAErD,yBAAKA,UAAU,iCAAiCwB,QAAS3I,GACvD,kBAAC,KAAD,CAAiB+I,KAAM,CAAC,MAAO,QAAS5B,UAAU,mBAEpD,yBAAKA,UAAU,gCAAgCwB,QAASD,KAAKe,mBAC3D,kBAAC,KAAD,CAAiBV,KAAM,CAAC,MAAO,QAAS5B,UAAU,mBAEnDuC,GACC,yBAAKvC,UAAU,UAAUwB,QAASD,KAAKe,mBACrC,yBAAKtC,UAAU,eACb,yBAAKA,UAAU,oBAAoBwB,QAASzF,GAA5C,8CACA,yBAAKiE,UAAU,uBAAuBwB,QAASD,KAAKiB,SAApD,0CAILG,GAAsB,kBAACE,GAAD,W,GAhDXC,kBAuDPb,gBA3ES,SAAC5E,GAEvB,MAAO,CACLsF,mBAFsBtF,EAAhB2B,YAE0BlE,YAIT,SAAC7B,GAAc,IAChCJ,EAAqBkK,EACrB/H,EAAoBmH,EACpBpG,EAAoBmG,GACpBvF,EAAuBqG,GAC/B,MAAO,CACLnK,iBAAkB,kBAAMI,EAASJ,MACjCmC,gBAAiB,kBAAM/B,EAAS+B,MAChCe,gBAAiB,kBAAM9C,EAAS8C,MAChCY,mBAAoB,kBAAM1D,EAAS0D,SA2DxBsF,CAA6CI,I,oBC/EtDY,I,OAAY,GAEZ3B,GAAkB,SAACT,GAAD,OAAWA,EAAMS,mBAEnC4B,GAAkB,SAAC7F,GAAW,IAC1BhC,EAA+BgC,EAA/BhC,QAAShB,EAAsBgD,EAAtBhD,SAAU4E,EAAY5B,EAAZ4B,QAC3B,MAAO,CACL9D,SAAUE,EAAQF,SAClBpB,UAAWM,EAASN,UACpBmC,MAAO+C,EAAQ/C,QAabiH,G,YACJ,WAAYrD,GAAQ,IAAD,8BACjB,8CAAMA,KA8BRsD,OAAS,WAAO,IAAD,EAgBT,EAAK/F,MAdPgG,EAFW,EAEXA,UACAC,EAHW,EAGXA,SACAC,EAJW,EAIXA,cACAC,EALW,EAKXA,YACAC,EANW,EAMXA,YACAC,EAPW,EAOXA,UACAC,EARW,EAQXA,WACAC,EATW,EASXA,SACAC,EAVW,EAUXA,cAQI3J,EAAS,CACb4J,WAAYT,EACZU,UAAWT,EACXU,WAAY,CAAEC,KAAMV,EAAeX,GAAIY,EAAaU,MArBzC,EAWXC,gBAWAC,SAAU,CAAEH,KAAMR,EAAab,GAAIc,EAAWQ,MAtBnC,EAYXG,cAWAC,OAAQ,CAAEL,KAAMN,EAAYf,GAAIgB,EAAUM,MAvB/B,EAaXK,aAWAC,SAAU,CAAEN,MAAOL,GACnBY,UAzBW,EAcXC,SAYA3K,UA1BW,EAeX4K,oBAeFnJ,EAD2B,EAAKsE,MAAxBtE,gBACOtB,IA7DE,EAgEnB0K,mBAAqB,SAACvM,GAAU,IAAD,EAWzB,EAAKgF,MATPkG,EAF2B,EAE3BA,cACAC,EAH2B,EAG3BA,YACAC,EAJ2B,EAI3BA,YACAC,EAL2B,EAK3BA,UACAC,EAN2B,EAM3BA,WACAC,EAP2B,EAO3BA,SACAO,EAR2B,EAQ3BA,eACAE,EAT2B,EAS3BA,aACAE,EAV2B,EAU3BA,YAGF,OAAQlM,GACN,IAAK,QACH,MAAO,CACLwM,WAAYtB,EACZuB,SAAUtB,EACVuB,mBAAoB,EAAKC,wBACzBC,iBAAkB,EAAKC,wBACvBhB,MAAOC,GAEX,IAAK,MACH,MAAO,CACLU,WAAYpB,EACZqB,SAAUpB,EACVqB,mBAAoB,EAAKI,sBACzBF,iBAAkB,EAAKG,sBACvBlB,MAAOG,GAEX,IAAK,SACH,MAAO,CACLQ,WAAYlB,EACZmB,SAAUlB,EACVmB,mBAAoB,EAAKM,qBACzBJ,iBAAkB,EAAKK,qBACvBpB,MAAOK,GAEX,QACE,MAAO,KAvGM,EA2GnBgB,gBAAkB,WAAO,IACfC,EAA4B,EAAKnI,MAAjCmI,wBACR,EAAKjF,SAAS,CAAEiF,yBAA0BA,KA7GzB,EAgHnBC,YAAc,WAAO,IACXC,EAAwB,EAAKrI,MAA7BqI,oBACR,EAAKnF,SAAS,CAAEmF,qBAAsBA,KAlHrB,EAqHnBC,YAAc,SAAC9E,GAAW,IAChBxI,EAASwI,EAAM+E,cAAcC,QAA7BxN,KACAyN,EAAwB,EAAKzI,MAA7ByI,oBACR,EAAKvF,SAAS,CAAEuF,qBAAsBA,EAAqBC,SAAU1N,KAxHpD,EA2HnB2N,gBAAkB,WAAO,IACfC,EAA4B,EAAK5I,MAAjC4I,wBACR,EAAK1F,SAAS,CAAE0F,yBAA0BA,KA7HzB,EAgInBC,gBAAkB,WAAO,IACfC,EAAyB,EAAK9I,MAA9B8I,qBACR,EAAK5F,SAAS,CAAE4F,sBAAuBA,KAlItB,EAqInBC,cArImB,uCAqIH,WAAOvF,GAAP,iBAAA3H,EAAA,sDACNmN,EAAOxF,EAAM+E,cAAcC,QAA3BQ,GACFnC,EAAQrD,EAAMC,OAAOK,MAFb,KAINkF,EAJM,OAKP,aALO,OAaP,UAbO,OAqBP,QArBO,QA6BP,WA7BO,wCAMJ,EAAK9F,SAAS,CAClBsD,cAAeK,EACfC,eAAgB,GAChBE,aAAc,GACdE,YAAa,KAVL,2DAcJ,EAAKhE,SAAS,CAClBsD,cAAe,GACfM,eAAgBD,EAChBG,aAAc,GACdE,YAAa,KAlBL,6DAsBJ,EAAKhE,SAAS,CAClBsD,cAAe,GACfM,eAAgB,GAChBE,aAAcH,EACdK,YAAa,KA1BL,6DA8BJ,EAAKhE,SAAS,CAClBsD,cAAe,GACfM,eAAgB,GAChBE,aAAc,GACdE,YAAaL,IAlCL,4CAuCd,EAAKd,SAvCS,4CArIG,wDA+KnBkD,gBA/KmB,uCA+KD,WAAOzF,GAAP,eAAA3H,EAAA,6DACVmK,EAAYxC,EAAMC,OAAOK,MADf,SAEV,EAAKZ,SAAS,CAAE8C,cAFN,OAGhB,EAAKD,SAHW,2CA/KC,wDAqLnBmD,aArLmB,uCAqLJ,WAAO1F,GAAP,eAAA3H,EAAA,6DACPoK,EAAWzC,EAAMC,OAAOK,MADjB,SAEP,EAAKZ,SAAS,CAAE+C,aAFT,OAGb,EAAKF,SAHQ,2CArLI,wDA2LnB4B,wBA3LmB,uCA2LO,WAAOzB,GAAP,SAAArK,EAAA,sEAClB,EAAKqH,SAAS,CAAEgD,kBADE,OAExB,EAAKH,SAFmB,2CA3LP,wDAgMnB8B,wBAhMmB,uCAgMO,WAAO1B,GAAP,SAAAtK,EAAA,sEAClB,EAAKqH,SAAS,CAAEiD,gBADE,OAExB,EAAKJ,SAFmB,2CAhMP,wDAqMnB+B,sBArMmB,uCAqMK,WAAO1B,GAAP,SAAAvK,EAAA,sEAChB,EAAKqH,SAAS,CAAEkD,gBADA,OAEtB,EAAKL,SAFiB,2CArML,wDA0MnBgC,sBA1MmB,uCA0MK,WAAO1B,GAAP,SAAAxK,EAAA,sDACtB,EAAKqH,SAAS,CAAEmD,cAChB,EAAKN,SAFiB,2CA1ML,wDA+MnBiC,qBA/MmB,uCA+MI,WAAO1B,GAAP,SAAAzK,EAAA,sEACf,EAAKqH,SAAS,CAAEoD,eADD,OAErB,EAAKP,SAFgB,2CA/MJ,wDAoNnBkC,qBApNmB,uCAoNI,WAAO1B,GAAP,SAAA1K,EAAA,sEACf,EAAKqH,SAAS,CAAEqD,aADD,OAErB,EAAKR,SAFgB,2CApNJ,wDAyNnBoD,cAzNmB,uCAyNH,WAAO3F,GAAP,qBAAA3H,EAAA,6DACNwL,EAAa,EAAKrH,MAAlBqH,SACF+B,EAAe/B,EACb5L,EAAO+H,EAAM+E,cAAcC,QAA3B/M,IACF4N,EAAchC,EAASiC,QAAQ7N,MACjBmK,GAClBwD,EAAaG,KAAK9N,GAElB2N,EAAaI,OAAOH,EAAa,GARrB,SAUR,EAAKnG,SAAS,CAAEmE,SAAU+B,IAVlB,OAWd,EAAKrD,SAXS,2CAzNG,wDAuOnB0D,oBAvOmB,uCAuOG,WAAOjG,GAAP,qBAAA3H,EAAA,6DACZyL,EAAsB,EAAKtH,MAA3BsH,kBACFoC,EAAwBpC,EACtB7L,EAAO+H,EAAM+E,cAAcC,QAA3B/M,IACF4N,EAAc/B,EAAkBgC,QAAQ7N,MAC1BmK,GAClB8D,EAAsBH,KAAK9N,GAE3BiO,EAAsBF,OAAOH,EAAa,GARxB,SAUd,EAAKnG,SAAS,CAAEoE,kBAAmBoC,IAVrB,OAWpB,EAAK3D,SAXe,2CAvOH,wDAqPnB4D,gBArPmB,sBAqPD,sBAAA9N,EAAA,sEACV,EAAKqH,SAAS,CAClB+C,SAAU,GACVD,UAAW,GACXqC,qBAAqB,IAJP,OAMhB,EAAKtC,SANW,2CArPC,EA8PnB6D,qBA9PmB,sBA8PI,sBAAA/N,EAAA,sEACf,EAAKqH,SAAS,CAClBgD,cAAe,GACfC,YAAa,GACbW,eAAgB,GAChB2B,qBAAqB,IALF,OAOrB,EAAK1C,SAPgB,2CA9PJ,EAwQnB8D,mBAxQmB,sBAwQE,sBAAAhO,EAAA,sEACb,EAAKqH,SAAS,CAClBkD,YAAa,GACbC,UAAW,GACXW,aAAc,GACdyB,qBAAqB,IALJ,OAOnB,EAAK1C,SAPc,2CAxQF,EAkRnB+D,kBAlRmB,sBAkRC,sBAAAjO,EAAA,sEACZ,EAAKqH,SAAS,CAClBoD,WAAY,GACZC,SAAU,GACVW,YAAa,GACbuB,qBAAqB,IALL,OAOlB,EAAK1C,SAPa,2CAlRD,EA4RnBgE,oBA5RmB,sBA4RG,sBAAAlO,EAAA,sEACd,EAAKqH,SAAS,CAAEsD,cAAe,GAAIoC,yBAAyB,IAD9C,OAEpB,EAAK7C,SAFe,2CA5RH,EAiSnBiE,oBAjSmB,sBAiSG,sBAAAnO,EAAA,sEACd,EAAKqH,SAAS,CAAEmE,SAAU,GAAIyB,sBAAsB,IADtC,OAEpB,EAAK/C,SAFe,2CAjSH,EAsSnBkE,cAAgB,WACd,EAAK/G,SAAS,CACZmF,qBAAqB,EACrBI,qBAAqB,EACrBG,yBAAyB,EACzBE,sBAAsB,EACtBX,yBAAyB,KA1S3B,EAAKnI,MAAQ,CACXqI,qBAAqB,EACrBI,qBAAqB,EACrBG,yBAAyB,EACzBE,sBAAsB,EACtBX,yBAAyB,EACzBO,SAAU,GACV1C,UAAW,GACXC,SAAU,GACVC,cAAe,GACfC,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,SAAU,GACVC,cAAe,GACfM,eAAgB,GAChBE,aAAc,GACdE,YAAa,GACbG,SAAU,GACVC,kBAAmB,IAtBJ,E,mFA4BjB1I,EAD0BsF,KAAKzB,MAAvB7D,mB,+BAqRA,IAAD,EAsBHsF,KAAKlE,MApBPqI,EAFK,EAELA,oBACAI,EAHK,EAGLA,oBACAG,EAJK,EAILA,wBACAE,EALK,EAKLA,qBACAX,EANK,EAMLA,wBACAnC,EAPK,EAOLA,UACAC,EARK,EAQLA,SACAyC,EATK,EASLA,SACAxC,EAVK,EAULA,cACAC,EAXK,EAWLA,YACAC,EAZK,EAYLA,YACAC,EAbK,EAaLA,UACAC,EAdK,EAcLA,WACAC,EAfK,EAeLA,SACAO,EAhBK,EAgBLA,eACAE,EAjBK,EAiBLA,aACAE,EAlBK,EAkBLA,YACAV,EAnBK,EAmBLA,cACAa,EApBK,EAoBLA,SACAC,EArBK,EAqBLA,kBAGI4C,EAAiD,IAA7B5C,EAAkBlD,OAAe,eAAiB,yBAxBrE,EA2BHF,KAAKqD,mBAAmBmB,GAD1BlB,EA1BK,EA0BLA,WAAYC,EA1BP,EA0BOA,SAAUC,EA1BjB,EA0BiBA,mBAAoBE,EA1BrC,EA0BqCA,iBAAkBf,EA1BvD,EA0BuDA,MAG9D,OACE,yBAAKlE,UAAU,sBACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAWuH,EAAmB/F,QAASD,KAAKgE,mBAEnD,yBAAKvF,UAAU,4BACE,KAAdqD,GAAiC,KAAbC,EACjB,0BAAMtD,UAAU,4BAA4BwB,QAASD,KAAKkE,aAA1D,4BAEA,yBAAKzF,UAAU,YACb,0BAAMA,UAAU,kBAAkBwB,QAASD,KAAKkE,aAAhD,4BACA,0BAAMzF,UAAU,kBAAkBwB,QAASD,KAAKyF,iBAAhD,UAKR,yBAAKhH,UAAU,iCACM,KAAlBuD,GAAwC,KAAhBC,GAAyC,KAAnBW,EAC3C,0BAAMnE,UAAU,4BAA4BwH,YAAU,QAAQhG,QAASD,KAAKoE,aAA5E,sBAEA,yBAAK3F,UAAU,YACb,0BAAMA,UAAU,kBAAkBwH,YAAU,QAAQhG,QAASD,KAAKoE,aAAlE,sBACA,0BAAM3F,UAAU,kBAAkBwB,QAASD,KAAK0F,sBAAhD,UAKR,yBAAKjH,UAAU,+BACI,KAAhByD,GAAoC,KAAdC,GAAqC,KAAjBW,EACvC,0BAAMrE,UAAU,4BAA4BwH,YAAU,MAAMhG,QAASD,KAAKoE,aAA1E,sBAEA,yBAAK3F,UAAU,YACb,0BAAMA,UAAU,kBAAkBwH,YAAU,MAAMhG,QAASD,KAAKoE,aAAhE,sBACA,0BAAM3F,UAAU,kBAAkBwB,QAASD,KAAK2F,oBAAhD,UAKR,yBAAKlH,UAAU,8BACG,KAAf2D,GAAkC,KAAbC,GAAmC,KAAhBW,EACrC,0BAAMvE,UAAU,4BAA4BwH,YAAU,SAAShG,QAASD,KAAKoE,aAA7E,gBAEA,yBAAK3F,UAAU,YACb,0BAAMA,UAAU,kBAAkBwH,YAAU,SAAShG,QAASD,KAAKoE,aAAnE,gBACA,0BAAM3F,UAAU,kBAAkBwB,QAASD,KAAK4F,mBAAhD,UAKR,yBAAKnH,UAAU,gCACM,KAAlB6D,EACG,0BAAM7D,UAAU,4BAA4BwB,QAASD,KAAKyE,iBAA1D,gBAEA,yBAAKhG,UAAU,YACb,0BAAMA,UAAU,kBAAkBwB,QAASD,KAAKyE,iBAAhD,gBACA,0BAAMhG,UAAU,kBAAkBwB,QAASD,KAAK6F,qBAAhD,UAIR,yBAAKpH,UAAU,gCACQ,IAApB0E,EAASjD,OACN,0BAAMzB,UAAU,4BAA4BwB,QAASD,KAAK2E,iBAA1D,gBAEA,yBAAKlG,UAAU,YACb,0BAAMA,UAAU,kBAAkBwB,QAASD,KAAK2E,iBAAhD,gBACA,0BAAMlG,UAAU,kBAAkBwB,QAASD,KAAK8F,qBAAhD,UAIP7B,GACC,yBAAKxF,UAAU,UAAUwB,QAASD,KAAK+F,eACrC,kBAACG,GAAD,CACE9C,kBAAmBA,EACnBY,gBAAiBhE,KAAKuF,uBAI3BpB,GACC,yBAAK1F,UAAU,UAAUwB,QAASD,KAAK+F,eACrC,kBAACI,GAAD,CACErE,UAAWA,EACXiD,gBAAiB/E,KAAK+E,gBACtBhD,SAAUA,EACViD,aAAchF,KAAKgF,gBAIxBT,GACC,yBAAK9F,UAAU,UAAUwB,QAASD,KAAK+F,eACrC,kBAAC,GAAD,CACEvB,SAAUA,EACVlB,WAAYA,EACZC,SAAUA,EACVC,mBAAoBA,EACpBE,iBAAkBA,EAClBmB,cAAe7E,KAAK6E,cACpBuB,SAAUzD,KAIf+B,GACC,yBAAKjG,UAAU,UAAUwB,QAASD,KAAK+F,eACrC,kBAAC,GAAD,CAAkBlB,cAAe7E,KAAK6E,cAAeuB,SAAU9D,KAGlEsC,GACC,yBAAKnG,UAAU,UAAUwB,QAASD,KAAK+F,eACrC,kBAACM,GAAD,CAAelD,SAAUA,EAAU8B,cAAejF,KAAKiF,sB,GAzbvCxE,aAictB6F,GAAU,SAAC/H,GAAW,IAClBsG,EAAgCtG,EAAhCsG,cAAeC,EAAiBvG,EAAjBuG,GAAIsB,EAAa7H,EAAb6H,SAE3B,OACE,4BAAQG,UAASzB,EAAIlF,MAAOwG,EAAUhG,SAAUyE,EAAepG,UAAU,iBACvE,4BAAQC,IAAI,UAAUkB,MAAO,KAAM4G,aAAW,UAH/B,CAAC,CAAEC,MAAO,eAAM7G,MAAO,OAAS,CAAE6G,MAAO,eAAM7G,MAAO,SAIzDvC,KAAI,SAACqJ,GAAD,OACd,4BAAQhI,IAAKgI,EAAUD,MAAO7G,MAAO8G,EAAU9G,OAAQ8G,EAAUD,YAMnEE,GAAmB,SAACpI,GAAW,IAC3BsG,EAA4BtG,EAA5BsG,cAAeuB,EAAa7H,EAAb6H,SACvB,OACE,yBAAK3H,UAAU,mBAAmBwB,QAASF,IACzC,yBAAKtB,UAAU,iBAAf,4BACA,kBAAC,GAAD,CAASqG,GAAG,WAAWD,cAAeA,EAAeuB,SAAUA,IAC/D,yBAAK3H,UAAU,qBAKfmI,GAAe,SAACrI,GAAW,IAE7B+E,EAOE/E,EAPF+E,WACAC,EAMEhF,EANFgF,SACAC,EAKEjF,EALFiF,mBACAE,EAIEnF,EAJFmF,iBACAc,EAGEjG,EAHFiG,SACAK,EAEEtG,EAFFsG,cACAlC,EACEpE,EADFoE,MAGIlE,EAAS,kBAAc+F,GAC7B,OACE,yBAAK/F,UAAWA,EAAWwB,QAASF,IAClC,yBAAKtB,UAAU,iBAAf,4BACA,kBAAC,GAAD,CAASqG,GAAIN,EAAUK,cAAeA,EAAeuB,SAAUzD,IAC/D,yBAAKlE,UAAU,mBACf,yBAAKA,UAAU,iBAAf,0DACA,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CACEA,UAAU,oBACVoI,WAAW,aACXC,iBAAe,EACfC,gBAAgB,uCAChBX,SAAU9C,EACVlD,SAAUoD,IAEZ,kBAAC,KAAD,CACE/E,UAAU,oBACVoI,WAAW,aACXC,iBAAe,EACfC,gBAAgB,uCAChBX,SAAU7C,EACVnD,SAAUsD,OAOdyC,GAAezF,YAAQiB,GAARjB,EAAyB,SAACnC,GAAW,IAEtDuD,EACEvD,EADFuD,UAAWlI,EACT2E,EADS3E,SAAUmL,EACnBxG,EADmBwG,gBAAiBhD,EACpCxD,EADoCwD,SAAUiD,EAC9CzG,EAD8CyG,aAGlD,OACE,yBAAKvG,UAAU,eAAewB,QAASF,IACrC,yBAAKtB,UAAU,iBAAf,0DACA,4BAAQmB,MAAOkC,EAAW1B,SAAU2E,EAAiBtG,UAAU,mBAC7D,4BAAQC,IAAI,UAAUkB,MAAO,KAAM4G,aAAW,kBAC7C5M,EAASyD,KAAI,SAACvD,GAAD,OACZ,4BAAQ4E,IAAK5E,EAAQgF,KAAMc,MAAO9F,EAAQvC,IAAKuC,EAAQgF,UAG3D,yBAAKL,UAAU,mBACf,yBAAKA,UAAU,iBAAf,8CACA,2BAAO3H,KAAK,OAAO2H,UAAU,eAAemB,MAAOmC,EAAU3B,SAAU4E,QAKvEqB,GAAgB3F,YAAQiB,GAARjB,EAAyB,SAACnC,GAAW,IACjD5D,EAAmC4D,EAAnC5D,MAAOwI,EAA4B5E,EAA5B4E,SAAU8B,EAAkB1G,EAAlB0G,cACzB,OACE,yBAAKxG,UAAU,eAAewB,QAASF,IACrC,yBAAKtB,UAAU,iBAAf,8CACA,yBAAKA,UAAU,wBACZ9D,EAAM0C,KAAI,SAACxC,GACV,IAAMsK,EAAchC,EAASiC,QAAQhI,OAAOvC,EAAKtD,KACjD,OACE,yBAAKmH,IAAK7D,EAAKtD,GAAIkH,UAAU,UAC3B,yBAAKuI,UAASnM,EAAKtD,GAAI0I,QAASgF,EAAexG,UAAU,mBACvD,yBAAK6B,IAAKzF,EAAKgE,OAAQ0B,IAAK1F,EAAKiE,KAAML,UAAU,kBAChD0G,IAAgBzD,IAAY,yBAAKjD,UAAU,sBAE9C,yBAAKA,UAAU,gBAAgB5D,EAAKiE,eAS5CoH,GAAmBxF,YAAQiB,GAARjB,EAAyB,SAACnC,GAAW,IACpD/F,EAAkD+F,EAAlD/F,UAAW4K,EAAuC7E,EAAvC6E,kBAAmBY,EAAoBzF,EAApByF,gBACtC,OACE,yBAAKvF,UAAU,mBAAmBwB,QAASF,IACzC,yBAAKtB,UAAU,iBAAf,0DACA,yBAAKA,UAAU,2BACZjG,EAAU6E,KAAI,SAACvE,GACd,IAAMqM,EAAc/B,EAAkBgC,QAAQhI,OAAOtE,EAASvB,KAC9D,OACE,yBAAKmH,IAAK5F,EAASvB,GAAIkH,UAAU,YAC/B,yBAAKuI,UAASlO,EAASvB,GAAI0I,QAAS+D,EAAiBvF,UAAU,qBAC7D,yBAAKA,UAAU,iBAAiBwI,MAAO,CAAEC,gBAAiBpO,EAASqO,SAClEhC,IAAgBzD,IAAY,yBAAKjD,UAAU,wBAE9C,yBAAKA,UAAU,kBAAkB3F,EAASgG,eASzC4B,eAAQiB,IA7kBI,SAACjK,GAAc,IAChCuC,EAAmB2G,EACnBlG,EAAkBiG,GAC1B,MAAO,CACL1G,eAAgB,SAACtB,GAAD,OAAYjB,EAASuC,EAAetB,KACpD+B,cAAe,kBAAMhD,EAASgD,SAwkBnBgG,CAA6CkB,IC1kBtDwF,I,OAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACdA,EAAQhK,KAAI,SAACiK,EAAQC,GACnB,OAAIA,EAAI,EACC,KAELA,EAAI,EACC,yBAAK7I,IAAK4I,EAAOxI,KAAMwB,IAAKgH,EAAOzI,OAAQ0B,IAAK+G,EAAOxI,KAAML,UAAU,iBAEzE,yBAAKC,IAAKtB,OAAOmK,GAAI9I,UAAU,wBAAwB4I,EAAQnH,aAgD3DQ,gBAxES,SAAC5E,GAEvB,MAAO,CACLP,oBAFeO,EAAT3B,KAEoBoB,wBAIH,SAAC7D,GAAc,IAChCsD,EAAiByG,GACjBrH,EAAewG,EACvB,MAAO,CACL5F,aAAc,gBAAGE,EAAH,EAAGA,OAAH,OAAgBxD,EAASsD,EAAa,CAAEE,aACtDd,WAAY,SAAC7C,GAAD,OAAQG,EAAS0C,EAAW7C,QA4D7BmJ,EA5CF,SAACnC,GAAW,IACff,EAA+Be,EAA/Bf,MAAOjC,EAAwBgD,EAAxBhD,oBACTiM,EAAgB,SAAClI,GACrBA,EAAMS,kBADyB,IAEvBxI,EAAO+H,EAAM+E,cAAcC,QAA3B/M,IAER6C,EADuBmE,EAAfnE,YACG7C,IAGP0I,EAAU,SAACX,IAGftE,EAFyBuD,EAAjBvD,cAEK,CAAEE,OADAoE,EAAM+E,cAAcC,QAA3B/M,MAIV,OACEiG,EAAMH,KAAI,SAAClD,GACT,IAAMsE,EAAqC,aAAzBtE,EAAKsN,gBAAiC,OAAS,iBACjE,OACE,yBAAK/I,IAAKvE,EAAK5C,GAAIyP,UAAS7M,EAAK5C,GAAIkH,UAAWA,EAAWwB,QAASA,GAClE,yBAAKxB,UAAU,cACZlD,EACC,kBAAC,KAAD,CACEyL,UAAS7M,EAAK5C,GACd8I,KAAM,CAAC,MAAO,gBACd5B,UAAU,eACVwB,QAASuH,IAET,yBAAK/I,UAAU,iBAAiBwI,MAAO,CAAEC,gBAAiB/M,EAAKrB,SAASqO,UAE9E,yBAAK1I,UAAU,cAActE,EAAK2E,MAClC,yBAAKL,UAAU,mBAAmBtE,EAAKuN,WACvC,yBAAKjJ,UAAU,iBAAiBtE,EAAKwN,SACrC,yBAAKlJ,UAAU,gBAAgBtE,EAAK4I,QACpC,yBAAKtE,UAAU,kBAAkBtE,EAAK8I,UACtC,yBAAKxE,UAAU,kBACb,kBAAC,GAAD,CAAS4I,QAASlN,EAAKQ,gBCxD7B+G,I,OAAY,GAyBZkG,G,YACJ,WAAYrJ,GAAQ,IAAD,uBACjB,8CAAMA,KAqBRsJ,kBAtBmB,sBAsBC,wDAAAlQ,EAAA,6DACVuD,EAAW,EAAKqD,MAAhBrD,OACFpD,EAAQC,aAAaC,QAAQ,SAC7BJ,EAAMnB,EAAMoB,gBAAN,iBAAgCqD,EAAhC,UAHM,SAIKjD,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YANR,UAQM,OAJlBA,EAJY,QAQLC,OARK,wBASR3B,EAAgB,EAAK2H,MAArB3H,aACIM,GAVI,6BAuBdoB,EAASG,KAAK0B,KARhB/C,EAfgB,EAehBA,YACAsQ,EAhBgB,EAgBhBA,UACAC,EAjBgB,EAiBhBA,QACA5E,EAlBgB,EAkBhBA,OACAjE,EAnBgB,EAmBhBA,KACA2I,EApBgB,EAoBhBA,gBACAK,EArBgB,EAqBhBA,QACAC,EAtBgB,EAsBhBA,WAGIC,EAA+B,aAApBP,EACXQ,EAAgBH,EAAQzK,KAAI,SAAC6K,GAAD,OAAY9K,OAAO8K,MACrD,EAAKlJ,SAAS,CACZF,OACAkJ,WACA5Q,cACAsQ,UAAW,IAAIS,KAAKT,GACpBC,QAAS5E,EAAS,IAAIoF,KAAKpF,GAAU,IAAIoF,KAAKR,GAC9CxE,SAAU8E,EACVG,iBAAkBL,IAlCF,4CAtBD,EA4DnBpI,aAAe,SAACL,GACd,IAAMR,EAAOQ,EAAMC,OAAOK,MAC1B,EAAKZ,SAAS,CAAEF,UA9DC,EAiEnBuJ,iBAAmB,SAAC/I,GAClB,IAAM8I,EAAmB9I,EAAMC,OAAOK,MACtC,EAAKZ,SAAS,CAAEoJ,sBAnEC,EAsEnBE,kBAAoB,SAACC,GACnB,EAAKvJ,SAAS,CAAE0I,UAAWa,KAvEV,EA0EnBC,gBAAkB,SAACD,GACjB,EAAKvJ,SAAS,CAAE2I,QAASY,KA3ER,EA8EnBE,QAAU,WAAO,IACPT,EAAa,EAAKlM,MAAlBkM,SACR,EAAKhJ,SAAS,CAAEgJ,UAAWA,KAhFV,EAmFnB/C,cAAgB,SAAC3F,GAAW,IAClB6D,EAAa,EAAKrH,MAAlBqH,SACF+B,EAAe/B,EACb5L,EAAO+H,EAAM+E,cAAcC,QAA3B/M,GACF4N,EAAchC,EAASiC,QAAQ7N,GACjC4N,IAAgBzD,GAClBwD,EAAaG,KAAK9N,GAElB2N,EAAaI,OAAOH,EAAa,GAEnC,EAAKnG,SAAS,CAAEmE,SAAU+B,KA7FT,EAgGnBwD,oBAAsB,SAACpJ,GACrB,IAAMlI,EAAckI,EAAMC,OAAOK,MACjC,EAAKZ,SAAS,CAAE5H,iBAlGC,EAqGnBuR,aAAe,WAAO,IAAD,EACe,EAAKpK,MAA/BtD,EADW,EACXA,UAAWf,EADA,EACAA,WADA,EASf,EAAK4B,MANPgD,EAHiB,EAGjBA,KACAsJ,EAJiB,EAIjBA,iBACAV,EALiB,EAKjBA,UACAC,EANiB,EAMjBA,QACAxE,EAPiB,EAOjBA,SAeFjJ,EAVe,CACb4E,OACA1H,YAdiB,EAQjBA,YAOA6L,SAJe2F,KAAOjB,GAASkB,KAAKD,KAAOlB,GAAY,QAKvDoB,YAAaV,EACb7F,WAAYtH,EACZwH,WAAYiF,EACZ7E,SAAU8E,EACVoB,SAAU5F,KAzHK,EA8HnBjE,aAAe,WAAO,IAAD,EASf,EAAKpD,MAPPgD,EAFiB,EAEjBA,KACAsJ,EAHiB,EAGjBA,iBACAV,EAJiB,EAIjBA,UACAC,EALiB,EAKjBA,QACAK,EANiB,EAMjBA,SACA7E,EAPiB,EAOjBA,SAMIxK,EAAS,CACbmG,OACA1H,YAfiB,EAQjBA,YAQA6L,SALe2F,KAAOjB,GAASkB,KAAKD,KAAOlB,GAAY,QAMvDsB,iBALuBhB,EAAW,WAAa,WAM/Cc,YAAaV,EACb3F,WAAYiF,EACZ3E,OAAQ4E,EACRoB,SAAU5F,GArBO,EAuBY,EAAK5E,MAA5BrD,EAvBW,EAuBXA,QACRb,EAxBmB,EAuBHA,YACLa,EAAQvC,IAtJF,EAyJnBmH,eAAiB,SAACR,GAAD,OAAWA,EAAMS,mBAzJf,IAET7E,EAAW,EAAKqD,MAAhBrD,OAFS,OAGjB,EAAKa,OAASb,EAAS,OAAS,MAChC,EAAK+N,OAAS/N,EAAS,EAAKgE,aAAe,EAAKyJ,aAChD,EAAK7M,MAAQ,CACXgD,KAAM,GACNsJ,iBAAkB,GAClBV,UAAW,KACXC,QAAS,KACTK,UAAU,EACV7E,SAAU,GACV/L,YAAa,IAZE,E,kFAiBG,SAAhB4I,KAAKjE,QACPiE,KAAK6H,sB,+BAyIC,IAAD,OACD1Q,EAAwB,SAAhB6I,KAAKjE,OAAoB,cAAgB,WADhD,EAIHiE,KAAKzB,MADPpD,EAHK,EAGLA,cAAe3C,EAHV,EAGUA,UAAWmC,EAHrB,EAGqBA,MAAO5B,EAH5B,EAG4BA,OAH5B,EAcHiH,KAAKlE,MAPPsM,EAPK,EAOLA,iBACAtJ,EARK,EAQLA,KACA4I,EATK,EASLA,UACAC,EAVK,EAULA,QACAK,EAXK,EAWLA,SACA7E,EAZK,EAYLA,SACA/L,EAbK,EAaLA,YAGF,OACE,yBAAKqH,UAAU,eAAewB,QAAS9E,GACrC,yBAAKsD,UAAU,WAAWwB,QAASD,KAAKF,gBACtC,yBAAKrB,UAAU,kBAAkBwB,QAAS9E,GAA1C,QACA,yBAAKsD,UAAU,mBAAmBtH,GACf,IAAlB4B,EAAOmH,QAAgB,kBAAC,GAAD,CAAcnE,OAAO,gBAAgBhD,OAAQA,IACrE,yBAAK0F,UAAU,eACb,yBAAKA,UAAU,sBAAf,4BACA,2BACE3H,KAAK,OACL2H,UAAU,oBACVmB,MAAOd,EACPsB,SAAUJ,KAAKL,gBAGnB,yBAAKlB,UAAU,eACb,yBAAKA,UAAU,sBAAf,4BACA,4BACEmB,MAAOwI,EACPhI,SAAUJ,KAAKqI,iBACf5J,UAAU,yBAEV,4BAAQC,IAAI,UAAUkB,MAAO,KAAM4G,aAAW,cAC7ChO,EAAU6E,KAAI,SAACvE,GAAD,OACb,4BAAQ4F,IAAK5F,EAASvB,GAAIqI,MAAO9G,EAASvB,IAAKuB,EAASgG,UAG5D,yBAAKL,UAAU,yBAEjB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,sBAAf,sBACA,kBAAC,KAAD,CACEA,UAAU,oBACVoI,WAAW,aACXC,iBAAe,EACfV,SAAUsB,EACVtH,SAAUJ,KAAKsI,qBAGnB,yBAAK7J,UAAU,eACb,yBAAKA,UAAU,sBAAf,sBACA,kBAAC,KAAD,CACEA,UAAU,oBACVoI,WAAW,aACXC,iBAAe,EACfV,SAAUuB,EACVvH,SAAUJ,KAAKwI,mBAGF,SAAhBxI,KAAKjE,QACJ,yBAAK0C,UAAU,eACb,yBAAKA,UAAU,sBAAf,gBACA,yBAAKA,UAAU,wBAAwBwB,QAASD,KAAKyI,SACnD,yBAAKhK,UAAU,yBACb,kBAAC,KAAD,CAAiB4B,KAAM,CAAC,MAAO,YAC9B2H,GAAY,kBAAC,KAAD,CAAiB3H,KAAM,CAAC,MAAO,SAAU5B,UAAU,4BAKxE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,sBAAf,gBACA,yBAAKA,UAAU,yBACZ9D,EAAM0C,KAAI,SAACxC,GACV,IAAMsK,EAAchC,EAASiC,QAAQhI,OAAOvC,EAAKtD,KACjD,OACE,yBAAKmH,IAAK7D,EAAKtD,GAAIkH,UAAU,UAC3B,yBAAKuI,UAASnM,EAAKtD,GAAI0I,QAAS,EAAKgF,cAAexG,UAAU,mBAC5D,yBAAK6B,IAAKzF,EAAKgE,OAAQ0B,IAAK1F,EAAKiE,KAAML,UAAU,kBAChD0G,IAAgBzD,IAAY,yBAAKjD,UAAU,sBAE9C,yBAAKA,UAAU,gBAAgB5D,EAAKiE,YAM9C,yBAAKL,UAAU,eACb,yBAAKA,UAAU,sBAAf,gBACA,8BACEA,UAAU,2BACVmB,MAAOxI,EACPgJ,SAAUJ,KAAK0I,uBAGnB,4BAAQ5R,KAAK,SAASmJ,QAASD,KAAKiJ,OAAQxK,UAAU,oBACnDtH,S,GAlQUsJ,aA0QRC,gBAjSS,SAAC5E,GAAW,IAC1BhD,EAAgCgD,EAAhChD,SAAU4E,EAAsB5B,EAAtB4B,QAASC,EAAa7B,EAAb6B,SAC3B,MAAO,CACLhD,MAAO+C,EAAQ/C,MACfnC,UAAWM,EAASN,UACpB0C,OAAQyC,EAASzC,OACjBD,UAAW0C,EAAS1C,UACpBlC,OAAQ4E,EAAS5E,WAIM,SAACrB,GAAc,IAChCyD,EAAkBsG,GAClBvH,EAA2B0G,EAAfvG,EAAeuG,EAC3BhK,EAAgBiK,EACxB,MAAO,CACL1F,cAAe,kBAAMzD,EAASyD,MAC9BjB,WAAY,SAACvB,GAAD,OAAYjB,EAASwC,EAAWvB,KAC5C0B,WAAY,SAAC9C,EAAIoB,GAAL,OAAgBjB,EAAS2C,EAAW9C,EAAIoB,KACpD/B,YAAa,SAACC,GAAD,OAAaa,EAASd,EAAYC,QA8QpC6J,CAA6CkH,IC/QtDsB,G,YACJ,WAAY3K,GAAQ,IAAD,uBACjB,8CAAMA,KAgBR4K,qBAjBmB,sBAiBI,wCAAAxR,EAAA,6DACbsD,EAAc,EAAKsD,MAAnBtD,UACFrD,EAAMnB,EAAMoB,gBAAN,oBAAmCoD,EAAnC,UACNnD,EAAQC,aAAaC,QAAQ,SAHd,SAIEC,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiBL,KAC3BM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YANL,UAQG,OAJlBA,EAJe,QAQRC,OARQ,wBASX3B,EAAgB,EAAK2H,MAArB3H,aACIM,GAVO,6BAaSoB,EAASG,KAAKqB,QAApCgF,EAba,EAabA,KAAM1H,EAbO,EAaPA,YACd,EAAK4H,SAAS,CAAEF,OAAM1H,gBAdD,4CAjBJ,EAkCnBuR,aAAe,WAAO,IACZ9O,EAAkB,EAAK0E,MAAvB1E,cADW,EAEW,EAAKiC,MAEnCjC,EADe,CAAEiF,KAHE,EAEXA,KACe1H,YAHJ,EAELA,eApCG,EAyCnBoQ,cAAgB,WAAO,IAAD,EAC8B,EAAKjJ,MAA/CxE,EADY,EACZA,cAAekB,EADH,EACGA,WAOvBrE,EARoB,EACcA,aACZ,CACpBE,KAAM,MACNK,MAAM,WAAD,OAAaF,GAClBG,YAAaJ,EACbiF,QAAS,kBAAMlC,EAAckB,OA/Cd,EAoDnBiE,aAAe,WAAO,IAAD,EACkB,EAAKX,MAAlCvE,EADW,EACXA,cAAeiB,EADJ,EACIA,UADJ,EAEW,EAAKa,MAEnC9B,EAAciB,EADC,CAAE6D,KAHE,EAEXA,KACe1H,YAHJ,EAELA,eAtDG,EA2DnBuI,aAAe,SAACL,GACd,IAAMR,EAAOQ,EAAMC,OAAOK,MAC1B,EAAKZ,SAAS,CAAEF,UA7DC,EAgEnB4J,oBAAsB,SAACpJ,GACrB,IAAMlI,EAAckI,EAAMC,OAAOK,MACjC,EAAKZ,SAAS,CAAE5H,iBAlEC,EAqEnB0I,eAAiB,SAACR,GAAD,OAAWA,EAAMS,mBArEf,IAET9E,EAAc,EAAKsD,MAAnBtD,UAFS,OAGjB,EAAKc,OAASd,EAAY,OAAS,MACnC,EAAKgO,OAAShO,EAAY,EAAKiE,aAAe,EAAKyJ,aACnD,EAAK7M,MAAQ,CACXgD,KAAM,GACN1H,YAAa,IAPE,E,kFAYG,SAAhB4I,KAAKjE,QACPiE,KAAKmJ,yB,+BA0DC,IAAD,EAC8BnJ,KAAKzB,MAAlC7E,EADD,EACCA,iBAAkBX,EADnB,EACmBA,OADnB,EAEuBiH,KAAKlE,MAA3BgD,EAFD,EAECA,KAAM1H,EAFP,EAEOA,YAERD,EAAwB,QAAhB6I,KAAKjE,OAAmB,iBAAmB,iBACzD,OACE,yBAAK0C,UAAU,eAAewB,QAASvG,GACrC,yBAAK+E,UAAU,YAAYwB,QAASD,KAAKF,gBACvC,yBAAKrB,UAAU,oBAAoBtH,GAChB,IAAlB4B,EAAOmH,QAAgB,kBAAC,GAAD,CAAcnE,OAAO,mBAAmBhD,OAAQA,IACxE,2BACEjC,KAAK,OACL2H,UAAU,uBACV+B,YAAY,+DACZZ,MAAOd,EACPsB,SAAUJ,KAAKL,eAEjB,8BACElB,UAAU,sBACV+B,YAAY,2EACZZ,MAAOxI,EACPgJ,SAAUJ,KAAK0I,sBAEjB,4BAAQ5R,KAAK,SAASmJ,QAASD,KAAKiJ,OAAQxK,UAAU,qBACnDtH,GAEc,SAAhB6I,KAAKjE,QACJ,4BAAQjF,KAAK,SAASmJ,QAASD,KAAKwH,cAAe/I,UAAU,6BAA7D,wB,GAnGc8C,iBA6GXb,gBApIS,SAAC5E,GAAW,IAC1BwB,EAAgBxB,EAAhBwB,YACR,MAAO,CACLrC,UAAWqC,EAAY/F,GACvBwB,OAAQuE,EAAYvE,WAIG,SAACrB,GAAc,IAChCd,EAAgBiK,EAEtBnH,EACEkH,EADgB/G,EAChB+G,EAD+B7G,EAC/B6G,EAD8C5G,EAC9C4G,EAEJ,MAAO,CACLlH,iBAAkB,kBAAMhC,EAASgC,MACjCG,cAAe,SAAClB,GAAD,OAAYjB,EAASmC,EAAclB,KAClDoB,cAAe,SAACkB,GAAD,OAAevD,EAASqC,EAAckB,KACrDjB,cAAe,SAACiB,EAAWtC,GAAZ,OAAuBjB,EAASsC,EAAciB,EAAWtC,KACxE/B,YAAa,SAACC,GAAD,OAAaa,EAASd,EAAYC,QAiHpC6J,CAA6CwI,IClHtDE,G,YACJ,WAAY7K,GAAQ,IAAD,8BACjB,8CAAMA,KAYRoK,aAAe,WAAO,IAAD,EACI,EAAK7M,MAApBgD,EADW,EACXA,KAAMuK,EADK,EACLA,KADK,EAEqB,EAAK9K,MAArCtD,EAFW,EAEXA,WAERsB,EAJmB,EAEAA,kBACJ,CAAEuC,OAAMlH,IAAKyR,GACHpO,IAjBR,EAoBnBuM,cApBmB,uCAoBH,WAAOlI,GAAP,eAAA3H,EAAA,sDACNJ,EAAO+H,EAAM+E,cAAcC,QAA3B/M,IACAkF,EAAqB,EAAK8B,MAA1B9B,kBACSlF,GAHH,2CApBG,wDA0BnBoI,aAAe,SAACL,GACd,IAAMR,EAAOQ,EAAMC,OAAOK,MAC1B,EAAKZ,SAAS,CAAEF,UA5BC,EA+BnBwK,YAAc,SAAChK,GACb,IAAM+J,EAAO/J,EAAMC,OAAOK,MAC1B,EAAKZ,SAAS,CAAEqK,UAjCC,EAoCnBtJ,gBAAkB,SAACT,GAAD,OAAWA,EAAMS,mBAlCjC,EAAKjE,MAAQ,CACXgD,KAAM,GACNuK,KAAM,IAJS,E,kFAQE,IAAD,EACsBrJ,KAAKzB,MAArCtD,EADU,EACVA,WACRoB,EAFkB,EACCA,kBACFpB,K,+BA4BT,IAAD,SAC8C+E,KAAKzB,MAAlDnC,EADD,EACCA,oBAAqBE,EADtB,EACsBA,YAAavD,EADnC,EACmCA,OADnC,EAEgBiH,KAAKlE,MAApBgD,EAFD,EAECA,KAAMuK,EAFP,EAEOA,KAEd,OACE,yBAAK5K,UAAU,eAAewB,QAAS7D,GACrC,yBAAKqC,UAAU,YAAYwB,QAASD,KAAKD,iBACvC,yBAAKtB,UAAU,oBAAf,eACmB,IAAlB1F,EAAOmH,QAAgB,kBAAC,GAAD,CAAcnE,OAAO,WAAWhD,OAAQA,IAChE,yBAAK0F,UAAU,gBACb,2BACE3H,KAAK,OACL2H,UAAU,qBACV+B,YAAY,QACZZ,MAAOd,EACPsB,SAAUJ,KAAKL,eAEjB,2BACE7I,KAAK,OACL2H,UAAU,oBACV+B,YAAY,MACZZ,MAAOyJ,EACPjJ,SAAUJ,KAAKsJ,cAEjB,kBAAC,KAAD,CACEjJ,KAAM,CAAC,MAAO,eACd5B,UAAU,oBACVwB,QAASD,KAAK2I,gBAGlB,yBAAKlK,UAAU,YACZnC,EAAYe,KAAI,SAACb,GAAD,OACf,yBAAKiC,UAAU,UAAUC,IAAKlC,EAAWjF,IACvC,kBAAC,KAAD,CAAiB8I,KAAM,CAAC,MAAO,QAAS5B,UAAU,kBAClD,uBACEc,OAAO,SACPgK,IAAI,sBACJC,KAAMhN,EAAW5E,IACjB6G,UAAU,iBAETjC,EAAWsC,MAEd,kBAAC,KAAD,CACEuB,KAAM,CAAC,MAAO,aACd5B,UAAU,kBACVuI,UAASxK,EAAWjF,GACpB0I,QAAS,EAAKuH,2B,GArFH/G,aAgGdC,gBAvHS,SAAC5E,GAAW,IAC1B+B,EAA+B/B,EAA/B+B,eAAgBrB,EAAeV,EAAfU,WACxB,MAAO,CACLvB,UAAW4C,EAAe5C,UAC1BwO,sBAAuB5L,EAAetE,QACtCR,OAAQ8E,EAAe9E,OACvBuD,YAAaE,EAAWF,gBAID,SAAC5E,GAAc,IAEtC0E,EACEsN,GADmBrN,EACnBqN,GADqCnN,EACrCmN,GADuDjN,EACvDiN,GAEJ,MAAO,CACLtN,oBAAqB,kBAAM1E,EAAS0E,MACpCC,iBAAkB,SAACpB,GAAD,OAAevD,EAAS2E,EAAiBpB,KAC3DsB,iBAAkB,SAAC5D,EAAQsC,GAAT,OAAuBvD,EAAS6E,EAAiB5D,EAAQsC,KAC3EwB,iBAAkB,SAAClF,GAAD,OAAQG,EAAS+E,EAAiBlF,QAoGzCmJ,CAA6C0I,ICnFtDO,I,mNAcJC,mBAAqB,SAACtK,IAGpB7F,EAF4B,EAAK8E,MAAzB9E,iBACO6F,EAAM+E,cAAcC,QAA3B/M,K,EAIVsS,eAAiB,SAACvK,IAGhBtE,EAFyB,EAAKuD,MAAtBvD,cAEK,CAAEC,UADAqE,EAAM+E,cAAcC,QAA3B/M,M,EAIVuS,sBAAwB,SAACxK,IAGvBnD,EAF+B,EAAKoC,MAA5BpC,oBACOmD,EAAM+E,cAAcC,QAA3B/M,K,qFAzBRoC,EAD2BqG,KAAKzB,MAAxB5E,oB,yCAISoQ,GAAgB,IAAD,EACqB/J,KAAKzB,MAAlD3E,EADwB,EACxBA,SAAUF,EADc,EACdA,iBAAkB3C,EADJ,EACIA,aAChCgT,EAAcnQ,SAASsG,SAAWtG,EAASsG,SAC7CxG,IACA3C,O,+BAsBM,IAAD,SAGHiJ,KAAKzB,MADP3E,EAFK,EAELA,SAAUoQ,EAFL,EAEKA,mBAAoBC,EAFzB,EAEyBA,gBAAiBR,EAF1C,EAE0CA,sBAGjD,OACE,oCACGO,GAAsB,kBAAC,GAAD,MACtBC,GAAmB,kBAAC,GAAD,MACnBR,GAAyB,kBAAC,GAAD,MACzB7P,EAASyD,KAAI,SAACvD,EAASoQ,GAAV,OACZ,yBAAKxL,IAAK5E,EAAQvC,GAAIkH,UAAU,WAC9B,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,uBAAuB3E,EAAQgF,MAC9C,kBAAC,KAAD,CACEuB,KAAM,CAAC,MAAO,QACd5B,UAAU,sBACVuI,UAASlN,EAAQvC,GACjB0I,QAAS,EAAK2J,qBAEhB,kBAAC,KAAD,CACEvJ,KAAM,CAAC,MAAO,QACd5B,UAAU,yBACVuI,UAASlN,EAAQvC,GACjB0I,QAAS,EAAK4J,iBAEhB,kBAAC,KAAD,CACExJ,KAAM,CAAC,MAAO,QACd5B,UAAU,sBACVuI,UAASlN,EAAQvC,GACjB0I,QAAS,EAAK6J,yBAGjBhQ,EAAQ0D,OAAS,kBAAC,GAAD,CAAM0M,MAAOA,EAAO1M,MAAO1D,EAAQ0D,iB,GAjE1CiD,cAyERC,gBAvGS,SAAC5E,GAAW,IAEhCwB,EACExB,EADFwB,YAAaxD,EACXgC,EADWhC,QAAS6D,EACpB7B,EADoB6B,SAAUE,EAC9B/B,EAD8B+B,eAGlC,MAAO,CACLmM,mBAAoB1M,EAAY/D,QAChC0B,UAAWqC,EAAY/F,GACvBqC,SAAUE,EAAQF,SAClBqQ,gBAAiBtM,EAASpE,QAC1B2B,OAAQyC,EAASpG,GACjBkS,sBAAuB5L,EAAetE,YAIf,SAAC7B,GAAc,IAChC+B,EAAsDmH,EAArClH,EAAqCkH,EAAnBjH,EAAmBiH,EACtD5F,EAAiByG,GACjB1K,EAAiB8J,EACjB1E,EAAuBuN,GAC/B,MAAO,CACLjQ,gBAAiB,SAAClC,GAAD,OAAQG,EAAS+B,EAAgBlC,KAClDmC,iBAAkB,kBAAMhC,EAASgC,MACjCC,eAAgB,kBAAMjC,EAASiC,MAC/BqB,aAAc,gBAAGC,EAAH,EAAGA,UAAH,OAAmBvD,EAASsD,EAAa,CAAEC,gBACzDlE,aAAc,kBAAMW,EAASX,MAC7BoF,mBAAoB,SAAClB,GAAD,OAAevD,EAASyE,EAAmBlB,QA6EpDyF,CAA6CiJ,IChFtDQ,G,YACJ,WAAY5L,GAAQ,IAAD,uBACjB,8CAAMA,KAmBR6L,eApBmB,sBAoBF,gCAAAzS,EAAA,6DACTC,EAAMnB,EAAMoB,gBAAgB,WADnB,SAEQI,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiB,EAAKL,SAChCM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YAJX,UAMS,OAJlBA,EAFS,QAMFC,OANE,uBAOL3B,EAAgB,EAAK2H,MAArB3H,aACIM,GARC,0BAWPmT,EAAW/R,EAASG,KAApB4R,OACR,EAAKrL,SAAS,CAAEqL,WAZD,4CApBE,EAmCnBC,sBAnCmB,sBAmCK,kCAAA3S,EAAA,6DACd4S,EAAe,EAAKhM,MAApBgM,WACF3S,EAAMnB,EAAMoB,gBAAN,qBAAoC0S,EAApC,UAFU,SAGCtS,IAAMC,IAAIN,EAAK,CACpCO,QAAS,CAAE,gBAAiB,EAAKL,SAChCM,OAAM,SAACC,GAAD,OAAWA,EAAMC,YALJ,UAOE,OAJlBA,EAHgB,QAOTC,OAPS,uBAQZ3B,EAAgB,EAAK2H,MAArB3H,aACIM,GATQ,0BAYd4B,EAAaR,EAASG,KAAtBK,SACR,EAAKkG,SAAS,CAAEF,KAAMhG,EAASgG,KAAM0L,YAAapN,OAAOtE,EAAS2R,YAb5C,4CAnCL,EAmDnB9B,aAAe,WAAO,IACZjQ,EAAmB,EAAK6F,MAAxB7F,eADW,EAEW,EAAKoD,MAA3B0O,EAFW,EAEXA,YAER9R,EADe,CAAEoG,KAHE,EAEEA,KACE2L,SAAUD,KAtDhB,EA0DnBhD,cAAgB,WAAO,IAAD,EACgC,EAAKjJ,MAAjDvF,EADY,EACZA,eAAgBuR,EADJ,EACIA,YAOxB3T,EARoB,EACgBA,aACd,CACpBE,KAAM,MACNK,MAAM,YAAD,OAAcF,GACnBG,YAAaJ,EACbiF,QAAS,kBAAMjD,EAAeuR,OAhEf,EAqEnBrL,aArEmB,sBAqEJ,0CAAAvH,EAAA,+DAC0C,EAAK4G,MAApDgM,EADK,EACLA,WAAYpR,EADP,EACOA,eAAgBQ,EADvB,EACuBA,eADvB,EAEiB,EAAKmC,MAA3B0O,EAFK,EAELA,YAAa1L,EAFR,EAEQA,KACfnG,EAAS,CAAEmG,OAAM2L,SAAUD,GAHpB,SAIPrR,EAAeoR,EAAY5R,GAJpB,OAKbgB,IALa,2CArEI,EA6EnB+Q,YAAc,SAACpL,GACb,IAAMkL,EAAclL,EAAMC,OAAO+E,QAAQ6C,MACzC,EAAKnI,SAAS,CAAEwL,iBA/EC,EAkFnB7K,aAAe,SAACL,GACd,IAAMR,EAAOQ,EAAMC,OAAOK,MAC1B,EAAKZ,SAAS,CAAEF,UApFC,EAuFnBgB,eAAiB,SAACR,GAAD,OAAWA,EAAMS,mBAvFf,IAETwK,EAAe,EAAKhM,MAApBgM,WAFS,OAGjB,EAAKxO,OAASwO,EAAa,OAAS,MACpC,EAAKtB,OAASsB,EAAa,EAAKrL,aAAe,EAAKyJ,aACpD,EAAK7M,MAAQ,CACXgD,KAAM,GACNuL,OAAQ,GACRG,YAAa,IARE,E,kFAajBxK,KAAKlI,MAAQC,aAAaC,QAAQ,SAClCgI,KAAKoK,iBACe,SAAhBpK,KAAKjE,QACPiE,KAAKsK,0B,+BA0EP,IAAMnT,EAAwB,QAAhB6I,KAAKjE,OAAmB,kBAAoB,kBADnD,EAE+BiE,KAAKzB,MAAnC/G,EAFD,EAECA,kBAAmBuB,EAFpB,EAEoBA,OAFpB,EAG+BiH,KAAKlE,MAAnCgD,EAHD,EAGCA,KAAMuL,EAHP,EAGOA,OAAQG,EAHf,EAGeA,YAEtB,OACE,yBAAK/L,UAAU,eAAewB,QAASzI,GACrC,yBAAKiH,UAAU,YAAYwB,QAASD,KAAKF,gBACvC,yBAAKrB,UAAU,oBAAoBtH,GAChB,IAAlB4B,EAAOmH,QAAgB,kBAAC,GAAD,CAAcnE,OAAO,oBAAoBhD,OAAQA,IACzE,2BACEjC,KAAK,OACL2H,UAAU,uBACV+B,YAAY,mDACZZ,MAAOd,EACPsB,SAAUJ,KAAKL,eAEjB,yBAAKlB,UAAU,oBAAf,oDACA,yBAAKA,UAAU,eACb,kBAAC,GAAD,CACE4L,OAAQA,EACRG,YAAaA,EACbE,YAAa1K,KAAK0K,eAGtB,4BAAQ5T,KAAK,SAASmJ,QAASD,KAAKiJ,OAAQxK,UAAU,qBACnDtH,GAEc,SAAhB6I,KAAKjE,QACJ,4BAAQjF,KAAK,SAASmJ,QAASD,KAAKwH,cAAe/I,UAAU,6BAA7D,yB,GAvHe8C,iBAiIrBoJ,GAAe,SAAC,GAAD,IAAGN,EAAH,EAAGA,OAAQG,EAAX,EAAWA,YAAaE,EAAxB,EAAwBA,YAAxB,OACnBL,EAAOhN,KAAI,SAAC8J,GACV,IAAMyD,EAAWJ,IAAgBpN,OAAO+J,EAAM5P,IAAM,aAAe,GAC7DkH,EAAS,2BAAuBmM,GACtC,OACE,yBAAKlM,IAAKyI,EAAM5P,GAAIkH,UAAU,qBAC5B,yBACEA,UAAWA,EACXwI,MAAO,CAAEC,gBAAiBC,EAAMvH,OAChCiL,aAAY1D,EAAM5P,GAClB0I,QAASyK,SAOJhK,gBA3KS,SAAC5E,GAAW,IAC1BoB,EAAiBpB,EAAjBoB,aACR,MAAO,CACLqN,WAAYrN,EAAa3F,GACzBwB,OAAQmE,EAAanE,WAIE,SAACrB,GAAc,IAChCiC,EAAmBiH,EACnBhK,EAAgBiK,EAEtBrJ,EACEgK,EADiB9I,EACjB8I,EADiCxI,EACjCwI,EADiDrI,EACjDqI,EAEJ,MAAO,CACL7H,eAAgB,kBAAMjC,EAASiC,MAC/BnC,kBAAmB,kBAAME,EAASF,MAClCkB,eAAgB,SAACC,GAAD,OAAYjB,EAASgB,EAAeC,KACpDK,eAAgB,SAACuR,GAAD,OAAgB7S,EAASsB,EAAeuR,KACxDpR,eAAgB,SAACoR,EAAY5R,GAAb,OAAwBjB,EAASyB,EAAeoR,EAAY5R,KAC5E/B,YAAa,SAACC,GAAD,OAAaa,EAASd,EAAYC,QAsJpC6J,CAA6CyJ,IC7JtDW,G,6MAcJ7K,QAAU,SAACX,IAGThI,EAF6B,EAAKiH,MAA1BjH,kBACOgI,EAAM+E,cAAcC,QAA3B/M,K,qFAbRE,EAD4BuI,KAAKzB,MAAzB9G,qB,yCAISsS,GAAgB,IAAD,EACuB/J,KAAKzB,MAApD/F,EADwB,EACxBA,UAAWhB,EADa,EACbA,kBAAmBT,EADN,EACMA,aAClCgT,EAAcvR,UAAU0H,SAAW1H,EAAU0H,SAC/C1I,IACAT,O,+BAUM,IAAD,SACoCiJ,KAAKzB,MAAxC/F,EADD,EACCA,UAAWuS,EADZ,EACYA,oBAEnB,OACE,yBAAKtM,UAAU,YACZjG,EAAU6E,KAAI,SAACvE,GAAD,OACb,yBAAK2F,UAAU,oBAAoBC,IAAK5F,EAASvB,GAAI0I,QAAS,EAAKA,QAAS+G,UAASlO,EAASvB,IAC5F,yBAAKkH,UAAU,iBAAiBwI,MAAO,CAAEC,gBAAiBpO,EAASqO,SACnE,yBAAK1I,UAAU,kBAAkB3F,EAASgG,UAG7CiM,GAAuB,kBAAC,GAAD,W,GA/BTtK,aAqCRC,gBAxDS,SAAC5E,GAAW,IAC1BoB,EAA2BpB,EAA3BoB,aAAcpE,EAAagD,EAAbhD,SACtB,MAAO,CACLiS,oBAAqB7N,EAAa3D,QAClCf,UAAWM,EAASN,cAIG,SAACd,GAAc,IAChCJ,EAAyDkK,EAAvC/J,EAAuC+J,EAAtBhK,EAAsBgK,EACzDzK,EAAiB8J,EACzB,MAAO,CACLpJ,gBAAiB,kBAAMC,EAASD,MAChCH,iBAAkB,SAACC,GAAD,OAAQG,EAASJ,EAAiBC,KACpDC,kBAAmB,kBAAME,EAASF,MAClCT,aAAc,kBAAMW,EAASX,SAyClB2J,CAA6CoK,IC3DvCE,I,mBACnB,WAAYzM,GAAQ,IAAD,8BACjB,8CAAMA,KAQR0M,aAAe,SAAC3L,GACd,IAAM4L,EAAc9M,OAAO+M,WAAc7L,EAAM8L,QAAU,IACnDC,EAAcjN,OAAOkN,YAAehM,EAAMiM,QAAU,IACpDC,EAAUN,EAAc5L,EAAM8L,QAAU,IAAM9L,EAAM8L,QACpDK,EAAUJ,EAAc/L,EAAMiM,QAAU,IAAMjM,EAAMiM,QAC1D,EAAKvM,SAAS,CAAE0M,SAAS,EAAMF,UAASC,aAdvB,EAiBnBE,aAAe,kBAAM,EAAK3M,SAAS,CAAE0M,SAAS,KAf5C,EAAK5P,MAAQ,CACX4P,SAAS,EACTF,QAAS,EACTC,QAAS,GALM,E,uEAmBT,IAAD,EACsBzL,KAAKzB,MAA1BqN,EADD,EACCA,WAAYnT,EADb,EACaA,KADb,EAE+BuH,KAAKlE,MAAnC4P,EAFD,EAECA,QAASF,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,QAC1B,OACE,yBACExE,MAAO,CAAE4E,MAAOD,EAAY1E,gBAAiBzO,EAAKK,SAASqO,OAC3D1I,UAAU,WACVwM,aAAcjL,KAAKiL,aACnBU,aAAc3L,KAAK2L,cAElBD,GAAW,kBAAC,GAAD,CAAQjT,KAAMA,EAAM+S,QAASA,EAASC,QAASA,S,GA9B7BlK,kBAoChCuK,GAAU,SAAC,GAAD,SAAGnR,MACX0C,KAAI,SAACxC,GAAD,OAAU,yBAAK6D,IAAK7D,EAAKiE,KAAML,UAAU,uBAAuB5D,EAAKiE,UAG3EiN,GAAS,SAAC,GAAD,IAAGtT,EAAH,EAAGA,KAAM+S,EAAT,EAASA,QAASC,EAAlB,EAAkBA,QAAlB,OACb,yBAAKhN,UAAU,SAASwI,MAAO,CAAE+E,IAAKP,EAASQ,KAAMT,IACnD,yBAAK/M,UAAU,aACb,yBAAKA,UAAU,oBAAf,6BACA,yBAAKA,UAAU,mBAAmBhG,EAAKqG,OAEzC,yBAAKL,UAAU,aACb,yBAAKA,UAAU,oBAAf,uBACA,yBAAKA,UAAU,qBAAqBhG,EAAKiP,YAE3C,yBAAKjJ,UAAU,aACb,yBAAKA,UAAU,oBAAf,uBACA,yBAAKA,UAAU,mBAAmBhG,EAAKkP,UAEzC,yBAAKlJ,UAAU,aACb,yBAAKA,UAAU,oBAAf,iBACA,yBAAKA,UAAU,kBAAkBhG,EAAKsK,SAExC,yBAAKtE,UAAU,aACb,yBAAKA,UAAU,oBAAf,iBACA,yBAAKA,UAAU,oBAAoBhG,EAAKwK,WAE1C,yBAAKxE,UAAU,aACb,yBAAKA,UAAU,oBAAf,iBACA,yBAAKA,UAAU,oBAAoBhG,EAAKgP,kBAE1C,yBAAKhJ,UAAU,aACb,yBAAKA,UAAU,oBAAf,iBACA,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAS9D,MAAOlC,EAAKkC,UAGzB,yBAAK8D,UAAU,aACb,yBAAKA,UAAU,oBAAf,iBACA,yBAAKA,UAAU,0BAA0BhG,EAAKrB,gBC5EvC8U,GAAYtD,KAAO,IAAIT,MAAQgE,SAAS,EAAG,SAASC,QAAQ,QAE5DC,GAAUzD,KAAO,IAAIT,MAAQmE,IAAI,EAAG,SC0ElC5L,gBAnES,SAAC5E,GAAW,IAC1BhC,EAAsBgC,EAAtBhC,QAAS8D,EAAa9B,EAAb8B,SACjB,MAAO,CACLhE,SAAUE,EAAQF,SAClB8B,aAAckC,EAASlC,gBA+DZgF,EAlCD,SAACnC,GAAW,IAChB3E,EAA2B2E,EAA3B3E,SAAU8B,EAAiB6C,EAAjB7C,aAClB,OACE9B,EAASyD,KAAI,SAACvD,GAAD,OACX,yBAAK4E,IAAK5E,EAAQgF,KAAML,UAAU,WAChC,yBAAKA,UAAU,kBACd3E,EAAQ0D,OAAS1D,EAAQ0D,MAAMH,KAAI,SAAClD,GACnC,IAAMoS,EAAS7Q,IAAiBF,GAhCvB,SAACrB,GAGlB,OAbuB,GAWRyO,KAAOzO,EAAKuN,UAAW,cAAc0E,QAAQ,QAAQvD,KAAKqD,GAAW,QA+BrCM,CAAWrS,GA1BjC,SAACA,GAI1B,OApBuB,GAiBRsS,KAAKC,KAClB9D,KAAOzO,EAAKuN,UAAW,cAAc0E,QAAQ,QAAQvD,KAAKqD,GAAW,SAAS,IAwBdS,CAAmBxS,GACzE0O,EAAOnN,IAAiBF,GAAOrB,EAAK8I,SApBnB,SAAC9I,GAC9B,IAAMyS,EAAMzS,EAAK4I,QAAU5I,EAAKwN,QAC1BD,EAAYkB,KAAOzO,EAAKuN,UAAW,cAAc0E,QAAQ,QACzDzE,EAAUiB,KAAOgE,EAAK,cAAcC,MAAM,QAChD,OAAOJ,KAAKC,KAAK/E,EAAQkB,KAAKnB,EAAW,SAAS,IAgBSoF,CAAuB3S,IAbnE,SAACA,GAAD,OAAUyO,KAAOzO,EAAKuN,UAAW,cAAcqF,SAASb,IAe3Da,CAAS5S,IAASuB,IAAiBF,GAbzB,SAACrB,GAAD,OAAUyO,KAAOzO,EAAKuN,UAAW,cAAcqF,SAASb,GAAUE,QAAQ,SAe7EY,CAAgB7S,ItBxDhB,UsBwDyBuB,IAClCmN,GAAQ4D,KAAKC,KAAKR,GAAUrD,KAAKD,KAAOzO,EAAKuN,UAAW,cAAe,QAAQ,KAF/EmB,GAAQqD,GAAUrD,KAAKD,KAAOzO,EAAKuN,UAAW,cAAc0E,QAAQ,QAAS,QAAQ,GAKnF1Q,IAAiBF,KACnBqN,GAAQ,GAGV,IAAM+C,EAvDS,GAuDuB/C,EAChCpK,EAAqC,aAAzBtE,EAAKsN,gBAAiC,OAAS,iBAEjE,OACE,yBAAK/I,IAAKvE,EAAK5C,GAAI0P,MAAO,CAAEgG,YAAaV,GAAU9N,UAAWA,GAC5D,kBAAC,GAAD,CAAUmN,WAAYA,EAAYnT,KAAM0B,eCrDhDwH,I,OAAkB,SAAC7F,GAEvB,MAAO,CACLJ,aAFmBI,EAAb8B,SAEiBlC,gBAIrBwR,GAAqB,SAACxV,GAAc,IAChC+D,EAAgC0R,GAAjBxR,EAAiBwR,GACxC,MAAO,CACL1R,cAAe,kBAAM/D,EAAS+D,MAC9BE,aAAc,kBAAMjE,EAASiE,QAe3ByR,GAAe,SAACC,EAAK3R,GACzB,IAAM4R,EAAO,GACb,GAAI5R,IAAiBF,GACnB8R,EAAKC,WAAaF,EAAIG,OAAO,SAC7BF,EAAK7O,UAAL,qCAfoB,SAAC4O,GACvB,OAAQA,EAAInV,IAAI,QACd,KF3Be,EE4Bb,MAAO,QACT,KFvBe,EEwBb,MAAO,QACT,QACE,MAAO,IAQsCuV,CAAgBJ,QAC1D,CACL,IAAMK,EAAcL,EAAIjB,QAAQ,QAChCkB,EAAKC,WAAL,WAAsBF,EAAIG,OAAO,KAAjC,YAAyCE,EAAYF,OAAO,QAC5DF,EAAK7O,UAAY,8BAEnB,OAAO6O,GAGHK,GAAWjN,YAAQiB,GAARjB,EAAyB,SAACnC,GAGzC,IAHoD,IAC5C7C,EAAiB6C,EAAjB7C,aACFkS,EAAY,GACTP,EAAMzE,KAAOsD,IAAYmB,GAAOhB,GAASgB,EAAIf,IAAI,EAAG5Q,GAAe,CAC1E,IAAM4R,EAAOF,GAAaC,EAAK3R,GAC/BkS,EAAUvI,KACR,yBAAK5G,UAAW6O,EAAK7O,UAAWC,IAAK2O,EAAIG,OAAO,aAC7CF,EAAKC,aAIZ,OAAOK,KAGHC,GAASnN,YAAQiB,GAAiBuL,GAAzBxM,EAA6C,SAACnC,GAAW,IAC9D7C,EAA8C6C,EAA9C7C,aAAcD,EAAgC8C,EAAhC9C,cAAeE,EAAiB4C,EAAjB5C,aAC/B8C,EAAY,CAAEqP,MAAO,qBAAsBC,KAAM,sBAOvD,MvB9EmB,UuBwEfrS,EACF+C,EAAUqP,OAAS,YACVpS,IAAiBF,KAC1BiD,EAAUsP,MAAQ,aAIlB,yBAAKtP,UAAU,UACb,yBAAKA,UAAU,cACb,yBAAKA,UAAWA,EAAUqP,MAAO7N,QAASxE,GAA1C,QACA,yBAAKgD,UAAU,uBAAf,KACA,yBAAKA,UAAWA,EAAUsP,KAAM9N,QAAStE,GAAzC,QAEF,kBAAC,GAAD,UA0BS+E,eAAQiB,GAAiBuL,GAAzBxM,EArBF,kBACX,yBAAKjC,UAAU,OACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,iBACb,kBAACoP,GAAD,MACA,yBAAKpP,UAAU,SACb,yBAAKA,UAAU,eACb,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,kBAACkP,GAAD,OAEF,kBAAC,GAAD,aCrFJK,G,YACJ,WAAYzP,GAAQ,IAAD,8BACjB,8CAAMA,KAORsB,cAAgB,SAACP,GACf,IAAMP,EAAQO,EAAMC,OAAOK,MAC3B,EAAKZ,SAAS,CAAED,WAVC,EAanBe,eAAiB,SAACR,GAAD,OAAWA,EAAMS,mBAbf,EAenBkO,aAfmB,sBAeJ,wCAAAtW,EAAA,6DACLoH,EAAU,EAAKjD,MAAfiD,MACFpG,EAAS,CAAEoG,SACXnH,EAAMnB,EAAMoB,gBAAgB,iBAHrB,SAIUI,IAAMC,IAAIN,EAAK,CAAEe,WAAUP,OAAM,SAACC,GAAD,OAAWA,EAAMC,YAJ5D,UAKW,OADlBA,EAJO,QAKAC,OALA,wBAMH3B,EAAgB,EAAK2H,MAArB3H,aACIM,GAPD,6BAWcoB,EAASG,KAA5ByV,EAXK,EAWLA,OAAQnV,EAXH,EAWGA,OACZmV,GACMtX,EAAgB,EAAK2H,MAArB3H,aACIS,GAEZ,EAAK2H,SAAS,CAAEjG,WAhBL,4CAbb,EAAK+C,MAAQ,CACXiD,MAAO,GACPhG,OAAQ,IAJO,E,uEAmCT,IAAD,EACmBiH,KAAKlE,MAAvBiD,EADD,EACCA,MAAOhG,EADR,EACQA,OACP8D,EAA0BmD,KAAKzB,MAA/B1B,sBAER,OACE,yBAAK4B,UAAU,6BAA6BwB,QAASpD,GACnD,yBAAK4B,UAAU,YAAYwB,QAASD,KAAKF,gBACvC,yBAAKrB,UAAU,oBAAf,wBACmB,IAAlB1F,EAAOmH,QAAgB,kBAAC,GAAD,CAAcnE,OAAO,oBAAoBhD,OAAQA,IACzE,2BACEjC,KAAK,OACL2H,UAAU,uBACV+B,YAAY,uFACZZ,MAAOb,EACPqB,SAAUJ,KAAKH,gBAEjB,4BAAQ/I,KAAK,SAASmJ,QAASD,KAAKiO,aAAcxP,UAAU,qBAA5D,c,GApDqBgC,aA2DhBC,eAAQ,MApEI,SAAChJ,GAAc,IAChCd,EAAgBiK,EAChBhE,EAA0BsR,GAClC,MAAO,CACLvX,YAAa,SAACC,GAAD,OAAaa,EAASd,EAAYC,KAC/CgG,sBAAuB,kBAAMnF,EAASmF,SA+D3B6D,CAAkCsN,IChD3CI,G,YACJ,WAAY7P,GAAQ,IAAD,8BACjB,8CAAMA,KASR8P,aAVmB,sBAUJ,8CAAA1W,EAAA,+DACe,EAAKmE,MAAzBiD,EADK,EACLA,MAAOuP,EADF,EACEA,SACT1W,EAAMnB,EAAMoB,gBAAgB,aAC5Bc,EAAS,CAAEoG,QAAOuP,YAHX,SAIUrW,IAAMW,KAAKhB,EAAKe,EAAQ,CAC7CR,QAAS,CAAE,eAAgB,sBAC1BC,OAAM,SAACC,GAAD,OAAWA,EAAMC,YANb,UAQW,OAJlBA,EAJO,QAQAC,OARA,wBASH3B,EAAgB,EAAK2H,MAArB3H,aACIM,GAVD,6BAcqBoB,EAASG,KAAnCyV,EAdK,EAcLA,OAAQpW,EAdH,EAcGA,MAAOiB,EAdV,EAcUA,OACnBmV,GACFnW,aAAawW,QAAQ,QAASzW,GAC9B,EAAKkH,SAAS,CAAEwP,UAAU,KAE1B,EAAKxP,SAAS,CAAEjG,WAnBL,4CAVI,EAiCnB0V,cAAgB,SAACnP,GACf,IAAMP,EAAQO,EAAMC,OAAOK,MAC3B,EAAKZ,SAAS,CAAED,WAnCC,EAsCnB2P,iBAAmB,SAACpP,GAClB,IAAMgP,EAAWhP,EAAMC,OAAOK,MAC9B,EAAKZ,SAAS,CAAEsP,cAtChB,EAAKxS,MAAQ,CACXiD,MAAO,GACPuP,SAAU,GACVE,UAAU,EACVzV,OAAQ,IANO,E,uEA2CT,IAAD,EACmDiH,KAAKzB,MAAvDoQ,EADD,EACCA,wBAAyB/R,EAD1B,EAC0BA,qBAD1B,EAIHoD,KAAKlE,MADPiD,EAHK,EAGLA,MAAOuP,EAHF,EAGEA,SAAUE,EAHZ,EAGYA,SAAUzV,EAHtB,EAGsBA,OAG7B,OACEyV,EAAW,kBAAC,KAAD,CAAUnN,GAAG,WACtB,yBAAK5C,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBAAf,oBACmB,IAAlB1F,EAAOmH,QAAgB,kBAAC,GAAD,CAAcnE,OAAO,iBAAiBhD,OAAQA,IACtE,2BACEjC,KAAK,OACL2H,UAAU,iBACV+B,YAAY,QACZZ,MAAOb,EACPqB,SAAUJ,KAAKyO,gBAEjB,2BACE3X,KAAK,WACL2H,UAAU,oBACV+B,YAAY,WACZZ,MAAO0O,EACPlO,SAAUJ,KAAK0O,mBAEjB,4BAAQ5X,KAAK,SAASmJ,QAASD,KAAKqO,aAAc5P,UAAU,mBAA5D,WAGA,kBAAC,KAAD,CAAM4C,GAAG,gBAAgB5C,UAAU,mBAAnC,kBACA,yBAAKA,UAAU,4BAA4BwB,QAASrD,GAApD,yBAED+R,GAA2B,kBAAC,GAAD,W,GA5EjBlO,aAmFNC,gBAnGS,SAAC5E,GAEvB,MAAO,CACL6S,wBAF2B7S,EAArBgC,iBAEoCvE,YAInB,SAAC7B,GAAc,IAChCd,EAAgBiK,EAChBjE,EAAyBgS,GACjC,MAAO,CACLhY,YAAa,SAACC,GAAD,OAAaa,EAASd,EAAYC,KAC/C+F,qBAAsB,kBAAMlF,EAASkF,SAuF1B8D,CAA6C0N,IC9FtDS,G,YACJ,WAAYtQ,GAAQ,IAAD,8BACjB,8CAAMA,KAaRuQ,aAdmB,sBAcJ,kDAAAnX,EAAA,+DAOT,EAAKmE,MALP+C,EAFW,EAEXA,OACAC,EAHW,EAGXA,KACAC,EAJW,EAIXA,MACAuP,EALW,EAKXA,SACAS,EANW,EAMXA,sBAGIpW,EAAS,IAAIwG,UACZC,OAAO,aAAcN,GAC5BnG,EAAOyG,OAAO,cAAeL,GAC7BpG,EAAOyG,OAAO,iBAAkBkP,GAChC3V,EAAOyG,OAAO,8BAA+B2P,GACzClQ,GACFlG,EAAOyG,OAAO,eAAgBP,GAG1BjH,EAAMnB,EAAMoB,gBAAgB,UAlBrB,UAmBUI,IAAMW,KAAKhB,EAAKe,GAAQP,OAAM,SAACC,GAAD,OAAWA,EAAMC,YAnBzD,WAoBW,OADlBA,EAnBO,QAoBAC,OApBA,wBAqBH3B,EAAgB,EAAK2H,MAArB3H,aACIM,GAtBD,6BA0BkBoB,EAASG,KAAhCI,EA1BK,EA0BLA,WAAYE,EA1BP,EA0BOA,OAChBF,EACF,EAAKmG,SAAS,CAAEgQ,UAAU,IAE1B,EAAKhQ,SAAS,CAAEjG,WA9BL,4CAdI,EAgDnBsG,aAAe,SAACC,GACd,IAAMT,EAASS,EAAMC,OAAOC,MAAM,GAC5BP,EAAMQ,IAAIC,gBAAgBb,GAChC,EAAKG,SAAS,CAAEC,MAAKJ,YAnDJ,EAsDnBc,aAAe,SAACL,GACd,IAAMR,EAAOQ,EAAMC,OAAOK,MAC1B,EAAKZ,SAAS,CAAEF,UAxDC,EA2DnBe,cAAgB,SAACP,GACf,IAAMP,EAAQO,EAAMC,OAAOK,MAC3B,EAAKZ,SAAS,CAAED,WA7DC,EAgEnBkQ,iBAAmB,SAAC3P,GAClB,IAAMgP,EAAWhP,EAAMC,OAAOK,MAC9B,EAAKZ,SAAS,CAAEsP,cAlEC,EAqEnBY,6BAA+B,SAAC5P,GAC9B,IAAMyP,EAAuBzP,EAAMC,OAAOK,MAC1C,EAAKZ,SAAS,CAAE+P,0BArEhB,EAAKjT,MAAQ,CACXmD,IAAK,GACLJ,OAAQ,KACRC,KAAM,GACNC,MAAO,GACPuP,SAAU,GACVS,qBAAsB,GACtBhW,OAAQ,GACRiW,UAAU,GAVK,E,uEA0ET,IAAD,EASHhP,KAAKlE,MAPPmD,EAFK,EAELA,IACAH,EAHK,EAGLA,KACAC,EAJK,EAILA,MACAuP,EALK,EAKLA,SACAS,EANK,EAMLA,qBACAhW,EAPK,EAOLA,OAIF,OAXO,EAQLiW,SAIW,kBAAC,KAAD,CAAU3N,GAAG,kBACtB,yBAAK5C,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBAAf,kBACmB,IAAlB1F,EAAOmH,QAAgB,kBAAC,GAAD,CAAcnE,OAAO,eAAehD,OAAQA,IACpE,2BAAOoH,QAAQ,aAAa1B,UAAU,mBACpC,2BACElH,GAAG,aACHT,KAAK,OACL2H,UAAU,qBACV2B,SAAUJ,KAAKX,eAER,KAARJ,EACG,kBAAC,KAAD,CAAiBoB,KAAM,CAAC,MAAO,QAAS5B,UAAU,sBAClD,yBAAK6B,IAAKrB,EAAKsB,IAAI,SAAS9B,UAAU,sBAE5C,yBAAKA,UAAU,sBAAf,sBACA,2BACE3H,KAAK,OACL2H,UAAU,gBACV+B,YAAY,OACZZ,MAAOd,EACPsB,SAAUJ,KAAKL,eAEjB,2BACE7I,KAAK,OACL2H,UAAU,iBACV+B,YAAY,QACZZ,MAAOb,EACPqB,SAAUJ,KAAKH,gBAEjB,2BACE/I,KAAK,WACL2H,UAAU,oBACV+B,YAAY,WACZZ,MAAO0O,EACPlO,SAAUJ,KAAKiP,mBAEjB,2BACEnY,KAAK,WACL2H,UAAU,oBACV+B,YAAY,wBACZZ,MAAOmP,EACP3O,SAAUJ,KAAKkP,+BAEjB,4BAAQpY,KAAK,SAASmJ,QAASD,KAAK8O,aAAcrQ,UAAU,mBAA5D,WAGA,kBAAC,KAAD,CAAM4C,GAAG,gBAAgB5C,UAAU,mBAAnC,yB,GAvISgC,aA+INC,eAAQ,MAtJI,SAAChJ,GAAc,IAChCd,EAAgBiK,EACxB,MAAO,CACLjK,YAAa,SAACC,GAAD,OAAaa,EAASd,EAAYC,QAmJpC6J,CAAkCmO,IC7H3C9O,I,OAAkB,SAACT,GAAD,OAAWA,EAAMS,oBAmC1BW,gBAjES,SAAC5E,GAAW,IAC1BG,EAAYH,EAAZG,QACR,MAAO,CACLnF,KAAMmF,EAAQnF,KACdK,MAAO8E,EAAQ9E,MACfC,YAAa6E,EAAQ7E,YACrB6E,QAASA,EAAQA,YAIM,SAACvE,GAAc,IAChCX,EAAiB8J,EACzB,MAAO,CACL9J,aAAc,kBAAMW,EAASX,SAoDlB2J,EAjCC,SAACnC,GAAW,IAExBzH,EAKEyH,EALFzH,KACAC,EAIEwH,EAJFxH,aACAI,EAGEoH,EAHFpH,MACAC,EAEEmH,EAFFnH,YACA6E,EACEsC,EADFtC,QAGIkT,EAA0B,QAATrY,EAAiBmF,EAAUlF,EAC5CqY,EAzBY,SAACtY,GACnB,OAAQA,GACN,IAAK,UACH,MAAO,CAAEuJ,KAAM,CAAC,MAAO,SAAU5B,UAAW,0BAC9C,IAAK,QACH,MAAO,CAAE4B,KAAM,CAAC,MAAO,eAAgB5B,UAAW,wBACpD,IAAK,MACH,MAAO,CAAE4B,KAAM,CAAC,MAAO,YAAa5B,UAAW,sBACjD,QACE,OAAO,MAgBM4Q,CAAYvY,GAC7B,OACE,yBAAK2H,UAAU,iBAAiBwB,QAASF,IACvC,yBAAKtB,UAAU,WACZ2Q,GACC,yBAAK3Q,UAAW2Q,EAAS3Q,WACvB,kBAAC,KAAD,CAAiB4B,KAAM+O,EAAS/O,QAGpC,yBAAK5B,UAAU,eACb,yBAAKA,UAAU,sBAAsBtH,GACrC,yBAAKsH,UAAU,4BAA4BrH,IAE7C,yBAAKqH,UAAU,iBACH,QAAT3H,GACI,yBAAK2H,UAAU,wBAAwBwB,QAASlJ,GAAhD,UACL,yBAAK0H,UAAU,yBAAyBwB,QAASkP,GAAjD,YC5CJG,G,YACJ,WAAY/Q,GAAQ,IAAD,sBACjB,8CAAMA,IACN,IACMgR,EAA4B,OADpBxX,aAAaC,QAAQ,SAFlB,OAIjB,EAAK8D,MAAQ,CACXyT,mBALe,E,uEAWjB,OAD4BvP,KAAKlE,MAAzByT,gBACiB,kBAAC,GAAD,MAAW,kBAAC,KAAD,CAAUlO,GAAG,sB,GAZlCZ,aAiCJC,gBAxCS,SAAC5E,GAEvB,MAAO,CACL0T,eAFkB1T,EAAZG,QAEkB1C,WAqCbmH,EAjBH,SAACnC,GAAW,IACdiR,EAAmBjR,EAAnBiR,eACR,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,iBAAgB,kBAAC,GAAD,OAC5B,kBAAC,KAAD,CAAOA,KAAK,iBAAgB,kBAAC,GAAD,OAC5B,kBAAC,KAAD,CAAOC,OAAK,EAACD,KAAK,UAAS,kBAAC,GAAD,OAC3B,kBAAC,KAAD,CAAOC,OAAK,GAAC,kBAAC,GAAD,SAGhBF,GAAkB,kBAAC,GAAD,U,OCrCLG,QACW,cAA7BvR,OAAOwR,SAASC,UAEe,UAA7BzR,OAAOwR,SAASC,UAEhBzR,OAAOwR,SAASC,SAASC,MACvB,2DCJNC,IAAQzD,IAAI0D,IAAKC,IAAKC,KAEtBC,IAASC,OACP,kBAAC,IAAD,CAAUrS,MAAOA,IACf,kBAAC,GAAD,OAEFsS,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.25c6408d.chunk.js","sourcesContent":["export default class Utils {\n  static buildRequestUrl(apiEndpoint) {\n    const baseUrl = 'https://api-reach.herokuapp.com';\n    // const baseUrl = 'http://localhost:3001';\n    return baseUrl + apiEndpoint;\n  }\n}\n","export const OPEN_CONFIRM = 'OPEN_CONFIRM';\nexport const CLOSE_CONFIRM = 'CLOSE_CONFIRM';\n\nexport const openConfirm = (payload) => ({\n  type: OPEN_CONFIRM,\n  payload,\n});\n\nexport const closeConfirm = () => ({\n  type: CLOSE_CONFIRM,\n});\n","export const badRequest = 'Bad request!';\n\nexport const checkParams = 'Please check your request params';\n\nexport const serverError = 'Internal server error';\n\nexport const reload = 'Try reload browser';\n\nexport const updated = 'Updated!';\n\nexport const ask = 'Are you sure?';\n\nexport const destroy = 'Destroy';\n","import { serverError, reload } from '../../utils/Text';\n\nexport const INTERNAL_SERVER_ERROR = { type: 'error', title: serverError, description: reload };\n\nexport const SENT_MESSAGE = { type: 'success', title: 'Completed', description: 'SlackBot sent a Message' };\n","import axios from 'axios';\nimport Utils from '../../utils/Utils';\nimport { OPEN_CONFIRM } from '../confirm/actions';\nimport { INTERNAL_SERVER_ERROR } from '../confirm/types';\n\nexport const OPEN_RESOURCE_FORM = 'OPEN_RESOURCE_FORM';\nexport const CLOSE_RESOURCE_FORM = 'CLOSE_RESOURCE_FORM';\nexport const GET_ALL_RESOURCES = 'GET_ALL_RESOURCES';\nexport const CREATE_RESOURCE = 'CREATE_RESOURCE';\nexport const DELETE_RESOURCE = 'DELETE_RESOURCE';\nexport const UPDATE_RESOURCE = 'UPDATE_RESOURCE';\nexport const INVALID_RESOURCE_PARAMS = 'INVALID_RESOURCE_PARAMS';\n\nexport const openResourceForm = (id = null) => ({\n  type: OPEN_RESOURCE_FORM,\n  id,\n});\n\nexport const closeResourceForm = () => ({\n  type: CLOSE_RESOURCE_FORM,\n});\n\nexport const getAllResources = () => async (dispatch) => {\n  const url = Utils.buildRequestUrl('/resources');\n  const token = localStorage.getItem('token');\n  const response = await axios.get(url, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { resources } = response.data;\n  dispatch({ type: GET_ALL_RESOURCES, resources });\n};\n\nexport const createResource = (params) => async (dispatch) => {\n  const url = Utils.buildRequestUrl('/resources');\n  const token = localStorage.getItem('token');\n  const response = await axios.post(url, params, {\n    headers: { 'X-Reach-token': token, 'Content-Type': 'application/json' },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_created, resource, errors } = response.data;\n  if (is_created) {\n    dispatch({ type: CREATE_RESOURCE, resource });\n  } else {\n    dispatch({ type: INVALID_RESOURCE_PARAMS, errors });\n  }\n};\n\nexport const deleteResource = (id) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/resources/${id}`);\n  const token = localStorage.getItem('token');\n  const response = await axios.delete(url, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_delete } = response.data;\n  if (is_delete) {\n    dispatch({ type: DELETE_RESOURCE, id });\n  }\n};\n\nexport const updateResource = (id, params) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/resources/${id}`);\n  const token = localStorage.getItem('token');\n  const response = await axios.patch(url, params, {\n    headers: { 'X-Reach-token': token, 'Content-Type': 'application/json' },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_updated, errors, resource } = response.data;\n  if (is_updated) {\n    dispatch({ type: UPDATE_RESOURCE, resource });\n  } else {\n    dispatch({ type: INVALID_RESOURCE_PARAMS, errors });\n  }\n};\n","import {\n  OPEN_RESOURCE_FORM,\n  CLOSE_RESOURCE_FORM,\n  GET_ALL_RESOURCES,\n  CREATE_RESOURCE,\n  DELETE_RESOURCE,\n  UPDATE_RESOURCE,\n  INVALID_RESOURCE_PARAMS,\n} from './actions';\n\nconst initialResouceFormState = { visible: false, id: null, errors: [] };\nconst initialResouceState = { resources: [] };\n\nexport const resourceFormReducer = (state = initialResouceFormState, action) => {\n  switch (action.type) {\n    case OPEN_RESOURCE_FORM:\n      return { visible: true, id: action.id, errors: [] };\n    case CLOSE_RESOURCE_FORM:\n      return { visible: false, id: null, errors: [] };\n    case INVALID_RESOURCE_PARAMS:\n      return {\n        ...state,\n        errors: action.errors,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const resourceReducer = (state = initialResouceState, action) => {\n  switch (action.type) {\n    case GET_ALL_RESOURCES:\n      return { resources: action.resources };\n    case CREATE_RESOURCE:\n      return {\n        ...state,\n        resources: [...state.resources, action.resource],\n      };\n    case DELETE_RESOURCE:\n      return {\n        ...state,\n        resources: state.resources.filter((resource) => String(resource.id) !== action.id),\n      };\n    case UPDATE_RESOURCE:\n      return {\n        ...state,\n        resources: state.resources.map((resource) => (\n          resource.id === action.resource.id ? action.resource : resource\n        )),\n      };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\nimport Utils from '../../utils/Utils';\nimport { OPEN_CONFIRM } from '../confirm/actions';\nimport { INTERNAL_SERVER_ERROR } from '../confirm/types';\n\nexport const OPEN_PROJECT_FORM = 'OPEN_PROJECT_FORM';\nexport const CLOSE_PROJECT_FORM = 'CLOSE_PROJECT_FORM';\nexport const GET_ALL_PROJECTS = 'GET_ALL_PROJESTS';\nexport const CREATE_PROJECT = 'CREATE_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT';\nexport const SEARCH_PROJECT = 'SEARCH_PROJECT';\nexport const CREATE_TASK = 'CREATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const INVALID_PROJECT_PARAMS = 'INVALID_PROJECT_PARAMS';\nexport const INVALID_TASK_PARAMS = 'INVALID_TASK_PARAMS';\n\nexport const openProjectForm = (id = null) => ({\n  type: OPEN_PROJECT_FORM,\n  id,\n});\n\nexport const closeProjectForm = () => ({\n  type: CLOSE_PROJECT_FORM,\n});\n\nexport const getAllProjects = () => async (dispatch) => {\n  const url = Utils.buildRequestUrl('/projects');\n  const token = localStorage.getItem('token');\n  const response = await axios.get(url, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { projects } = response.data;\n  dispatch(({ type: GET_ALL_PROJECTS, projects }));\n};\n\nexport const createProject = (params) => async (dispatch) => {\n  const url = Utils.buildRequestUrl('/projects');\n  const token = localStorage.getItem('token');\n  const response = await axios.post(url, params, {\n    headers: { 'X-Reach-token': token, 'Content-Type': 'application/json' },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_created, errors, project } = response.data;\n  if (is_created) {\n    dispatch({ type: CREATE_PROJECT, project });\n  } else {\n    dispatch({ type: INVALID_PROJECT_PARAMS, errors });\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/projects/${id}`);\n  const token = localStorage.getItem('token');\n  const response = await axios.delete(url, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_delete } = response.data;\n  if (is_delete) {\n    dispatch({ type: DELETE_PROJECT, id });\n  }\n};\n\nexport const updateProject = (id, params) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/projects/${id}`);\n  const token = localStorage.getItem('token');\n  const response = await axios.patch(url, params, {\n    headers: { 'X-Reach-token': token, 'Content-Type': 'application/json' },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_updated, errors, project } = response.data;\n  if (is_updated) {\n    dispatch({ type: UPDATE_PROJECT, project });\n  } else {\n    dispatch({ type: INVALID_PROJECT_PARAMS, errors });\n  }\n};\n\nexport const searchProjects = (params) => async (dispatch) => {\n  const url = Utils.buildRequestUrl('/tasks/search');\n  const response = await axios.post(url, params, {\n    headers: { 'Content-Type': 'application/json' },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { projects } = response.data;\n  dispatch({ type: SEARCH_PROJECT, projects });\n};\n\nexport const createTask = (params) => async (dispatch) => {\n  const url = Utils.buildRequestUrl('/tasks');\n  const token = localStorage.getItem('token');\n  const response = await axios.post(url, params, {\n    headers: { 'X-Reach-token': token, 'Content-Type': 'application/json' },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_created, errors, task } = response.data;\n  if (is_created) {\n    dispatch({ type: CREATE_TASK, task });\n  } else {\n    dispatch({ type: INVALID_TASK_PARAMS, errors });\n  }\n};\n\nexport const deleteTask = (id) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/tasks/${id}`);\n  const token = localStorage.getItem('token');\n  const response = await axios.delete(url, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_delete, task } = response.data;\n  if (is_delete) {\n    dispatch({ type: DELETE_TASK, task });\n  }\n};\n\nexport const updateTask = (id, params) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/tasks/${id}`);\n  const token = localStorage.getItem('token');\n  const response = await axios.patch(url, params, {\n    headers: { 'X-Reach-token': token, 'Content-Type': 'application/json' },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_updated, errors, task } = response.data;\n  if (is_updated) {\n    dispatch({ type: UPDATE_TASK, task });\n  } else {\n    dispatch({ type: INVALID_TASK_PARAMS, errors });\n  }\n};\n","import {\n  OPEN_PROJECT_FORM,\n  CLOSE_PROJECT_FORM,\n  GET_ALL_PROJECTS,\n  CREATE_PROJECT,\n  DELETE_PROJECT,\n  UPDATE_PROJECT,\n  SEARCH_PROJECT,\n  CREATE_TASK,\n  DELETE_TASK,\n  UPDATE_TASK,\n  INVALID_PROJECT_PARAMS,\n} from './actions';\n\nconst initialProjectFormState = { visible: false, id: null, errors: [] };\nconst initialProjectState = { projects: [] };\n\nexport const projectFormReducer = (state = initialProjectFormState, action) => {\n  switch (action.type) {\n    case OPEN_PROJECT_FORM:\n      return { visible: true, id: action.id, errors: [] };\n    case CLOSE_PROJECT_FORM:\n      return { visible: false, id: null, errors: [] };\n    case INVALID_PROJECT_PARAMS:\n      return {\n        ...state,\n        errors: action.errors,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const projectReducer = (state = initialProjectState, action) => {\n  switch (action.type) {\n    case GET_ALL_PROJECTS:\n      return { projects: action.projects };\n\n    case CREATE_PROJECT:\n      return {\n        ...state,\n        projects: [...state.projects, action.project],\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter((project) => String(project.id) !== action.id),\n      };\n\n    case UPDATE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.map((project) => (\n          project.id === action.project.id ? action.project : project\n        )),\n      };\n\n    case SEARCH_PROJECT:\n      return { projects: action.projects };\n\n    case CREATE_TASK: {\n      const targetProject = state.projects.filter((project) => (\n        project.id === action.task.projectID\n      ));\n      targetProject[0].tasks = [...targetProject[0].tasks, action.task];\n      return {\n        ...state,\n        projects: state.projects.map((project) => (\n          project.id === targetProject[0].id ? targetProject[0] : project\n        )),\n      };\n    }\n\n    case DELETE_TASK: {\n      const targetProject = state.projects.filter((project) => (\n        project.id === action.task.projectID\n      ));\n      targetProject[0].tasks = targetProject[0].tasks.filter((task) => (\n        task.id !== action.task.id\n      ));\n      return {\n        ...state,\n        projects: state.projects.map((project) => (\n          project.id === targetProject[0].id ? targetProject[0] : project\n        )),\n      };\n    }\n\n    case UPDATE_TASK: {\n      const targetProject = state.projects.filter((project) => (\n        project.id === action.task.projectID\n      ));\n      targetProject[0].tasks = targetProject[0].tasks.map((task) => (\n        task.id === action.task.id ? action.task : task\n      ));\n      return {\n        ...state,\n        projects: state.projects.map((project) => (\n          project.id === targetProject[0].id ? targetProject[0] : project\n        )),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\nimport Utils from '../../utils/Utils';\nimport { OPEN_CONFIRM } from '../confirm/actions';\nimport { INTERNAL_SERVER_ERROR } from '../confirm/types';\n\nexport const OPEN_ACCOUNT_FORM = 'OPEN_ACCOUNT_FORM';\nexport const CLOSE_ACCOUNT_FORM = 'CLOSE_ACCOUNT_FORM';\nexport const GET_ALL_ACCOUNT = 'GET_ALL_ACCOUNT';\nexport const UPDATE_ACCOUNT = 'UPDATE_ACCOUNT';\nexport const INVALID_ACCOUNT_PARAMS = 'INVALID_ACCOUNT_PARAMS';\n\nexport const openAccountForm = () => ({\n  type: OPEN_ACCOUNT_FORM,\n});\n\nexport const closeAccountForm = () => ({\n  type: CLOSE_ACCOUNT_FORM,\n});\n\nexport const getAllAccount = () => async (dispatch) => {\n  const url = Utils.buildRequestUrl('/users');\n  const token = localStorage.getItem('token');\n  const response = await axios.get(url, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { users } = response.data;\n  dispatch({ type: GET_ALL_ACCOUNT, users });\n};\n\nexport const updateAccount = (params) => async (dispatch) => {\n  const url = Utils.buildRequestUrl('/users/update');\n  const token = localStorage.getItem('token');\n  const response = await axios.patch(url, params, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n\n  const { is_updated, user, errors } = response.data;\n  if (is_updated) {\n    dispatch({ type: UPDATE_ACCOUNT, user });\n  } else {\n    dispatch({ type: INVALID_ACCOUNT_PARAMS, errors });\n  }\n};\n","import {\n  OPEN_ACCOUNT_FORM,\n  CLOSE_ACCOUNT_FORM,\n  GET_ALL_ACCOUNT,\n  UPDATE_ACCOUNT,\n  INVALID_ACCOUNT_PARAMS,\n} from './actions';\n\nconst initialAccountFormState = { visible: false, errors: [] };\nconst initialAccountState = { users: [] };\n\nexport const accountFormReducer = (state = initialAccountFormState, action) => {\n  switch (action.type) {\n    case OPEN_ACCOUNT_FORM:\n      return { visible: true, errors: [] };\n    case CLOSE_ACCOUNT_FORM:\n      return { visible: false, errors: [] };\n    case INVALID_ACCOUNT_PARAMS:\n      return { visible: state.visible, errors: action.errors };\n    default:\n      return state;\n  }\n};\n\nexport const accountReducer = (state = initialAccountState, action) => {\n  switch (action.type) {\n    case GET_ALL_ACCOUNT:\n      return { users: action.users };\n    case UPDATE_ACCOUNT:\n      return {\n        ...state,\n        users: state.users.map((user) => (\n          user.id === action.user.id ? action.user : user\n        )),\n      };\n    default:\n      return state;\n  }\n};\n","export const OPEN_TASK_FORM = 'OPEN_TASK_FORM';\nexport const CLOSE_TASK_FORM = 'CLOSE_TASK_FORM';\nexport const TOGGLE_DELETE_BUTTON = 'TOGGLE_DELETE_BUTTON';\n\nexport const openTaskForm = ({ projectID = null, taskID = null }) => ({\n  type: OPEN_TASK_FORM,\n  payload: { projectID, taskID },\n});\n\nexport const closeTaskForm = () => ({\n  type: CLOSE_TASK_FORM,\n});\n\nexport const toggleDeleteButton = () => ({\n  type: TOGGLE_DELETE_BUTTON,\n});\n","import { OPEN_TASK_FORM, CLOSE_TASK_FORM, TOGGLE_DELETE_BUTTON } from './actions';\nimport { INVALID_TASK_PARAMS } from '../project/actions';\n\nconst initialTaskFormState = {\n  visible: false, projectID: null, taskID: null, errors: [],\n};\n\nconst initialTaskState = { deleteButtonVisible: false };\n\nexport const taskFormReducer = (state = initialTaskFormState, action) => {\n  switch (action.type) {\n    case OPEN_TASK_FORM:\n      return {\n        visible: true,\n        projectID: action.payload.projectID,\n        taskID: action.payload.taskID,\n        errors: [],\n      };\n    case CLOSE_TASK_FORM:\n      return {\n        visible: false,\n        projectID: null,\n        taskID: null,\n        errors: [],\n      };\n    case INVALID_TASK_PARAMS:\n      return {\n        ...state,\n        errors: action.errors,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const taskReducer = (state = initialTaskState, action) => {\n  switch (action.type) {\n    case TOGGLE_DELETE_BUTTON:\n      return {\n        deleteButtonVisible: !state.deleteButtonVisible,\n      };\n    default:\n      return state;\n  }\n};\n","export const WEEKS = 'weeks';\nexport const DAYS = 'days';\n","import { WEEKS, DAYS } from './types';\n\nexport const CHANGE_TO_WEEKS = 'CHANGE_TO_WEEKS';\nexport const CHANGE_TO_DAYS = 'CHANGE_TO_DAYS';\n\nexport const changeToWeeks = () => ({\n  type: CHANGE_TO_WEEKS,\n  scheduleType: WEEKS,\n});\n\nexport const changeToDays = () => ({\n  type: CHANGE_TO_DAYS,\n  scheduleType: DAYS,\n});\n","import { CHANGE_TO_WEEKS, CHANGE_TO_DAYS } from './actions';\nimport { WEEKS, DAYS } from './types';\n\nconst initialScheduleState = { scheduleType: WEEKS };\n\nconst scheduleReducer = (state = initialScheduleState, action) => {\n  switch (action.type) {\n    case CHANGE_TO_WEEKS:\n      return { scheduleType: WEEKS };\n    case CHANGE_TO_DAYS:\n      return { scheduleType: DAYS };\n    default:\n      return state;\n  }\n};\n\nexport default scheduleReducer;\n","import { OPEN_CONFIRM, CLOSE_CONFIRM } from './actions';\n\nconst initialConfirmState = {\n  visible: false,\n  type: '',\n  title: '',\n  description: '',\n  confirm: () => {},\n};\n\nconst confirmReducer = (state = initialConfirmState, action) => {\n  switch (action.type) {\n    case OPEN_CONFIRM:\n      return {\n        visible: true,\n        type: action.payload.type,\n        title: action.payload.title,\n        description: action.payload.description,\n        confirm: action.payload.confirm,\n      };\n    case CLOSE_CONFIRM:\n      return initialConfirmState;\n    default:\n      return state;\n  }\n};\n\nexport default confirmReducer;\n","import axios from 'axios';\nimport Utils from '../../utils/Utils';\nimport { OPEN_CONFIRM } from '../confirm/actions';\nimport { INTERNAL_SERVER_ERROR } from '../confirm/types';\n\nexport const OPEN_ATTACHMENT_FORM = 'OPEN_ATTACHMENT_FORM';\nexport const CLOSE_ATTACHMENT_FORM = 'CLOSE_ATTACHMENT_FORM';\nexport const GET_ALL_ATTACHMENT = 'GET_ALL_ATTACHMENT';\nexport const CREATE_ATTACHMENT = 'CREATE_ATTACHMENT';\nexport const DELETE_ATTACHMENT = 'DELETE_ATTACHMENT';\nexport const INVALID_ATTACHMENT_PARAMS = 'INVALID_ATTACHMENT_PARAMS';\n\nexport const openAttachmentForm = (projectID) => ({\n  type: OPEN_ATTACHMENT_FORM,\n  projectID,\n});\n\nexport const closeAttachmentForm = () => ({\n  type: CLOSE_ATTACHMENT_FORM,\n});\n\nexport const getAllAttachment = (projectID) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/projects/${projectID}/attachments`);\n  const token = localStorage.getItem('token');\n  const response = await axios.get(url, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { attachments } = response.data;\n  dispatch({ type: GET_ALL_ATTACHMENT, attachments });\n};\n\nexport const createAttachment = (params, projectID) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/projects/${projectID}/attachments`);\n  const token = localStorage.getItem('token');\n  const response = await axios.post(url, params, {\n    headers: { 'X-Reach-token': token, 'Content-Type': 'application/json' },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_created, errors, attachment } = response.data;\n  if (is_created) {\n    dispatch({ type: CREATE_ATTACHMENT, attachment });\n  } else {\n    dispatch({ type: INVALID_ATTACHMENT_PARAMS, errors });\n  }\n};\n\nexport const deleteAttachment = (id) => async (dispatch) => {\n  const url = Utils.buildRequestUrl(`/attachments/${id}`);\n  const token = localStorage.getItem('token');\n  const response = await axios.delete(url, {\n    headers: { 'X-Reach-token': token },\n  }).catch((error) => error.response);\n\n  if (response.status !== 200) {\n    dispatch({ type: OPEN_CONFIRM, payload: INTERNAL_SERVER_ERROR });\n    return;\n  }\n  const { is_delete } = response.data;\n  if (is_delete) {\n    dispatch({ type: DELETE_ATTACHMENT, id });\n  }\n};\n","import {\n  OPEN_ATTACHMENT_FORM,\n  CLOSE_ATTACHMENT_FORM,\n  GET_ALL_ATTACHMENT,\n  CREATE_ATTACHMENT,\n  DELETE_ATTACHMENT,\n  INVALID_ATTACHMENT_PARAMS,\n} from './actions';\n\nconst initialAttachmentFormReducer = { visible: false, projectID: null, errors: [] };\nconst initialAttachmentReducer = { attachments: [] };\n\nexport const attachmentFormReducer = (state = initialAttachmentFormReducer, action) => {\n  switch (action.type) {\n    case OPEN_ATTACHMENT_FORM:\n      return { visible: true, projectID: action.projectID, errors: [] };\n    case CLOSE_ATTACHMENT_FORM:\n      return { visible: false, projectID: null, errors: [] };\n    case INVALID_ATTACHMENT_PARAMS:\n      return {\n        ...state,\n        errors: action.errors,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const attachmentReducer = (state = initialAttachmentReducer, action) => {\n  switch (action.type) {\n    case GET_ALL_ATTACHMENT:\n      return { attachments: action.attachments };\n    case CREATE_ATTACHMENT:\n      return {\n        ...state,\n        attachments: [...state.attachments, action.attachment],\n      };\n    case DELETE_ATTACHMENT:\n      return {\n        ...state,\n        attachments: state.attachments.filter((attachment) => String(attachment.id) !== action.id),\n      };\n    default:\n      return state;\n  }\n};\n","export const OPEN_VERIFICATION_FORM = 'OPEN_VERIFICATION_FORM';\nexport const CLOSE_VERIFICATION_FORM = 'CLOSE_VERIFICATION_FORM';\n\nexport const openVerificationForm = () => ({\n  type: OPEN_VERIFICATION_FORM,\n});\n\nexport const closeVerificationForm = () => ({\n  type: CLOSE_VERIFICATION_FORM,\n});\n","import { OPEN_VERIFICATION_FORM, CLOSE_VERIFICATION_FORM } from './actions';\n\nconst initialVerificationFormState = { visible: false };\n\nconst verificationFormReducer = (state = initialVerificationFormState, action) => {\n  switch (action.type) {\n    case OPEN_VERIFICATION_FORM:\n      return { visible: true };\n    case CLOSE_VERIFICATION_FORM:\n      return { visible: false };\n    default:\n      return state;\n  }\n};\n\nexport default verificationFormReducer;\n","import thunk from 'redux-thunk';\nimport {\n  createStore,\n  combineReducers,\n  applyMiddleware,\n  compose,\n} from 'redux';\n\nimport { resourceFormReducer, resourceReducer } from './resource/reducers';\nimport { projectFormReducer, projectReducer } from './project/reducers';\nimport { accountFormReducer, accountReducer } from './account/reducers';\nimport { taskFormReducer, taskReducer } from './task/reducers';\nimport scheduleReducer from './schedule/reducers';\nimport confirmReducer from './confirm/reducers';\nimport { attachmentFormReducer, attachmentReducer } from './attachment/reducers';\nimport verificationFormReducer from './verification/reducers';\n\nconst rootReducer = combineReducers({\n  resourceForm: resourceFormReducer,\n  resource: resourceReducer,\n  projectForm: projectFormReducer,\n  project: projectReducer,\n  accountForm: accountFormReducer,\n  account: accountReducer,\n  taskForm: taskFormReducer,\n  task: taskReducer,\n  schedule: scheduleReducer,\n  confirm: confirmReducer,\n  attachmentForm: attachmentFormReducer,\n  attachment: attachmentReducer,\n  verificationForm: verificationFormReducer,\n});\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n);\n/* eslint-enable */\n\nexport default store;\n","import React from 'react';\n\nimport '../css/Error.scss';\n\nconst error = ({ action, errors }) => {\n  const title = `${action} failed!`;\n  return (\n    <div className=\"error\">\n      <div className=\"error__title\">{title}</div>\n      <Messages errors={errors} />\n    </div>\n  );\n};\n\nconst Messages = (props) => (\n  props.errors.map((err) => <div className=\"error__message\" key={err.error}>{err.error}</div>)\n);\n\nexport default error;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { INTERNAL_SERVER_ERROR } from '../store/confirm/types';\nimport * as accountActions from '../store/account/actions';\nimport * as projectActions from '../store/project/actions';\nimport * as confirmActions from '../store/confirm/actions';\nimport ErrorMessage from './Error';\nimport Utils from '../utils/Utils';\nimport '../css/Session.scss';\n\nconst mapStateToProps = (state) => {\n  const { accountForm } = state;\n  return {\n    errors: accountForm.errors,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { closeAccountForm, updateAccount } = accountActions;\n  const { getAllProjects } = projectActions;\n  const { openConfirm } = confirmActions;\n  return {\n    closeAccountForm: () => dispatch(closeAccountForm()),\n    updateAccount: (params) => dispatch(updateAccount(params)),\n    getAllProjects: () => dispatch(getAllProjects()),\n    openConfirm: (payload) => dispatch(openConfirm(payload)),\n  };\n};\n\nclass EditAccuount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uri: '',\n      avatar: null,\n      name: '',\n      email: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrentAccount();\n  }\n\n  getCurrentAccount = async () => {\n    const url = Utils.buildRequestUrl('/users/edit');\n    const token = localStorage.getItem('token');\n    const response = await axios.get(url, {\n      headers: { 'X-Reach-token': token },\n    }).catch((error) => error.response);\n\n    if (response.status !== 200) {\n      const { openConfirm } = this.props;\n      openConfirm(INTERNAL_SERVER_ERROR);\n      return;\n    }\n    const { avatar, name, email } = response.data.user;\n    this.setState({ uri: avatar, name, email });\n  }\n\n  handleUpdate = async () => {\n    const { avatar, name, email } = this.state;\n    const params = new FormData();\n    params.append('user[name]', name);\n    params.append('user[email]', email);\n    if (avatar) {\n      params.append('user[avatar]', avatar);\n    }\n\n    const { getAllProjects, updateAccount } = this.props;\n    await updateAccount(params);\n    getAllProjects();\n  }\n\n  onChangeFile = (event) => {\n    const avatar = event.target.files[0];\n    const uri = URL.createObjectURL(avatar);\n    this.setState({ uri, avatar });\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  }\n\n  onChangeEmail = (event) => {\n    const email = event.target.value;\n    this.setState({ email });\n  }\n\n  onClickOverlay = (event) => event.stopPropagation()\n\n  render() {\n    const { closeAccountForm, errors } = this.props;\n    const { uri, name, email } = this.state;\n\n    return (\n      <div className=\"background--edit\" onClick={closeAccountForm}>\n        <div className=\"session--edit\" onClick={this.onClickOverlay}>\n          <div className=\"session__title\">Edit account</div>\n          {errors.length !== 0 && <ErrorMessage action=\"Registration\" errors={errors} />}\n          <label htmlFor=\"avatarForm\" className=\"session__avatar\">\n            <input\n              id=\"avatarForm\"\n              type=\"file\"\n              className=\"session__fileField\"\n              onChange={this.onChangeFile}\n            />\n            {uri === ''\n              ? <FontAwesomeIcon icon={['fas', 'user']} className=\"session__fileIcon\" />\n              : <img src={uri} alt=\"avatar\" className=\"session__preview\" />}\n          </label>\n          <div className=\"session__fileLabel\">Upload your avatar</div>\n          <input\n            type=\"text\"\n            className=\"session__name\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={this.onChangeName}\n          />\n          <input\n            type=\"text\"\n            className=\"session__email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={this.onChangeEmail}\n          />\n          <button type=\"button\" onClick={this.handleUpdate} className=\"session__submit\">\n            Update\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAccuount);\n","import React, { PureComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as resourceActions from '../store/resource/actions';\nimport * as projectActions from '../store/project/actions';\nimport * as accountActions from '../store/account/actions';\nimport * as taskActions from '../store/task/actions';\nimport EditAccount from './EditAccount';\nimport '../css/SideBar.scss';\n\nconst mapStateToProps = (state) => {\n  const { accountForm } = state;\n  return {\n    accountFormVisible: accountForm.visible,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openResourceForm } = resourceActions;\n  const { openProjectForm } = projectActions;\n  const { openAccountForm } = accountActions;\n  const { toggleDeleteButton } = taskActions;\n  return {\n    openResourceForm: () => dispatch(openResourceForm()),\n    openProjectForm: () => dispatch(openProjectForm()),\n    openAccountForm: () => dispatch(openAccountForm()),\n    toggleDeleteButton: () => dispatch(toggleDeleteButton()),\n  };\n};\n\nclass SideBar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountMenuVisible: false,\n      isSignOut: false,\n    };\n  }\n\n  toggleAccountMenu = () => {\n    const { accountMenuVisible } = this.state;\n    this.setState({ accountMenuVisible: !accountMenuVisible });\n  }\n\n  signOut = () => {\n    localStorage.removeItem('token');\n    this.setState({ isSignOut: true });\n  }\n\n  render() {\n    const { accountMenuVisible, isSignOut } = this.state;\n    const {\n      openResourceForm, openProjectForm, openAccountForm, accountFormVisible, toggleDeleteButton,\n    } = this.props;\n\n    return (\n      isSignOut ? <Redirect to=\"/reach/signin\" /> : (\n        <div className=\"sidebar\">\n          <div className=\"sidebar__iconWrapper--plus\" onClick={openProjectForm}>\n            <FontAwesomeIcon icon={['fas', 'plus']} className=\"sidebar__icon\" />\n          </div>\n          <div className=\"sidebar__iconWrapper--minus\" onClick={toggleDeleteButton}>\n            <FontAwesomeIcon icon={['fas', 'minus']} className=\"sidebar__icon\" />\n          </div>\n          <div className=\"sidebar__iconWrapper--resource\" onClick={openResourceForm}>\n            <FontAwesomeIcon icon={['fas', 'tags']} className=\"sidebar__icon\" />\n          </div>\n          <div className=\"sidebar__iconWrapper--account\" onClick={this.toggleAccountMenu}>\n            <FontAwesomeIcon icon={['fas', 'user']} className=\"sidebar__icon\" />\n          </div>\n          {accountMenuVisible && (\n            <div className=\"overlay\" onClick={this.toggleAccountMenu}>\n              <div className=\"accountMenu\">\n                <div className=\"accountMenu__edit\" onClick={openAccountForm}>アカウント編集</div>\n                <div className=\"accountMenu__signout\" onClick={this.signOut}>サインアウト</div>\n              </div>\n            </div>\n          )}\n          {accountFormVisible && <EditAccount />}\n        </div>\n      )\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport * as projectActions from '../store/project/actions';\nimport * as accountActions from '../store/account/actions';\n\nconst notExist = -1;\n\nconst stopPropagation = (event) => event.stopPropagation();\n\nconst mapStateToProps = (state) => {\n  const { project, resource, account } = state;\n  return {\n    projects: project.projects,\n    resources: resource.resources,\n    users: account.users,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { searchProjects } = projectActions;\n  const { getAllAccount } = accountActions;\n  return {\n    searchProjects: (params) => dispatch(searchProjects(params)),\n    getAllAccount: () => dispatch(getAllAccount()),\n  };\n};\n\nclass ProjectHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchByNameVisible: false,\n      searchByDateVisible: false,\n      searchByDurationVisible: false,\n      searchByUsersVisible: false,\n      searchByResourceVisible: false,\n      dateType: '',\n      projectId: '',\n      taskName: '',\n      startDateFrom: '',\n      startDateTo: '',\n      endDateFrom: '',\n      endDateTo: '',\n      extendFrom: '',\n      extendTo: '',\n      orderDuration: '',\n      orderStartDate: '',\n      orderEndDate: '',\n      orderExtend: '',\n      inCharge: [],\n      selectedResources: [],\n    };\n  }\n\n  componentDidMount() {\n    const { getAllAccount } = this.props;\n    getAllAccount();\n  }\n\n  search = () => {\n    const {\n      projectId,\n      taskName,\n      startDateFrom,\n      startDateTo,\n      endDateFrom,\n      endDateTo,\n      extendFrom,\n      extendTo,\n      orderDuration,\n      orderStartDate,\n      orderEndDate,\n      orderExtend,\n      inCharge,\n      selectedResources,\n    } = this.state;\n\n    const params = {\n      project_id: projectId,\n      task_name: taskName,\n      start_date: { from: startDateFrom, to: startDateTo, order: orderStartDate },\n      end_date: { from: endDateFrom, to: endDateTo, order: orderEndDate },\n      extend: { from: extendFrom, to: extendTo, order: orderExtend },\n      duration: { order: orderDuration },\n      in_charge: inCharge,\n      resources: selectedResources,\n    };\n\n    const { searchProjects } = this.props;\n    searchProjects(params);\n  }\n\n  sortingByDateRange = (type) => {\n    const {\n      startDateFrom,\n      startDateTo,\n      endDateFrom,\n      endDateTo,\n      extendFrom,\n      extendTo,\n      orderStartDate,\n      orderEndDate,\n      orderExtend,\n    } = this.state;\n\n    switch (type) {\n      case 'start':\n        return {\n          rangeStart: startDateFrom,\n          rangeEnd: startDateTo,\n          onChangeRangeStart: this.onChangeStartDateRangeS,\n          onChangeRangeEnd: this.onChangeStartDateRangeE,\n          order: orderStartDate,\n        };\n      case 'end':\n        return {\n          rangeStart: endDateFrom,\n          rangeEnd: endDateTo,\n          onChangeRangeStart: this.onChangeEndDateRangeS,\n          onChangeRangeEnd: this.onChangeEndDateRangeE,\n          order: orderEndDate,\n        };\n      case 'extend':\n        return {\n          rangeStart: extendFrom,\n          rangeEnd: extendTo,\n          onChangeRangeStart: this.onChangeExtendRangeS,\n          onChangeRangeEnd: this.onChangeExtendRangeE,\n          order: orderExtend,\n        };\n      default:\n        return {};\n    }\n  }\n\n  onClickResource = () => {\n    const { searchByResourceVisible } = this.state;\n    this.setState({ searchByResourceVisible: !searchByResourceVisible });\n  }\n\n  onClickName = () => {\n    const { searchByNameVisible } = this.state;\n    this.setState({ searchByNameVisible: !searchByNameVisible });\n  }\n\n  onClickDate = (event) => {\n    const { type } = event.currentTarget.dataset;\n    const { searchByDateVisible } = this.state;\n    this.setState({ searchByDateVisible: !searchByDateVisible, dateType: type });\n  }\n\n  onClickDuration = () => {\n    const { searchByDurationVisible } = this.state;\n    this.setState({ searchByDurationVisible: !searchByDurationVisible });\n  }\n\n  onClickInCharge = () => {\n    const { searchByUsersVisible } = this.state;\n    this.setState({ searchByUsersVisible: !searchByUsersVisible });\n  }\n\n  onChangeOrder = async (event) => {\n    const { by } = event.currentTarget.dataset;\n    const order = event.target.value;\n\n    switch (by) {\n      case 'duration':\n        await this.setState({\n          orderDuration: order,\n          orderStartDate: '',\n          orderEndDate: '',\n          orderExtend: '',\n        });\n        break;\n      case 'start':\n        await this.setState({\n          orderDuration: '',\n          orderStartDate: order,\n          orderEndDate: '',\n          orderExtend: '',\n        });\n        break;\n      case 'end':\n        await this.setState({\n          orderDuration: '',\n          orderStartDate: '',\n          orderEndDate: order,\n          orderExtend: '',\n        });\n        break;\n      case 'extend':\n        await this.setState({\n          orderDuration: '',\n          orderStartDate: '',\n          orderEndDate: '',\n          orderExtend: order,\n        });\n        break;\n      default:\n    }\n    this.search();\n  }\n\n  onChangeProject = async (event) => {\n    const projectId = event.target.value;\n    await this.setState({ projectId });\n    this.search();\n  }\n\n  onChangeTask = async (event) => {\n    const taskName = event.target.value;\n    await this.setState({ taskName });\n    this.search();\n  }\n\n  onChangeStartDateRangeS = async (startDateFrom) => {\n    await this.setState({ startDateFrom });\n    this.search();\n  }\n\n  onChangeStartDateRangeE = async (startDateTo) => {\n    await this.setState({ startDateTo });\n    this.search();\n  }\n\n  onChangeEndDateRangeS = async (endDateFrom) => {\n    await this.setState({ endDateFrom });\n    this.search();\n  }\n\n  onChangeEndDateRangeE = async (endDateTo) => {\n    this.setState({ endDateTo });\n    this.search();\n  }\n\n  onChangeExtendRangeS = async (extendFrom) => {\n    await this.setState({ extendFrom });\n    this.search();\n  }\n\n  onChangeExtendRangeE = async (extendTo) => {\n    await this.setState({ extendTo });\n    this.search();\n  }\n\n  onClickAvatar = async (event) => {\n    const { inCharge } = this.state;\n    const inChargeCopy = inCharge;\n    const { id } = event.currentTarget.dataset;\n    const targetIndex = inCharge.indexOf(id);\n    if (targetIndex === notExist) {\n      inChargeCopy.push(id);\n    } else {\n      inChargeCopy.splice(targetIndex, 1);\n    }\n    await this.setState({ inCharge: inChargeCopy });\n    this.search();\n  }\n\n  onClickResourceIcon = async (event) => {\n    const { selectedResources } = this.state;\n    const selectedResourcesCopy = selectedResources;\n    const { id } = event.currentTarget.dataset;\n    const targetIndex = selectedResources.indexOf(id);\n    if (targetIndex === notExist) {\n      selectedResourcesCopy.push(id);\n    } else {\n      selectedResourcesCopy.splice(targetIndex, 1);\n    }\n    await this.setState({ selectedResources: selectedResourcesCopy });\n    this.search();\n  }\n\n  clearSearchName = async () => {\n    await this.setState({\n      taskName: '',\n      projectId: '',\n      searchByNameVisible: false,\n    });\n    this.search();\n  }\n\n  clearSearchStartDate = async () => {\n    await this.setState({\n      startDateFrom: '',\n      startDateTo: '',\n      orderStartDate: '',\n      searchByDateVisible: false,\n    });\n    this.search();\n  }\n\n  clearSearchEndDate = async () => {\n    await this.setState({\n      endDateFrom: '',\n      endDateTo: '',\n      orderEndDate: '',\n      searchByDateVisible: false,\n    });\n    this.search();\n  }\n\n  clearSearchExtend = async () => {\n    await this.setState({\n      extendFrom: '',\n      extendTo: '',\n      orderExtend: '',\n      searchByDateVisible: false,\n    });\n    this.search();\n  }\n\n  clearSearchDuration = async () => {\n    await this.setState({ orderDuration: '', searchByDurationVisible: false });\n    this.search();\n  }\n\n  clearSearchInCharge = async () => {\n    await this.setState({ inCharge: [], searchByUsersVisible: false });\n    this.search();\n  }\n\n  closeAllModal = () => {\n    this.setState({\n      searchByNameVisible: false,\n      searchByDateVisible: false,\n      searchByDurationVisible: false,\n      searchByUsersVisible: false,\n      searchByResourceVisible: false,\n    });\n  }\n\n  render() {\n    const {\n      searchByNameVisible,\n      searchByDateVisible,\n      searchByDurationVisible,\n      searchByUsersVisible,\n      searchByResourceVisible,\n      projectId,\n      taskName,\n      dateType,\n      startDateFrom,\n      startDateTo,\n      endDateFrom,\n      endDateTo,\n      extendFrom,\n      extendTo,\n      orderStartDate,\n      orderEndDate,\n      orderExtend,\n      orderDuration,\n      inCharge,\n      selectedResources,\n    } = this.state;\n\n    const resourceIconClass = selectedResources.length === 0 ? 'resourceIcon' : 'resourceIcon--selected';\n    const {\n      rangeStart, rangeEnd, onChangeRangeStart, onChangeRangeEnd, order,\n    } = this.sortingByDateRange(dateType);\n\n    return (\n      <div className=\"gantt-index-header\">\n        <div className=\"gantt-index-header__resource\">\n          <div className={resourceIconClass} onClick={this.onClickResource} />\n        </div>\n        <div className=\"gantt-index-header__name\">\n          {projectId === '' && taskName === ''\n            ? <span className=\"gantt-index-header__label\" onClick={this.onClickName}>タイトル</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" onClick={this.onClickName}>タイトル</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchName}>×</span>\n              </div>\n            )}\n        </div>\n\n        <div className=\"gantt-index-header__startDate\">\n          {startDateFrom === '' && startDateTo === '' && orderStartDate === ''\n            ? <span className=\"gantt-index-header__label\" data-type=\"start\" onClick={this.onClickDate}>開始日</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" data-type=\"start\" onClick={this.onClickDate}>開始日</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchStartDate}>×</span>\n              </div>\n            )}\n        </div>\n\n        <div className=\"gantt-index-header__endDate\">\n          {endDateFrom === '' && endDateTo === '' && orderEndDate === ''\n            ? <span className=\"gantt-index-header__label\" data-type=\"end\" onClick={this.onClickDate}>終了日</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" data-type=\"end\" onClick={this.onClickDate}>終了日</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchEndDate}>×</span>\n              </div>\n            )}\n        </div>\n\n        <div className=\"gantt-index-header__extend\">\n          {extendFrom === '' && extendTo === '' && orderExtend === ''\n            ? <span className=\"gantt-index-header__label\" data-type=\"extend\" onClick={this.onClickDate}>延長</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" data-type=\"extend\" onClick={this.onClickDate}>延長</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchExtend}>×</span>\n              </div>\n            )}\n        </div>\n\n        <div className=\"gantt-index-header__duration\">\n          {orderDuration === ''\n            ? <span className=\"gantt-index-header__label\" onClick={this.onClickDuration}>期間</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" onClick={this.onClickDuration}>期間</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchDuration}>×</span>\n              </div>\n            )}\n        </div>\n        <div className=\"gantt-index-header__inCharge\">\n          {inCharge.length === 0\n            ? <span className=\"gantt-index-header__label\" onClick={this.onClickInCharge}>担当</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" onClick={this.onClickInCharge}>担当</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchInCharge}>×</span>\n              </div>\n            )}\n        </div>\n        {searchByResourceVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByResource\n              selectedResources={selectedResources}\n              onClickResource={this.onClickResourceIcon}\n            />\n          </div>\n        )}\n        {searchByNameVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByName\n              projectId={projectId}\n              onChangeProject={this.onChangeProject}\n              taskName={taskName}\n              onChangeTask={this.onChangeTask}\n            />\n          </div>\n        )}\n        {searchByDateVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByDate\n              dateType={dateType}\n              rangeStart={rangeStart}\n              rangeEnd={rangeEnd}\n              onChangeRangeStart={onChangeRangeStart}\n              onChangeRangeEnd={onChangeRangeEnd}\n              onChangeOrder={this.onChangeOrder}\n              selected={order}\n            />\n          </div>\n        )}\n        {searchByDurationVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByDuration onChangeOrder={this.onChangeOrder} selected={orderDuration} />\n          </div>\n        )}\n        {searchByUsersVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByUsers inCharge={inCharge} onClickAvatar={this.onClickAvatar} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst OrderBy = (props) => {\n  const { onChangeOrder, by, selected } = props;\n  const selections = [{ label: '昇順', value: 'ASC' }, { label: '降順', value: 'DESC' }];\n  return (\n    <select data-by={by} value={selected} onChange={onChangeOrder} className=\"search__order\">\n      <option key=\"default\" value={null} aria-label=\"order\" />\n      {selections.map((selection) => (\n        <option key={selection.label} value={selection.value}>{selection.label}</option>\n      ))}\n    </select>\n  );\n};\n\nconst SearchByDuration = (props) => {\n  const { onChangeOrder, selected } = props;\n  return (\n    <div className=\"search--duration\" onClick={stopPropagation}>\n      <div className=\"search__label\">並べ替え</div>\n      <OrderBy by=\"duration\" onChangeOrder={onChangeOrder} selected={selected} />\n      <div className=\"search__divide\" />\n    </div>\n  );\n};\n\nconst SearchByDate = (props) => {\n  const {\n    rangeStart,\n    rangeEnd,\n    onChangeRangeStart,\n    onChangeRangeEnd,\n    dateType,\n    onChangeOrder,\n    order,\n  } = props;\n\n  const className = `search--${dateType}`;\n  return (\n    <div className={className} onClick={stopPropagation}>\n      <div className=\"search__label\">並べ替え</div>\n      <OrderBy by={dateType} onChangeOrder={onChangeOrder} selected={order} />\n      <div className=\"search__divide\" />\n      <div className=\"search__label\">表示する期間を指定</div>\n      <div className=\"search__dateWrapper\">\n        <DatePicker\n          className=\"search__dateRange\"\n          dateFormat=\"yyyy/MM/dd\"\n          showWeekNumbers\n          placeholderText=\"範囲の開始日\"\n          selected={rangeStart}\n          onChange={onChangeRangeStart}\n        />\n        <DatePicker\n          className=\"search__dateRange\"\n          dateFormat=\"yyyy/MM/dd\"\n          showWeekNumbers\n          placeholderText=\"範囲の終了日\"\n          selected={rangeEnd}\n          onChange={onChangeRangeEnd}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst SearchByName = connect(mapStateToProps)((props) => {\n  const {\n    projectId, projects, onChangeProject, taskName, onChangeTask,\n  } = props;\n\n  return (\n    <div className=\"search--name\" onClick={stopPropagation}>\n      <div className=\"search__label\">プロジェクトを選択</div>\n      <select value={projectId} onChange={onChangeProject} className=\"search__project\">\n        <option key=\"default\" value={null} aria-label=\"selectProject\" />\n        {projects.map((project) => (\n          <option key={project.name} value={project.id}>{project.name}</option>\n        ))}\n      </select>\n      <div className=\"search__divide\" />\n      <div className=\"search__label\">タスク名で検索</div>\n      <input type=\"text\" className=\"search__task\" value={taskName} onChange={onChangeTask} />\n    </div>\n  );\n});\n\nconst SearchByUsers = connect(mapStateToProps)((props) => {\n  const { users, inCharge, onClickAvatar } = props;\n  return (\n    <div className=\"search--user\" onClick={stopPropagation}>\n      <div className=\"search__label\">担当で絞り込み</div>\n      <div className=\"search__usersWrapper\">\n        {users.map((user) => {\n          const targetIndex = inCharge.indexOf(String(user.id));\n          return (\n            <div key={user.id} className=\"avatar\">\n              <div data-id={user.id} onClick={onClickAvatar} className=\"avatar__wrapper\">\n                <img src={user.avatar} alt={user.name} className=\"avatar__image\" />\n                {targetIndex !== notExist && <div className=\"avatar__selected\" />}\n              </div>\n              <div className=\"avatar__name\">{user.name}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n});\n\nconst SearchByResource = connect(mapStateToProps)((props) => {\n  const { resources, selectedResources, onClickResource } = props;\n  return (\n    <div className=\"search--resource\" onClick={stopPropagation}>\n      <div className=\"search__label\">リソースで絞り込み</div>\n      <div className=\"search__resourceWrapper\">\n        {resources.map((resource) => {\n          const targetIndex = selectedResources.indexOf(String(resource.id));\n          return (\n            <div key={resource.id} className=\"resource\">\n              <div data-id={resource.id} onClick={onClickResource} className=\"resource__wrapper\">\n                <div className=\"resource__icon\" style={{ backgroundColor: resource.color }} />\n                {targetIndex !== notExist && <div className=\"resource__selected\" />}\n              </div>\n              <div className=\"resource__name\">{resource.name}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectHeader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as taskActions from '../store/task/actions';\nimport * as projectActions from '../store/project/actions';\nimport '../css/Task.scss';\n\nconst mapStateToProps = (state) => {\n  const { task } = state;\n  return {\n    deleteButtonVisible: task.deleteButtonVisible,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openTaskForm } = taskActions;\n  const { deleteTask } = projectActions;\n  return {\n    openTaskForm: ({ taskID }) => dispatch(openTaskForm({ taskID })),\n    deleteTask: (id) => dispatch(deleteTask(id)),\n  };\n};\n\nconst Avatars = ({ members }) => (\n  members.map((member, i) => {\n    if (i > 3) {\n      return null;\n    }\n    if (i < 3) {\n      return <img key={member.name} src={member.avatar} alt={member.name} className=\"task__avatar\" />;\n    }\n    return <div key={String(i)} className=\"task__avatar--length\">{members.length}</div>;\n  })\n);\n\nconst Task = (props) => {\n  const { tasks, deleteButtonVisible } = props;\n  const handleDestroy = (event) => {\n    event.stopPropagation();\n    const { id } = event.currentTarget.dataset;\n    const { deleteTask } = props;\n    deleteTask(id);\n  };\n\n  const onClick = (event) => {\n    const { openTaskForm } = props;\n    const { id } = event.currentTarget.dataset;\n    openTaskForm({ taskID: id });\n  };\n\n  return (\n    tasks.map((task) => {\n      const className = task.percentComplete === 'progress' ? 'task' : 'task--complete';\n      return (\n        <div key={task.id} data-id={task.id} className={className} onClick={onClick}>\n          <div className=\"task__icon\">\n            {deleteButtonVisible ? (\n              <FontAwesomeIcon\n                data-id={task.id}\n                icon={['fas', 'minus-circle']}\n                className=\"task__delete\"\n                onClick={handleDestroy}\n              />\n            ) : <div className=\"task__resource\" style={{ backgroundColor: task.resource.color }} />}\n          </div>\n          <div className=\"task__name\">{task.name}</div>\n          <div className=\"task__startDate\">{task.startDate}</div>\n          <div className=\"task__endDate\">{task.endDate}</div>\n          <div className=\"task__extend\">{task.extend}</div>\n          <div className=\"task__duration\">{task.duration}</div>\n          <div className=\"task__inCharge\">\n            <Avatars members={task.users} />\n          </div>\n        </div>\n      );\n    })\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DatePicker from 'react-datepicker';\nimport Moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { INTERNAL_SERVER_ERROR } from '../store/confirm/types';\nimport * as taskActions from '../store/task/actions';\nimport * as projectActions from '../store/project/actions';\nimport * as confirmActions from '../store/confirm/actions';\nimport ErrorMessage from './Error';\nimport Utils from '../utils/Utils';\nimport '../css/Form.scss';\n\nconst notExist = -1;\n\nconst mapStateToProps = (state) => {\n  const { resource, account, taskForm } = state;\n  return {\n    users: account.users,\n    resources: resource.resources,\n    taskID: taskForm.taskID,\n    projectID: taskForm.projectID,\n    errors: taskForm.errors,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { closeTaskForm } = taskActions;\n  const { createTask, updateTask } = projectActions;\n  const { openConfirm } = confirmActions;\n  return {\n    closeTaskForm: () => dispatch(closeTaskForm()),\n    createTask: (params) => dispatch(createTask(params)),\n    updateTask: (id, params) => dispatch(updateTask(id, params)),\n    openConfirm: (payload) => dispatch(openConfirm(payload)),\n  };\n};\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n    const { taskID } = this.props;\n    this.action = taskID ? 'edit' : 'new';\n    this.submit = taskID ? this.handleUpdate : this.handleCreate;\n    this.state = {\n      name: '',\n      selectedResource: '',\n      startDate: null,\n      endDate: null,\n      complete: false,\n      inCharge: [],\n      description: '',\n    };\n  }\n\n  componentDidMount() {\n    if (this.action === 'edit') {\n      this.editTaskFormValue();\n    }\n  }\n\n  editTaskFormValue = async () => {\n    const { taskID } = this.props;\n    const token = localStorage.getItem('token');\n    const url = Utils.buildRequestUrl(`/tasks/${taskID}/edit`);\n    const response = await axios.get(url, {\n      headers: { 'X-Reach-token': token },\n    }).catch((error) => error.response);\n\n    if (response.status !== 200) {\n      const { openConfirm } = this.props;\n      openConfirm(INTERNAL_SERVER_ERROR);\n      return;\n    }\n\n    const {\n      description,\n      startDate,\n      endDate,\n      extend,\n      name,\n      percentComplete,\n      userIds,\n      resourceId,\n    } = response.data.task;\n\n    const complete = percentComplete === 'complete';\n    const stringUserIds = userIds.map((userId) => String(userId));\n    this.setState({\n      name,\n      complete,\n      description,\n      startDate: new Date(startDate),\n      endDate: extend ? new Date(extend) : new Date(endDate),\n      inCharge: stringUserIds,\n      selectedResource: resourceId,\n    });\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  }\n\n  onChangeResource = (event) => {\n    const selectedResource = event.target.value;\n    this.setState({ selectedResource });\n  }\n\n  onChangeStartDate = (date) => {\n    this.setState({ startDate: date });\n  }\n\n  onChangeEndDate = (date) => {\n    this.setState({ endDate: date });\n  }\n\n  onCheck = () => {\n    const { complete } = this.state;\n    this.setState({ complete: !complete });\n  }\n\n  onClickAvatar = (event) => {\n    const { inCharge } = this.state;\n    const inChargeCopy = inCharge;\n    const { id } = event.currentTarget.dataset;\n    const targetIndex = inCharge.indexOf(id);\n    if (targetIndex === notExist) {\n      inChargeCopy.push(id);\n    } else {\n      inChargeCopy.splice(targetIndex, 1);\n    }\n    this.setState({ inCharge: inChargeCopy });\n  }\n\n  onChangeDescription = (event) => {\n    const description = event.target.value;\n    this.setState({ description });\n  }\n\n  handleCreate = () => {\n    const { projectID, createTask } = this.props;\n    const {\n      name,\n      selectedResource,\n      startDate,\n      endDate,\n      inCharge,\n      description,\n    } = this.state;\n\n    const duration = Moment(endDate).diff(Moment(startDate), 'days');\n    const params = {\n      name,\n      description,\n      duration,\n      resource_id: selectedResource,\n      project_id: projectID,\n      start_date: startDate,\n      end_date: endDate,\n      user_ids: inCharge,\n    };\n    createTask(params);\n  }\n\n  handleUpdate = () => {\n    const {\n      name,\n      selectedResource,\n      startDate,\n      endDate,\n      complete,\n      inCharge,\n      description,\n    } = this.state;\n\n    const duration = Moment(endDate).diff(Moment(startDate), 'days');\n    const percent_complete = complete ? 'complete' : 'progress';\n    const params = {\n      name,\n      description,\n      duration,\n      percent_complete,\n      resource_id: selectedResource,\n      start_date: startDate,\n      extend: endDate,\n      user_ids: inCharge,\n    };\n    const { taskID, updateTask } = this.props;\n    updateTask(taskID, params);\n  }\n\n  onClickOverlay = (event) => event.stopPropagation()\n\n  render() {\n    const title = this.action === 'edit' ? 'Update Task' : 'Add Task';\n    const {\n      closeTaskForm, resources, users, errors,\n    } = this.props;\n\n    const {\n      selectedResource,\n      name,\n      startDate,\n      endDate,\n      complete,\n      inCharge,\n      description,\n    } = this.state;\n\n    return (\n      <div className=\"modalOverlay\" onClick={closeTaskForm}>\n        <div className=\"taskForm\" onClick={this.onClickOverlay}>\n          <div className=\"taskForm__close\" onClick={closeTaskForm}>×</div>\n          <div className=\"taskForm__title\">{title}</div>\n          {errors.length !== 0 && <ErrorMessage action=\"Task creation\" errors={errors} />}\n          <div className=\"taskFormRow\">\n            <div className=\"taskFormRow__label\">タイトル</div>\n            <input\n              type=\"text\"\n              className=\"taskFormRow__name\"\n              value={name}\n              onChange={this.onChangeName}\n            />\n          </div>\n          <div className=\"taskFormRow\">\n            <div className=\"taskFormRow__label\">リソース</div>\n            <select\n              value={selectedResource}\n              onChange={this.onChangeResource}\n              className=\"taskFormRow__resource\"\n            >\n              <option key=\"default\" value={null} aria-label=\"...select\" />\n              {resources.map((resource) => (\n                <option key={resource.id} value={resource.id}>{resource.name}</option>\n              ))}\n            </select>\n            <div className=\"taskFormRow__divide\" />\n          </div>\n          <div className=\"taskFormRow\">\n            <div className=\"taskFormRow__label\">開始日</div>\n            <DatePicker\n              className=\"taskFormRow__date\"\n              dateFormat=\"yyyy/MM/dd\"\n              showWeekNumbers\n              selected={startDate}\n              onChange={this.onChangeStartDate}\n            />\n          </div>\n          <div className=\"taskFormRow\">\n            <div className=\"taskFormRow__label\">終了日</div>\n            <DatePicker\n              className=\"taskFormRow__date\"\n              dateFormat=\"yyyy/MM/dd\"\n              showWeekNumbers\n              selected={endDate}\n              onChange={this.onChangeEndDate}\n            />\n          </div>\n          {this.action === 'edit' && (\n            <div className=\"taskFormRow\">\n              <div className=\"taskFormRow__label\">完了</div>\n              <div className=\"taskFormRow__complete\" onClick={this.onCheck}>\n                <div className=\"taskFormRow__checkbox\">\n                  <FontAwesomeIcon icon={['far', 'square']} />\n                  {complete && <FontAwesomeIcon icon={['fas', 'check']} className=\"taskFormRow__checked\" />}\n                </div>\n              </div>\n            </div>\n          )}\n          <div className=\"taskFormRow\">\n            <div className=\"taskFormRow__label\">担当</div>\n            <div className=\"taskFormRow__inCharge\">\n              {users.map((user) => {\n                const targetIndex = inCharge.indexOf(String(user.id));\n                return (\n                  <div key={user.id} className=\"avatar\">\n                    <div data-id={user.id} onClick={this.onClickAvatar} className=\"avatar__wrapper\">\n                      <img src={user.avatar} alt={user.name} className=\"avatar__image\" />\n                      {targetIndex !== notExist && <div className=\"avatar__selected\" />}\n                    </div>\n                    <div className=\"avatar__name\">{user.name}</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"taskFormRow\">\n            <div className=\"taskFormRow__label\">説明</div>\n            <textarea\n              className=\"taskFormRow__description\"\n              value={description}\n              onChange={this.onChangeDescription}\n            />\n          </div>\n          <button type=\"button\" onClick={this.submit} className=\"taskForm__button\">\n            {title}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { INTERNAL_SERVER_ERROR } from '../store/confirm/types';\nimport * as projectActions from '../store/project/actions';\nimport * as confirmActions from '../store/confirm/actions';\nimport Utils from '../utils/Utils';\nimport ErrorMessage from './Error';\nimport { ask, destroy } from '../utils/Text';\n\nimport '../css/Form.scss';\n\nconst mapStateToProps = (state) => {\n  const { projectForm } = state;\n  return {\n    projectID: projectForm.id,\n    errors: projectForm.errors,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openConfirm } = confirmActions;\n  const {\n    closeProjectForm, createProject, deleteProject, updateProject,\n  } = projectActions;\n\n  return {\n    closeProjectForm: () => dispatch(closeProjectForm()),\n    createProject: (params) => dispatch(createProject(params)),\n    deleteProject: (projectID) => dispatch(deleteProject(projectID)),\n    updateProject: (projectID, params) => dispatch(updateProject(projectID, params)),\n    openConfirm: (payload) => dispatch(openConfirm(payload)),\n  };\n};\n\nclass ProjectForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    const { projectID } = this.props;\n    this.action = projectID ? 'edit' : 'new';\n    this.submit = projectID ? this.handleUpdate : this.handleCreate;\n    this.state = {\n      name: '',\n      description: '',\n    };\n  }\n\n  componentDidMount() {\n    if (this.action === 'edit') {\n      this.editProjectFormValue();\n    }\n  }\n\n  editProjectFormValue = async () => {\n    const { projectID } = this.props;\n    const url = Utils.buildRequestUrl(`/projects/${projectID}/edit`);\n    const token = localStorage.getItem('token');\n    const response = await axios.get(url, {\n      headers: { 'X-Reach-token': token },\n    }).catch((error) => error.response);\n\n    if (response.status !== 200) {\n      const { openConfirm } = this.props;\n      openConfirm(INTERNAL_SERVER_ERROR);\n      return;\n    }\n    const { name, description } = response.data.project;\n    this.setState({ name, description });\n  }\n\n  handleCreate = () => {\n    const { createProject } = this.props;\n    const { name, description } = this.state;\n    const params = { name, description };\n    createProject(params);\n  }\n\n  handleDestroy = () => {\n    const { deleteProject, projectID, openConfirm } = this.props;\n    const confirmConfig = {\n      type: 'ask',\n      title: `Project ${destroy}`,\n      description: ask,\n      confirm: () => deleteProject(projectID),\n    };\n    openConfirm(confirmConfig);\n  }\n\n  handleUpdate = () => {\n    const { updateProject, projectID } = this.props;\n    const { name, description } = this.state;\n    const params = { name, description };\n    updateProject(projectID, params);\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  }\n\n  onChangeDescription = (event) => {\n    const description = event.target.value;\n    this.setState({ description });\n  }\n\n  onClickOverlay = (event) => event.stopPropagation()\n\n  render() {\n    const { closeProjectForm, errors } = this.props;\n    const { name, description } = this.state;\n\n    const title = this.action === 'new' ? 'Create Project' : 'Update Project';\n    return (\n      <div className=\"modalOverlay\" onClick={closeProjectForm}>\n        <div className=\"modalForm\" onClick={this.onClickOverlay}>\n          <div className=\"modalForm__title\">{title}</div>\n          {errors.length !== 0 && <ErrorMessage action=\"Project creation\" errors={errors} />}\n          <input\n            type=\"text\"\n            className=\"modalForm__textInput\"\n            placeholder=\"プロジェクト名を入力\"\n            value={name}\n            onChange={this.onChangeName}\n          />\n          <textarea\n            className=\"modalForm__textarea\"\n            placeholder=\"プロジェクトの説明を入力\"\n            value={description}\n            onChange={this.onChangeDescription}\n          />\n          <button type=\"button\" onClick={this.submit} className=\"modalForm__button\">\n            {title}\n          </button>\n          {this.action === 'edit' && (\n            <button type=\"button\" onClick={this.handleDestroy} className=\"modalForm__button--delete\">\n              Delete Project\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as attachmentAction from '../store/attachment/actions';\nimport ErrorMessage from './Error';\nimport '../css/Form.scss';\n\nconst mapStateToProps = (state) => {\n  const { attachmentForm, attachment } = state;\n  return {\n    projectID: attachmentForm.projectID,\n    attachmentFormVisible: attachmentForm.visible,\n    errors: attachmentForm.errors,\n    attachments: attachment.attachments,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const {\n    closeAttachmentForm, getAllAttachment, createAttachment, deleteAttachment,\n  } = attachmentAction;\n\n  return {\n    closeAttachmentForm: () => dispatch(closeAttachmentForm()),\n    getAllAttachment: (projectID) => dispatch(getAllAttachment(projectID)),\n    createAttachment: (params, projectID) => dispatch(createAttachment(params, projectID)),\n    deleteAttachment: (id) => dispatch(deleteAttachment(id)),\n  };\n};\n\nclass AttachmentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      link: '',\n    };\n  }\n\n  componentDidMount() {\n    const { projectID, getAllAttachment } = this.props;\n    getAllAttachment(projectID);\n  }\n\n  handleCreate = () => {\n    const { name, link } = this.state;\n    const { projectID, createAttachment } = this.props;\n    const params = { name, url: link };\n    createAttachment(params, projectID);\n  }\n\n  handleDestroy = async (event) => {\n    const { id } = event.currentTarget.dataset;\n    const { deleteAttachment } = this.props;\n    deleteAttachment(id);\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  }\n\n  onChangeUrl = (event) => {\n    const link = event.target.value;\n    this.setState({ link });\n  }\n\n  stopPropagation = (event) => event.stopPropagation()\n\n  render() {\n    const { closeAttachmentForm, attachments, errors } = this.props;\n    const { name, link } = this.state;\n\n    return (\n      <div className=\"modalOverlay\" onClick={closeAttachmentForm}>\n        <div className=\"modalForm\" onClick={this.stopPropagation}>\n          <div className=\"modalForm__title\">Attachments</div>\n          {errors.length !== 0 && <ErrorMessage action=\"Add link\" errors={errors} />}\n          <div className=\"modalFormUrl\">\n            <input\n              type=\"text\"\n              className=\"modalFormUrl__name\"\n              placeholder=\"Label\"\n              value={name}\n              onChange={this.onChangeName}\n            />\n            <input\n              type=\"text\"\n              className=\"modalFormUrl__url\"\n              placeholder=\"URL\"\n              value={link}\n              onChange={this.onChangeUrl}\n            />\n            <FontAwesomeIcon\n              icon={['fas', 'plus-circle']}\n              className=\"modalFormUrl__add\"\n              onClick={this.handleCreate}\n            />\n          </div>\n          <div className=\"urlIndex\">\n            {attachments.map((attachment) => (\n              <div className=\"urlList\" key={attachment.id}>\n                <FontAwesomeIcon icon={['fas', 'link']} className=\"urlList__icon\" />\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={attachment.url}\n                  className=\"urlList__link\"\n                >\n                  {attachment.name}\n                </a>\n                <FontAwesomeIcon\n                  icon={['fas', 'trash-alt']}\n                  className=\"urlList__delete\"\n                  data-id={attachment.id}\n                  onClick={this.handleDestroy}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AttachmentForm);\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\n\nimport * as projectActions from '../store/project/actions';\nimport * as taskActions from '../store/task/actions';\nimport * as confirmActions from '../store/confirm/actions';\nimport * as attachmentAction from '../store/attachment/actions';\nimport Task from './Task';\nimport TaskForm from './TaskForm';\nimport ProjectForm from './ProjectForm';\nimport AttachmentForm from './AttachmentForm';\nimport '../css/Project.scss';\n\nconst mapStateToProps = (state) => {\n  const {\n    projectForm, project, taskForm, attachmentForm,\n  } = state;\n\n  return {\n    projectFormVisible: projectForm.visible,\n    projectID: projectForm.id,\n    projects: project.projects,\n    taskFormVisible: taskForm.visible,\n    taskID: taskForm.id,\n    attachmentFormVisible: attachmentForm.visible,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openProjectForm, closeProjectForm, getAllProjects } = projectActions;\n  const { openTaskForm } = taskActions;\n  const { closeConfirm } = confirmActions;\n  const { openAttachmentForm } = attachmentAction;\n  return {\n    openProjectForm: (id) => dispatch(openProjectForm(id)),\n    closeProjectForm: () => dispatch(closeProjectForm()),\n    getAllProjects: () => dispatch(getAllProjects()),\n    openTaskForm: ({ projectID }) => dispatch(openTaskForm({ projectID })),\n    closeConfirm: () => dispatch(closeConfirm()),\n    openAttachmentForm: (projectID) => dispatch(openAttachmentForm(projectID)),\n  };\n};\n\nclass Projects extends Component {\n  componentDidMount() {\n    const { getAllProjects } = this.props;\n    getAllProjects();\n  }\n\n  componentDidUpdate(previousProps) {\n    const { projects, closeProjectForm, closeConfirm } = this.props;\n    if (previousProps.projects.length !== projects.length) {\n      closeProjectForm();\n      closeConfirm();\n    }\n  }\n\n  onClickEditProject = (event) => {\n    const { openProjectForm } = this.props;\n    const { id } = event.currentTarget.dataset;\n    openProjectForm(id);\n  };\n\n  onClickAddTask = (event) => {\n    const { openTaskForm } = this.props;\n    const { id } = event.currentTarget.dataset;\n    openTaskForm({ projectID: id });\n  }\n\n  onClickAttachmentIcon = (event) => {\n    const { openAttachmentForm } = this.props;\n    const { id } = event.currentTarget.dataset;\n    openAttachmentForm(id);\n  }\n\n  render() {\n    const {\n      projects, projectFormVisible, taskFormVisible, attachmentFormVisible,\n    } = this.props;\n\n    return (\n      <>\n        {projectFormVisible && <ProjectForm />}\n        {taskFormVisible && <TaskForm />}\n        {attachmentFormVisible && <AttachmentForm />}\n        {projects.map((project, index) => (\n          <div key={project.id} className=\"project\">\n            <div className=\"projectHeader\">\n              <div className=\"projectHeader__name\">{project.name}</div>\n              <FontAwesomeIcon\n                icon={['fas', 'edit']}\n                className=\"projectHeader__edit\"\n                data-id={project.id}\n                onClick={this.onClickEditProject}\n              />\n              <FontAwesomeIcon\n                icon={['fas', 'plus']}\n                className=\"projectHeader__addTask\"\n                data-id={project.id}\n                onClick={this.onClickAddTask}\n              />\n              <FontAwesomeIcon\n                icon={['fas', 'link']}\n                className=\"projectHeader__link\"\n                data-id={project.id}\n                onClick={this.onClickAttachmentIcon}\n              />\n            </div>\n            {project.tasks && <Task index={index} tasks={project.tasks} />}\n          </div>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { INTERNAL_SERVER_ERROR } from '../store/confirm/types';\nimport * as projectActions from '../store/project/actions';\nimport * as resourceActions from '../store/resource/actions';\nimport * as confirmActions from '../store/confirm/actions';\nimport ErrorMessage from './Error';\nimport Utils from '../utils/Utils';\nimport { ask, destroy } from '../utils/Text';\n\nconst mapStateToProps = (state) => {\n  const { resourceForm } = state;\n  return {\n    resourceID: resourceForm.id,\n    errors: resourceForm.errors,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { getAllProjects } = projectActions;\n  const { openConfirm } = confirmActions;\n  const {\n    closeResourceForm, createResource, deleteResource, updateResource,\n  } = resourceActions;\n\n  return {\n    getAllProjects: () => dispatch(getAllProjects()),\n    closeResourceForm: () => dispatch(closeResourceForm()),\n    createResource: (params) => dispatch(createResource(params)),\n    deleteResource: (resourceID) => dispatch(deleteResource(resourceID)),\n    updateResource: (resourceID, params) => dispatch(updateResource(resourceID, params)),\n    openConfirm: (payload) => dispatch(openConfirm(payload)),\n  };\n};\n\nclass ResourceForm extends PureComponent {\n  constructor(props) {\n    super(props);\n    const { resourceID } = this.props;\n    this.action = resourceID ? 'edit' : 'new';\n    this.submit = resourceID ? this.handleUpdate : this.handleCreate;\n    this.state = {\n      name: '',\n      colors: [],\n      pickedColor: '',\n    };\n  }\n\n  componentDidMount() {\n    this.token = localStorage.getItem('token');\n    this.getIndexColors();\n    if (this.action === 'edit') {\n      this.editResourceFormValue();\n    }\n  }\n\n  getIndexColors = async () => {\n    const url = Utils.buildRequestUrl('/colors');\n    const response = await axios.get(url, {\n      headers: { 'X-Reach-token': this.token },\n    }).catch((error) => error.response);\n\n    if (response.status !== 200) {\n      const { openConfirm } = this.props;\n      openConfirm(INTERNAL_SERVER_ERROR);\n      return;\n    }\n    const { colors } = response.data;\n    this.setState({ colors });\n  }\n\n  editResourceFormValue = async () => {\n    const { resourceID } = this.props;\n    const url = Utils.buildRequestUrl(`/resources/${resourceID}/edit`);\n    const response = await axios.get(url, {\n      headers: { 'X-Reach-token': this.token },\n    }).catch((error) => error.response);\n\n    if (response.status !== 200) {\n      const { openConfirm } = this.props;\n      openConfirm(INTERNAL_SERVER_ERROR);\n      return;\n    }\n    const { resource } = response.data;\n    this.setState({ name: resource.name, pickedColor: String(resource.color_id) });\n  }\n\n  handleCreate = () => {\n    const { createResource } = this.props;\n    const { pickedColor, name } = this.state;\n    const params = { name, color_id: pickedColor };\n    createResource(params);\n  }\n\n  handleDestroy = () => {\n    const { deleteResource, resourceID, openConfirm } = this.props;\n    const confirmConfig = {\n      type: 'ask',\n      title: `Resource ${destroy}`,\n      description: ask,\n      confirm: () => deleteResource(resourceID),\n    };\n    openConfirm(confirmConfig);\n  }\n\n  handleUpdate = async () => {\n    const { resourceID, updateResource, getAllProjects } = this.props;\n    const { pickedColor, name } = this.state;\n    const params = { name, color_id: pickedColor };\n    await updateResource(resourceID, params);\n    getAllProjects();\n  }\n\n  onPickColor = (event) => {\n    const pickedColor = event.target.dataset.color;\n    this.setState({ pickedColor });\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  }\n\n  onClickOverlay = (event) => event.stopPropagation()\n\n  render() {\n    const title = this.action === 'new' ? 'Create Resource' : 'Update Resource';\n    const { closeResourceForm, errors } = this.props;\n    const { name, colors, pickedColor } = this.state;\n\n    return (\n      <div className=\"modalOverlay\" onClick={closeResourceForm}>\n        <div className=\"modalForm\" onClick={this.onClickOverlay}>\n          <div className=\"modalForm__title\">{title}</div>\n          {errors.length !== 0 && <ErrorMessage action=\"Resource creation\" errors={errors} />}\n          <input\n            type=\"text\"\n            className=\"modalForm__textInput\"\n            placeholder=\"リソース名を入力\"\n            value={name}\n            onChange={this.onChangeName}\n          />\n          <div className=\"modalForm__label\">ラベルの色を選択</div>\n          <div className=\"colorPallet\">\n            <ColorPallets\n              colors={colors}\n              pickedColor={pickedColor}\n              onPickColor={this.onPickColor}\n            />\n          </div>\n          <button type=\"button\" onClick={this.submit} className=\"modalForm__button\">\n            {title}\n          </button>\n          {this.action === 'edit' && (\n            <button type=\"button\" onClick={this.handleDestroy} className=\"modalForm__button--delete\">\n              Delete Resource\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ColorPallets = ({ colors, pickedColor, onPickColor }) => (\n  colors.map((color) => {\n    const modifier = pickedColor === String(color.id) ? '--selected' : '';\n    const className = `colorPallet__body${modifier}`;\n    return (\n      <div key={color.id} className=\"colorPallet__edge\">\n        <div\n          className={className}\n          style={{ backgroundColor: color.value }}\n          data-color={color.id}\n          onClick={onPickColor}\n        />\n      </div>\n    );\n  })\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResourceForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as resourceActions from '../store/resource/actions';\nimport * as confirmActions from '../store/confirm/actions';\nimport ResourceForm from './ResourceForm';\n\nconst mapStateToProps = (state) => {\n  const { resourceForm, resource } = state;\n  return {\n    resourceFormVisible: resourceForm.visible,\n    resources: resource.resources,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openResourceForm, getAllResources, closeResourceForm } = resourceActions;\n  const { closeConfirm } = confirmActions;\n  return {\n    getAllResources: () => dispatch(getAllResources()),\n    openResourceForm: (id) => dispatch(openResourceForm(id)),\n    closeResourceForm: () => dispatch(closeResourceForm()),\n    closeConfirm: () => dispatch(closeConfirm()),\n  };\n};\n\nclass Resource extends Component {\n  componentDidMount() {\n    const { getAllResources } = this.props;\n    getAllResources();\n  }\n\n  componentDidUpdate(previousProps) {\n    const { resources, closeResourceForm, closeConfirm } = this.props;\n    if (previousProps.resources.length !== resources.length) {\n      closeResourceForm();\n      closeConfirm();\n    }\n  }\n\n  onClick = (event) => {\n    const { openResourceForm } = this.props;\n    const { id } = event.currentTarget.dataset;\n    openResourceForm(id);\n  };\n\n  render() {\n    const { resources, resourceFormVisible } = this.props;\n\n    return (\n      <div className=\"resource\">\n        {resources.map((resource) => (\n          <div className=\"resource__wrapper\" key={resource.id} onClick={this.onClick} data-id={resource.id}>\n            <div className=\"resource__icon\" style={{ backgroundColor: resource.color }} />\n            <div className=\"resource__name\">{resource.name}</div>\n          </div>\n        ))}\n        {resourceFormVisible && <ResourceForm />}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Resource);\n","import React, { PureComponent } from 'react';\n\nimport '../css/ChartBar.scss';\n\nexport default class ChartBar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHover: false,\n      offsetX: 0,\n      offsetY: 0,\n    };\n  }\n\n  onMouseEnter = (event) => {\n    const isOverflowX = window.innerWidth < (event.clientX + 300);\n    const isOverflowY = window.innerHeight < (event.clientY + 300);\n    const offsetX = isOverflowX ? event.clientX - 230 : event.clientX;\n    const offsetY = isOverflowY ? event.clientY - 150 : event.clientY;\n    this.setState({ isHover: true, offsetX, offsetY });\n  }\n\n  onMouseLeave = () => this.setState({ isHover: false })\n\n  render() {\n    const { chartWidth, data } = this.props;\n    const { isHover, offsetX, offsetY } = this.state;\n    return (\n      <div\n        style={{ width: chartWidth, backgroundColor: data.resource.color }}\n        className=\"chartbar\"\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n      >\n        {isHover && <Window data={data} offsetX={offsetX} offsetY={offsetY} />}\n      </div>\n    );\n  }\n}\n\nconst Members = ({ users }) => (\n  users.map((user) => <div key={user.name} className=\"windowMembers__name\">{user.name}</div>)\n);\n\nconst Window = ({ data, offsetX, offsetY }) => (\n  <div className=\"window\" style={{ top: offsetY, left: offsetX }}>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">タイトル:</div>\n      <div className=\"windowRow__name\">{data.name}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">開始日:</div>\n      <div className=\"window__startDate\">{data.startDate}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">終了日:</div>\n      <div className=\"window__endDate\">{data.endDate}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">延長:</div>\n      <div className=\"window__extend\">{data.extend}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">期間:</div>\n      <div className=\"window__duration\">{data.duration}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">進捗:</div>\n      <div className=\"window__progress\">{data.percentComplete}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">担当:</div>\n      <div className=\"windowMembers\">\n        <Members users={data.users} />\n      </div>\n    </div>\n    <div className=\"windowCol\">\n      <div className=\"windowCol__label\">説明:</div>\n      <div className=\"windowCol__description\">{data.description}</div>\n    </div>\n  </div>\n);\n","import Moment from 'moment';\n\nexport const START_DAY = Moment(new Date()).subtract(2, 'weeks').startOf('days');\n\nexport const END_DAY = Moment(new Date()).add(1, 'years');\n\nexport const SUN = 0;\nexport const MON = 1;\nexport const TUE = 2;\nexport const WED = 3;\nexport const THU = 4;\nexport const FRI = 5;\nexport const SAT = 6;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Moment from 'moment';\n\nimport { WEEKS, DAYS } from '../store/schedule/types';\nimport ChartBar from './ChartBar';\nimport '../css/Project.scss';\nimport { START_DAY } from '../utils/ScheduleConfig';\n\nconst BASE_CHART_WIDTH = 45;\n\nconst mapStateToProps = (state) => {\n  const { project, schedule } = state;\n  return {\n    projects: project.projects,\n    scheduleType: schedule.scheduleType,\n  };\n};\n\nconst calcOffset = (task) => {\n  const offset = Moment(task.startDate, 'YYYY/MM/DD').startOf('days').diff(START_DAY, 'days');\n\n  return (offset) * BASE_CHART_WIDTH;\n};\n\nconst calcOffsetForWeeks = (task) => {\n  const offset = Math.ceil(\n    Moment(task.startDate, 'YYYY/MM/DD').startOf('week').diff(START_DAY, 'weeks', true),\n  );\n  return offset * BASE_CHART_WIDTH;\n};\n\nconst calcChartWidthForWeeks = (task) => {\n  const end = task.extend || task.endDate;\n  const startDate = Moment(task.startDate, 'YYYY/MM/DD').startOf('week');\n  const endDate = Moment(end, 'YYYY/MM/DD').endOf('week');\n  return Math.ceil(endDate.diff(startDate, 'weeks', true));\n};\n\nconst isBefore = (task) => Moment(task.startDate, 'YYYY/MM/DD').isBefore(START_DAY);\n\nconst isBeforeForWeek = (task) => Moment(task.startDate, 'YYYY/MM/DD').isBefore(START_DAY.startOf('week'));\n\n\nconst Gantt = (props) => {\n  const { projects, scheduleType } = props;\n  return (\n    projects.map((project) => (\n      <div key={project.name} className=\"project\">\n        <div className=\"projectHeader\" />\n        {project.tasks && project.tasks.map((task) => {\n          const offset = scheduleType === DAYS ? calcOffset(task) : calcOffsetForWeeks(task);\n          let diff = scheduleType === DAYS ? task.duration : calcChartWidthForWeeks(task);\n\n          if (isBefore(task) && scheduleType === DAYS) {\n            diff -= START_DAY.diff(Moment(task.startDate, 'YYYY/MM/DD').startOf('days'), 'days', true);\n          } else if (isBeforeForWeek(task) && scheduleType === WEEKS) {\n            diff -= Math.ceil(START_DAY.diff(Moment(task.startDate, 'YYYY/MM/DD'), 'week', true));\n          }\n\n          if (scheduleType === DAYS) {\n            diff += 1;\n          }\n\n          const chartWidth = BASE_CHART_WIDTH * diff;\n          const className = task.percentComplete === 'progress' ? 'task' : 'task--complete';\n\n          return (\n            <div key={task.id} style={{ paddingLeft: offset }} className={className}>\n              <ChartBar chartWidth={chartWidth} data={task} />\n            </div>\n          );\n        })}\n      </div>\n    ))\n  );\n};\n\nexport default connect(mapStateToProps)(Gantt);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Moment from 'moment';\n\nimport { WEEKS, DAYS } from '../store/schedule/types';\nimport * as scheduleActions from '../store/schedule/actions';\nimport SideBar from './SideBar';\nimport ProjectHeader from './ProjectHeader';\nimport Project from './Project';\nimport Resource from './Resource';\nimport Gantt from './Gantt';\nimport '../css/Main.scss';\nimport {\n  START_DAY, END_DAY, SUN, SAT,\n} from '../utils/ScheduleConfig';\n\nconst mapStateToProps = (state) => {\n  const { schedule } = state;\n  return {\n    scheduleType: schedule.scheduleType,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { changeToWeeks, changeToDays } = scheduleActions;\n  return {\n    changeToWeeks: () => dispatch(changeToWeeks()),\n    changeToDays: () => dispatch(changeToDays()),\n  };\n};\n\nconst modifireForDays = (day) => {\n  switch (day.get('day')) {\n    case SUN:\n      return '--sun';\n    case SAT:\n      return '--sat';\n    default:\n      return '';\n  }\n};\n\nconst scheduleAttr = (day, scheduleType) => {\n  const attr = {};\n  if (scheduleType === DAYS) {\n    attr.formatDate = day.format('MMM D');\n    attr.className = `gantt-schedule-header__date${modifireForDays(day)}`;\n  } else {\n    const startOfWeek = day.startOf('week');\n    attr.formatDate = `W${day.format('W')} ${startOfWeek.format('M/D')}`;\n    attr.className = 'gantt-schedule-header__week';\n  }\n  return attr;\n};\n\nconst Schedule = connect(mapStateToProps)((props) => {\n  const { scheduleType } = props;\n  const schedules = [];\n  for (let day = Moment(START_DAY); day <= END_DAY; day.add(1, scheduleType)) {\n    const attr = scheduleAttr(day, scheduleType);\n    schedules.push(\n      <div className={attr.className} key={day.format('YYYYMMDD')}>\n        {attr.formatDate}\n      </div>,\n    );\n  }\n  return schedules;\n});\n\nconst Header = connect(mapStateToProps, mapDispatchToProps)((props) => {\n  const { scheduleType, changeToWeeks, changeToDays } = props;\n  const className = { weeks: 'switchView__button', days: 'switchView__button' };\n  if (scheduleType === WEEKS) {\n    className.weeks += '--disable';\n  } else if (scheduleType === DAYS) {\n    className.days += '--disable';\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"switchView\">\n        <div className={className.weeks} onClick={changeToWeeks}>Week</div>\n        <div className=\"switchView__divider\">|</div>\n        <div className={className.days} onClick={changeToDays}>Day</div>\n      </div>\n      <Resource />\n    </div>\n  );\n});\n\nconst Main = () => (\n  <div className=\"App\">\n    <SideBar />\n    <div className=\"mainContainer\">\n      <Header />\n      <div className=\"gantt\">\n        <div className=\"gantt-index\">\n          <ProjectHeader />\n          <Project />\n        </div>\n        <div className=\"gantt-schedule\">\n          <div className=\"gantt-schedule-header\">\n            <Schedule />\n          </div>\n          <Gantt />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { INTERNAL_SERVER_ERROR, SENT_MESSAGE } from '../store/confirm/types';\nimport * as confirmActions from '../store/confirm/actions';\nimport * as verificationActions from '../store/verification/actions';\nimport ErrorMessage from './Error';\nimport Utils from '../utils/Utils';\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openConfirm } = confirmActions;\n  const { closeVerificationForm } = verificationActions;\n  return {\n    openConfirm: (payload) => dispatch(openConfirm(payload)),\n    closeVerificationForm: () => dispatch(closeVerificationForm()),\n  };\n};\n\nclass VerificationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      errors: [],\n    };\n  }\n\n  onChangeEmail = (event) => {\n    const email = event.target.value;\n    this.setState({ email });\n  }\n\n  onClickOverlay = (event) => event.stopPropagation()\n\n  handleSubmit = async () => {\n    const { email } = this.state;\n    const params = { email };\n    const url = Utils.buildRequestUrl('/sessions/new');\n    const response = await axios.get(url, { params }).catch((error) => error.response);\n    if (response.status !== 200) {\n      const { openConfirm } = this.props;\n      openConfirm(INTERNAL_SERVER_ERROR);\n      return;\n    }\n\n    const { result, errors } = response.data;\n    if (result) {\n      const { openConfirm } = this.props;\n      openConfirm(SENT_MESSAGE);\n    } else {\n      this.setState({ errors });\n    }\n  }\n\n  render() {\n    const { email, errors } = this.state;\n    const { closeVerificationForm } = this.props;\n\n    return (\n      <div className=\"modalOverlay--verification\" onClick={closeVerificationForm}>\n        <div className=\"modalForm\" onClick={this.onClickOverlay}>\n          <div className=\"modalForm__title\">Account verification</div>\n          {errors.length !== 0 && <ErrorMessage action=\"Resource creation\" errors={errors} />}\n          <input\n            type=\"text\"\n            className=\"modalForm__textInput\"\n            placeholder=\"登録済みメールアドレスを入力\"\n            value={email}\n            onChange={this.onChangeEmail}\n          />\n          <button type=\"button\" onClick={this.handleSubmit} className=\"modalForm__button\">Send</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(VerificationForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { INTERNAL_SERVER_ERROR } from '../store/confirm/types';\nimport * as confirmActions from '../store/confirm/actions';\nimport * as verificationFormActions from '../store/verification/actions';\nimport VerificationForm from './VerificationForm';\nimport ErrorMessage from './Error';\nimport Utils from '../utils/Utils';\n\nimport '../css/Session.scss';\n\nconst mapStateToProps = (state) => {\n  const { verificationForm } = state;\n  return {\n    verificationFormVisible: verificationForm.visible,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openConfirm } = confirmActions;\n  const { openVerificationForm } = verificationFormActions;\n  return {\n    openConfirm: (payload) => dispatch(openConfirm(payload)),\n    openVerificationForm: () => dispatch(openVerificationForm()),\n  };\n};\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      isSignIn: false,\n      errors: [],\n    };\n  }\n\n  handleSignIn = async () => {\n    const { email, password } = this.state;\n    const url = Utils.buildRequestUrl('/sessions');\n    const params = { email, password };\n    const response = await axios.post(url, params, {\n      headers: { 'Content-Type': 'application/json' },\n    }).catch((error) => error.response);\n\n    if (response.status !== 200) {\n      const { openConfirm } = this.props;\n      openConfirm(INTERNAL_SERVER_ERROR);\n      return;\n    }\n\n    const { result, token, errors } = response.data;\n    if (result) {\n      localStorage.setItem('token', token);\n      this.setState({ isSignIn: true });\n    } else {\n      this.setState({ errors });\n    }\n  }\n\n  emailOnChange = (event) => {\n    const email = event.target.value;\n    this.setState({ email });\n  }\n\n  passwordOnChange = (event) => {\n    const password = event.target.value;\n    this.setState({ password });\n  }\n\n  render() {\n    const { verificationFormVisible, openVerificationForm } = this.props;\n    const {\n      email, password, isSignIn, errors,\n    } = this.state;\n\n    return (\n      isSignIn ? <Redirect to=\"/reach\" /> : (\n        <div className=\"background\">\n          <div className=\"session\">\n            <div className=\"session__title\">Sign in to Reach</div>\n            {errors.length !== 0 && <ErrorMessage action=\"Authentication\" errors={errors} />}\n            <input\n              type=\"text\"\n              className=\"session__email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={this.emailOnChange}\n            />\n            <input\n              type=\"password\"\n              className=\"session__password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={this.passwordOnChange}\n            />\n            <button type=\"button\" onClick={this.handleSignIn} className=\"session__submit\">\n              Sign In\n            </button>\n            <Link to=\"/reach/signup\" className=\"session__switch\">Create account</Link>\n            <div className=\"session__openVerification\" onClick={openVerificationForm}>Account verification</div>\n          </div>\n          {verificationFormVisible && <VerificationForm />}\n        </div>\n      )\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { INTERNAL_SERVER_ERROR } from '../store/confirm/types';\nimport * as confirmActions from '../store/confirm/actions';\nimport ErrorMessage from './Error';\nimport Utils from '../utils/Utils';\nimport '../css/Session.scss';\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openConfirm } = confirmActions;\n  return {\n    openConfirm: (payload) => dispatch(openConfirm(payload)),\n  };\n};\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uri: '',\n      avatar: null,\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      errors: [],\n      isSignUp: false,\n    };\n  }\n\n  handleSignUp = async () => {\n    const {\n      avatar,\n      name,\n      email,\n      password,\n      passwordConfirmation,\n    } = this.state;\n\n    const params = new FormData();\n    params.append('user[name]', name);\n    params.append('user[email]', email);\n    params.append('user[password]', password);\n    params.append('user[password_confirmation]', passwordConfirmation);\n    if (avatar) {\n      params.append('user[avatar]', avatar);\n    }\n\n    const url = Utils.buildRequestUrl('/users');\n    const response = await axios.post(url, params).catch((error) => error.response);\n    if (response.status !== 200) {\n      const { openConfirm } = this.props;\n      openConfirm(INTERNAL_SERVER_ERROR);\n      return;\n    }\n\n    const { is_created, errors } = response.data;\n    if (is_created) {\n      this.setState({ isSignUp: true });\n    } else {\n      this.setState({ errors });\n    }\n  }\n\n  onChangeFile = (event) => {\n    const avatar = event.target.files[0];\n    const uri = URL.createObjectURL(avatar);\n    this.setState({ uri, avatar });\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value;\n    this.setState({ name });\n  }\n\n  onChangeEmail = (event) => {\n    const email = event.target.value;\n    this.setState({ email });\n  }\n\n  onChangePassword = (event) => {\n    const password = event.target.value;\n    this.setState({ password });\n  }\n\n  onChangePasswordConfirmation = (event) => {\n    const passwordConfirmation = event.target.value;\n    this.setState({ passwordConfirmation });\n  }\n\n  render() {\n    const {\n      uri,\n      name,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      isSignUp,\n    } = this.state;\n\n    return (\n      isSignUp ? <Redirect to=\"/reach/signin\" /> : (\n        <div className=\"background\">\n          <div className=\"session\">\n            <div className=\"session__title\">Create account</div>\n            {errors.length !== 0 && <ErrorMessage action=\"Registration\" errors={errors} />}\n            <label htmlFor=\"avatarForm\" className=\"session__avatar\">\n              <input\n                id=\"avatarForm\"\n                type=\"file\"\n                className=\"session__fileField\"\n                onChange={this.onChangeFile}\n              />\n              {uri === ''\n                ? <FontAwesomeIcon icon={['fas', 'user']} className=\"session__fileIcon\" />\n                : <img src={uri} alt=\"avatar\" className=\"session__preview\" />}\n            </label>\n            <div className=\"session__fileLabel\">Upload your avatar</div>\n            <input\n              type=\"text\"\n              className=\"session__name\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={this.onChangeName}\n            />\n            <input\n              type=\"text\"\n              className=\"session__email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={this.onChangeEmail}\n            />\n            <input\n              type=\"password\"\n              className=\"session__password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={this.onChangePassword}\n            />\n            <input\n              type=\"password\"\n              className=\"session__password\"\n              placeholder=\"Password confirmation\"\n              value={passwordConfirmation}\n              onChange={this.onChangePasswordConfirmation}\n            />\n            <button type=\"button\" onClick={this.handleSignUp} className=\"session__submit\">\n              Sign Up\n            </button>\n            <Link to=\"/reach/signin\" className=\"session__switch\">Move to Sign In</Link>\n          </div>\n        </div>\n      )\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport * as confirmActions from '../store/confirm/actions';\nimport '../css/Confirm.scss';\n\nconst mapStateToProps = (state) => {\n  const { confirm } = state;\n  return {\n    type: confirm.type,\n    title: confirm.title,\n    description: confirm.description,\n    confirm: confirm.confirm,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { closeConfirm } = confirmActions;\n  return {\n    closeConfirm: () => dispatch(closeConfirm()),\n  };\n};\n\nconst confirmType = (type) => {\n  switch (type) {\n    case 'success':\n      return { icon: ['fas', 'check'], className: 'confirm__icon--success' };\n    case 'error':\n      return { icon: ['fas', 'exclamation'], className: 'confirm__icon--error' };\n    case 'ask':\n      return { icon: ['fas', 'question'], className: 'confirm__icon--ask' };\n    default:\n      return null;\n  }\n};\n\nconst stopPropagation = (event) => event.stopPropagation();\n\nconst Confirm = (props) => {\n  const {\n    type,\n    closeConfirm,\n    title,\n    description,\n    confirm,\n  } = props;\n\n  const onClickConfirm = type === 'ask' ? confirm : closeConfirm;\n  const iconType = confirmType(type);\n  return (\n    <div className=\"confirmOverlay\" onClick={stopPropagation}>\n      <div className=\"confirm\">\n        {iconType && (\n          <div className={iconType.className}>\n            <FontAwesomeIcon icon={iconType.icon} />\n          </div>\n        )}\n        <div className=\"confirmText\">\n          <div className=\"confirmText__title\">{title}</div>\n          <div className=\"confirmText__description\">{description}</div>\n        </div>\n        <div className=\"confirmButton\">\n          {type === 'ask'\n            && <div className=\"confirmButton__cancel\" onClick={closeConfirm}>Cancel</div>}\n          <div className=\"confirmButton__confirm\" onClick={onClickConfirm}>OK</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\nimport Main from './Main';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Confirm from './Confirm';\n\nconst mapStateToProps = (state) => {\n  const { confirm } = state;\n  return {\n    confirmVisible: confirm.visible,\n  };\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem('token');\n    const isAuthenticated = token !== null;\n    this.state = {\n      isAuthenticated,\n    };\n  }\n\n  render() {\n    const { isAuthenticated } = this.state;\n    return isAuthenticated ? <Main /> : <Redirect to=\"/reach/signin\" />;\n  }\n}\n\nconst App = (props) => {\n  const { confirmVisible } = props;\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/reach/signin\"><SignIn /></Route>\n          <Route path=\"/reach/signup\"><SignUp /></Route>\n          <Route exact path=\"/reach\"><Home /></Route>\n          <Route exact><SignIn /></Route>\n        </Switch>\n      </BrowserRouter>\n      {confirmVisible && <Confirm />}\n    </>\n  );\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nimport store from './store/index';\nimport App from './components/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nlibrary.add(fab, fas, far);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}