{"version":3,"sources":["utils/Utils.js","components/Confirm.js","components/Error.js","utils/Text.js","components/ProjectForm.js","components/ResourceForm.js","components/EditAccount.js","components/SideBar.js","components/GanttIndexHeader.js","components/Task.js","components/TaskForm.js","components/Project.js","components/Resource.js","components/ChartBar.js","components/Gantt.js","components/Main.js","components/SignIn.js","components/SignUp.js","components/App.js","serviceWorker.js","index.js"],"names":["Utils","apiEndpoint","action","id","resource","uriPattern","method","Moment","Date","subtract","startOf","stopPropagation","event","Confirm","props","type","closeConfirm","title","description","confirm","iconType","icon","className","confirmType","onClick","Messages","errors","map","err","key","error","badRequest","checkParams","serverError","reload","updated","ask","ProjectForm","editProjectFormValue","url","buildRequestUrl","fetch","headers","token","then","_res","json","is_authenticated","project","name","setState","openConfirm","catch","handleCreate","state","request","preparingRequest","params","body","JSON","stringify","res","is_created","closeModal","refresh","handleDestroy","refreshProject","is_delete","confirmVisible","confirmTitle","confirmDescription","onChangeName","target","value","onChangeDescription","onClickOverlay","localStorage","getItem","this","length","placeholder","onChange","PureComponent","ResourceForm","getIndexColors","colors","editResourceFormValue","pickedColor","String","color_id","onPickColor","dataset","color","ColorPallets","modifier","style","backgroundColor","data-color","EditAccuount","getCurrentAccount","user","avatar","email","uri","handleUpdate","FormData","append","is_updated","onChangeFile","files","URL","createObjectURL","onChangeEmail","closeEditAccount","htmlFor","src","alt","Component","SideBar","openProjectForm","projectFormVisible","closeProjectForm","openResourceForm","resourceFormVisible","closeResourceForm","openEditAccount","editAccuountVisible","toggleAccountMenu","accountMenuVisible","changeMode","signOut","removeItem","isSignOut","getProjectIndex","refreshResource","to","notExist","GanttIndexHeader","getUserIndex","users","search","projectId","taskName","startDateFrom","startDateTo","endDateFrom","endDateTo","extendFrom","extendTo","orderDuration","orderStartDate","orderEndDate","orderExtend","inCharge","selectedResources","project_id","task_name","start_date","from","order","end_date","extend","duration","in_charge","resources","projects","undefined","updateProject","sortingByDateRange","rangeStart","rangeEnd","onChangeRangeStart","onChangeStartDateRangeS","onChangeRangeEnd","onChangeStartDateRangeE","onChangeEndDateRangeS","onChangeEndDateRangeE","onChangeExtendRangeS","onChangeExtendRangeE","onClickResource","searchByResourceVisible","onClickName","searchByNameVisible","onClickDate","currentTarget","searchByDateVisible","dateType","onClickDuration","searchByDurationVisible","onClickInCharge","searchByUsersVisible","onChangeOrder","a","by","onChangeProject","onChangeTask","onClickAvatar","inChargeCopy","targetIndex","indexOf","push","splice","onClickResourceIcon","selectedResourcesCopy","clearSearchName","clearSearchStartDate","clearSearchEndDate","clearSearchExtend","clearSearchDuration","clearSearchInCharge","closeAllModal","resourceIconClass","dateProps","data-type","selected","OrderBy","data-by","aria-label","label","selection","SearchByDuration","SearchByDate","dateFormat","showWeekNumbers","placeholderText","SearchByName","Users","data-id","SearchByUsers","Resources","SearchByResource","Avatars","members","member","i","Task","task","index","tasks","destroyMode","percentComplete","data-action","startDate","endDate","TaskForm","getTaskFormValue","editTaskFormValue","taskID","userIds","resourceId","complete","stringUserIds","userId","onChangeResource","onChangeStartDate","date","onChangeEndDate","onCheck","createTask","diff","percent_complete","resource_id","user_ids","Project","openModal","isVisible","refreshTask","Projects","mode","Resource","toggleResourceForm","ChartBar","onMouseEnter","isOverflowX","window","innerWidth","clientX","isOverflowY","innerHeight","clientY","offsetX","offsetY","isHover","onMouseLeave","chartWidth","data","width","Members","Window","top","left","GanttTask","calcOffset","start","baseChartWidth","calcOffsetForWeeks","Math","ceil","calcChartWidthForWeeks","end","endOf","isBefore","isSameOrBefore","isBeforeForWeek","dateRangeStart","scheduleType","offset","paddingLeft","Gantt","dateRangeEnd","scheduleAttr","day","attr","formatDate","format","get","whatDayIsToday","startOfWeek","Schedule","schedules","add","Header","weeks","days","onKeyUp","role","tabIndex","Main","changeScheduleType","projectsCopy","resourcesCopy","slice","filter","existingProject","tasksCopy","existingTask","_project","SignIn","handleSignIn","password","result","setItem","isSignIn","emailOnChange","passwordOnChange","SignUp","handleSignUp","passwordConfirmation","onChangePassword","onChangePasswordConfirmation","Home","isAuthenticated","App","path","exact","Boolean","location","hostname","match","library","fab","fas","far","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.127a298b.chunk.js","sourcesContent":["import Moment from 'moment'\n\nexport default class Utils {\n  static buildRequestUrl(apiEndpoint) {\n    const baseUrl = 'https://reach-260801.appspot.com'\n    return baseUrl + apiEndpoint\n  }\n\n  static preparingRequest(action, id, resource) {\n    switch (action) {\n      case 'new':\n        return { uriPattern: `/${resource}`, method: 'POST' }\n      case 'edit':\n        return { uriPattern: `/${resource}/${id}`, method: 'PATCH' }\n      default:\n        return null\n    }\n  }\n\n  static dateRangeStart() {\n    return Moment(new Date()).subtract(2, 'weeks').startOf('days')\n  }\n\n  static dateRangeEnd() {\n    return Moment('2020/4/1', 'YYYY/MM/DD')\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport '../css/Confirm.scss'\n\nconst confirmType = (type) => {\n  switch (type) {\n    case 'success':\n      return { icon: ['fas', 'check'], className: 'confirm__icon--success' }\n    case 'error':\n      return { icon: ['fas', 'exclamation'], className: 'confirm__icon--error' }\n    case 'ask':\n      return { icon: ['fas', 'question'], className: 'confirm__icon--ask' }\n    default:\n      return null\n  }\n}\n\nconst stopPropagation = (event) => event.stopPropagation()\n\nconst Confirm = (props) => {\n  const {\n    type,\n    closeConfirm,\n    title,\n    description,\n    confirm,\n  } = props\n\n  const iconType = confirmType(type)\n  return (\n    <div className=\"confirmOverlay\" onClick={stopPropagation}>\n      <div className=\"confirm\">\n        {iconType && (\n          <div className={iconType.className}>\n            <FontAwesomeIcon icon={iconType.icon} />\n          </div>\n        )}\n        <div className=\"confirmText\">\n          <div className=\"confirmText__title\">{title}</div>\n          <div className=\"confirmText__description\">{description}</div>\n        </div>\n        <div className=\"confirmButton\">\n          {type === 'ask'\n            && <div className=\"confirmButton__cancel\" onClick={closeConfirm}>Cancel</div>}\n          <div className=\"confirmButton__confirm\" onClick={confirm}>OK</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Confirm\n","import React from 'react'\n\nimport '../css/Error.scss'\n\nconst error = ({ action, errors }) => {\n  const title = `${action} failed!`\n  return (\n    <div className=\"error\">\n      <div className=\"error__title\">{title}</div>\n      <Messages errors={errors} />\n    </div>\n  )\n}\n\nconst Messages = (props) => (\n  props.errors.map((err) => <div className=\"error__message\" key={err.error}>{err.error}</div>)\n)\n\nexport default error\n","export const badRequest = 'Bad request!'\n\nexport const checkParams = 'Please check your request params'\n\nexport const serverError = 'Internal server error'\n\nexport const reload = 'Try reload browser'\n\nexport const updated = 'Updated!'\n\nexport const ask = 'Are you sure?'\n\nexport const destroy = 'Destroy'\n","import React, { PureComponent } from 'react'\n\nimport Utils from '../utils/Utils'\nimport Confirm from './Confirm'\nimport ErrorMessage from './Error'\nimport {\n  badRequest,\n  checkParams,\n  reload,\n  serverError,\n  ask,\n  destroy,\n} from '../utils/Text'\n\nimport '../css/Form.scss'\n\nexport default class ProjectForm extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.token = localStorage.getItem('token')\n    const { action } = this.props\n    this.action = action\n    this.state = {\n      name: '',\n      description: '',\n      errors: [],\n      confirmVisible: false,\n      confirmType: '',\n      confirmTitle: '',\n      confirmDescription: '',\n      confirm: () => {},\n    }\n  }\n\n  componentDidMount() {\n    if (this.action === 'edit') {\n      this.editProjectFormValue()\n    }\n  }\n\n  editProjectFormValue = () => {\n    const { id } = this.props\n    const url = Utils.buildRequestUrl(`/projects/${id}/edit`)\n    fetch(url, {\n      method: 'GET',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then(({ is_authenticated, project }) => {\n        if (is_authenticated) {\n          const { name, description } = project\n          this.setState({ name, description })\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  handleCreate = () => {\n    const { name, description } = this.state\n    const { id } = this.props\n    const request = Utils.preparingRequest(this.action, id, 'projects')\n    if (request === null) {\n      return\n    }\n    const url = Utils.buildRequestUrl(request.uriPattern)\n    const params = { name, description }\n\n    fetch(url, {\n      method: request.method,\n      headers: { 'Content-Type': 'application/json', 'X-Reach-token': this.token },\n      body: JSON.stringify(params),\n    })\n      .then((_res) => _res.json())\n      .then((res) => {\n        const { is_created, errors, project } = res\n        const { closeModal, refresh } = this.props\n        if (is_created && this.action === 'new') {\n          refresh(project, 'new')\n          closeModal()\n        } else if (is_created && this.action === 'edit') {\n          refresh(project.name)\n          closeModal()\n        } else {\n          this.setState({ errors })\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  handleDestroy = () => {\n    const { id, refreshProject } = this.props\n    const url = Utils.buildRequestUrl(`/projects/${id}`)\n    fetch(url, {\n      method: 'DELETE',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then(({ is_delete, project }) => {\n        if (is_delete) {\n          refreshProject(project, 'destroy')\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  openConfirm = (type, title, description, confirm) => {\n    this.setState({\n      confirmVisible: true,\n      confirmType: type,\n      confirmTitle: title,\n      confirmDescription: description,\n      confirm,\n    })\n  }\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  onChangeName = (event) => {\n    const name = event.target.value\n    this.setState({ name })\n  }\n\n  onChangeDescription = (event) => {\n    const description = event.target.value\n    this.setState({ description })\n  }\n\n  onClickOverlay = (event) => {\n    event.stopPropagation()\n  }\n\n  render() {\n    const { closeModal } = this.props\n    const {\n      name,\n      description,\n      errors,\n      confirmVisible,\n      confirmType,\n      confirmTitle,\n      confirmDescription,\n      confirm,\n    } = this.state\n\n    const title = this.action === 'new' ? 'Create ' : 'Update '\n    return (\n      <div className=\"modalOverlay\" onClick={closeModal}>\n        <div className=\"modalForm\" onClick={this.onClickOverlay}>\n          <div className=\"modalForm__title\">\n            {title}\n            Project\n          </div>\n          {errors.length !== 0 && <ErrorMessage action=\"Project creation\" errors={errors} />}\n          <input\n            type=\"text\"\n            className=\"modalForm__textInput\"\n            placeholder=\"Type a project name\"\n            value={name}\n            onChange={this.onChangeName}\n          />\n          <textarea\n            className=\"modalForm__textarea\"\n            placeholder=\"Type a project description\"\n            value={description}\n            onChange={this.onChangeDescription}\n          />\n          <button type=\"button\" onClick={this.handleCreate} className=\"modalForm__button\">\n            {title}\n          </button>\n          {this.action === 'edit' && (\n            <button\n              type=\"button\"\n              onClick={() => this.openConfirm('ask', `Project ${destroy}`, ask, this.handleDestroy)}\n              className=\"modalForm__button--delete\"\n            >\n              Delete Project\n            </button>\n          )}\n        </div>\n        {confirmVisible && (\n          <Confirm\n            type={confirmType}\n            closeConfirm={this.closeConfirm}\n            title={confirmTitle}\n            description={confirmDescription}\n            confirm={confirm}\n          />\n        )}\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\n\nimport Confirm from './Confirm'\nimport ErrorMessage from './Error'\nimport Utils from '../utils/Utils'\nimport {\n  badRequest,\n  checkParams,\n  reload,\n  serverError,\n  ask,\n  destroy,\n} from '../utils/Text'\n\nexport default class ResourceForm extends PureComponent {\n  constructor(props) {\n    super(props)\n    const { action } = this.props\n    this.action = action\n    this.state = {\n      name: '',\n      colors: [],\n      pickedColor: '',\n      errors: [],\n      confirmVisible: false,\n      confirmType: '',\n      confirmTitle: '',\n      confirmDescription: '',\n      confirm: () => {},\n    }\n  }\n\n  async componentDidMount() {\n    this.token = await localStorage.getItem('token')\n    this.getIndexColors()\n    if (this.action === 'edit') {\n      this.editResourceFormValue()\n    }\n  }\n\n  getIndexColors = () => {\n    const url = Utils.buildRequestUrl('/colors')\n    fetch(url, {\n      method: 'GET',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then(({ is_authenticated, colors }) => {\n        if (is_authenticated) {\n          this.setState({ colors })\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  editResourceFormValue = () => {\n    const { id } = this.props\n    const url = Utils.buildRequestUrl(`/resources/${id}/edit`)\n    fetch(url, {\n      method: 'GET',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then(({ is_authenticated, resource }) => {\n        if (is_authenticated) {\n          this.setState({ name: resource.name, pickedColor: String(resource.color_id) })\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  handleCreate = () => {\n    const { id, closeModal, refresh } = this.props\n    const { pickedColor, name } = this.state\n    const request = Utils.preparingRequest(this.action, id, 'resources')\n    if (request === null) {\n      return\n    }\n    const url = Utils.buildRequestUrl(request.uriPattern)\n    const params = { name, color_id: pickedColor }\n    fetch(url, {\n      method: request.method,\n      headers: { 'Content-Type': 'application/json', 'X-Reach-token': this.token },\n      body: JSON.stringify(params),\n    })\n      .then((_res) => _res.json())\n      .then(({ errors, is_created, resource }) => {\n        if (is_created && this.action === 'new') {\n          refresh(resource)\n          closeModal()\n        } else if (is_created && this.action === 'edit') {\n          refresh()\n          closeModal()\n        } else {\n          this.setState({ errors })\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  handleDestroy = () => {\n    const { id, refresh } = this.props\n    const url = Utils.buildRequestUrl(`/resources/${id}`)\n    fetch(url, {\n      method: 'DELETE',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then(({ is_delete }) => {\n        if (is_delete) {\n          refresh()\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  openConfirm = (type, title, description, confirm) => {\n    this.setState({\n      confirmVisible: true,\n      confirmType: type,\n      confirmTitle: title,\n      confirmDescription: description,\n      confirm,\n    })\n  }\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  onPickColor = (event) => {\n    const pickedColor = event.target.dataset.color\n    this.setState({ pickedColor })\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value\n    this.setState({ name })\n  }\n\n  onClickOverlay = (event) => event.stopPropagation()\n\n  render() {\n    const title = this.action === 'new' ? 'Create ' : 'Update '\n    const { closeModal } = this.props\n    const {\n      name,\n      colors,\n      pickedColor,\n      errors,\n      confirmVisible,\n      confirmType,\n      confirmTitle,\n      confirmDescription,\n      confirm,\n    } = this.state\n\n    return (\n      <div className=\"modalOverlay\" onClick={closeModal}>\n        <div className=\"modalForm\" onClick={this.onClickOverlay}>\n          <div className=\"modalForm__title\">\n            {title}\n            Resource\n          </div>\n          {errors.length !== 0 && <ErrorMessage action=\"Resource creation\" errors={errors} />}\n          <input\n            type=\"text\"\n            className=\"modalForm__textInput\"\n            placeholder=\"Type a resource name\"\n            value={name}\n            onChange={this.onChangeName}\n          />\n          <div className=\"modalForm__label\">Chart color</div>\n          <div className=\"colorPallet\">\n            <ColorPallets\n              colors={colors}\n              pickedColor={pickedColor}\n              onPickColor={this.onPickColor}\n            />\n          </div>\n          <button type=\"button\" onClick={this.handleCreate} className=\"modalForm__button\">\n            {title}\n          </button>\n          {this.action === 'edit' && (\n            <button\n              type=\"button\"\n              onClick={() => this.openConfirm('ask', `Project ${destroy}`, ask, this.handleDestroy)}\n              className=\"modalForm__button--delete\"\n            >\n              Delete Resource\n            </button>\n          )}\n        </div>\n        {confirmVisible && (\n          <Confirm\n            type={confirmType}\n            closeConfirm={this.closeConfirm}\n            title={confirmTitle}\n            description={confirmDescription}\n            confirm={confirm}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst ColorPallets = ({ colors, pickedColor, onPickColor }) => (\n  colors.map((color) => {\n    const modifier = pickedColor === String(color.id) ? '--selected' : ''\n    const className = `colorPallet__body${modifier}`\n    return (\n      <div key={color.id} className=\"colorPallet__edge\">\n        <div\n          className={className}\n          style={{ backgroundColor: color.value }}\n          data-color={color.id}\n          onClick={onPickColor}\n        />\n      </div>\n    )\n  })\n)\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport ErrorMessage from './Error'\nimport Confirm from './Confirm'\nimport Utils from '../utils/Utils'\nimport {\n  badRequest,\n  checkParams,\n  reload,\n  serverError,\n  updated,\n} from '../utils/Text'\n\nimport '../css/Session.scss'\n\nexport default class EditAccuount extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      uri: '',\n      avatar: null,\n      name: '',\n      email: '',\n      errors: [],\n      confirmVisible: false,\n      confirmType: '',\n      confirmTitle: '',\n      confirmDescription: '',\n      confirm: () => {},\n    }\n  }\n\n  componentDidMount() {\n    this.token = localStorage.getItem('token')\n    this.getCurrentAccount()\n  }\n\n  getCurrentAccount = () => {\n    const url = Utils.buildRequestUrl('/users/edit')\n    fetch(url, {\n      method: 'GET',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then(({ is_authenticated, user }) => {\n        if (is_authenticated) {\n          const { avatar, name, email } = user\n          this.avatar = avatar\n          this.name = name\n          this.email = email\n          this.setState({ uri: avatar, name, email })\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  handleUpdate = () => {\n    const {\n      avatar,\n      name,\n      email,\n    } = this.state\n\n    const params = new FormData()\n    params.append('user[name]', name)\n    params.append('user[email]', email)\n    if (avatar) {\n      params.append('user[avatar]', avatar)\n    }\n\n    const url = Utils.buildRequestUrl('/users/update')\n    fetch(url, {\n      method: 'PATCH',\n      headers: { 'X-Reach-token': this.token },\n      body: params,\n    })\n      .then((_res) => _res.json())\n      .then(({ is_updated, errors }) => {\n        if (is_updated) {\n          const { refresh } = this.props\n          refresh()\n          this.openConfirm('success', updated, '', this.closeConfirm)\n        } else {\n          this.setState({ errors })\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  onChangeFile = (event) => {\n    const avatar = event.target.files[0]\n    const uri = URL.createObjectURL(avatar)\n    this.setState({ uri, avatar })\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value\n    this.setState({ name })\n  }\n\n  onChangeEmail = (event) => {\n    const email = event.target.value\n    this.setState({ email })\n  }\n\n  closeEditAccount = () => {\n    const { closeEditAccount } = this.props\n    closeEditAccount()\n  }\n\n  openConfirm = (type, title, description, confirm) => {\n    this.setState({\n      confirmVisible: true,\n      confirmType: type,\n      confirmTitle: title,\n      confirmDescription: description,\n      confirm,\n    })\n  }\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  onClickOverlay = (event) => event.stopPropagation()\n\n  render() {\n    const {\n      uri,\n      name,\n      email,\n      errors,\n      confirmVisible,\n      confirmType,\n      confirmTitle,\n      confirmDescription,\n      confirm,\n    } = this.state\n\n    return (\n      <div className=\"background--edit\" onClick={this.closeEditAccount}>\n        <div className=\"session\" onClick={this.onClickOverlay}>\n          <div className=\"session__title\">Edit account</div>\n          {errors.length !== 0 && <ErrorMessage action=\"Registration\" errors={errors} />}\n          <label htmlFor=\"avatarForm\" className=\"session__avatar\">\n            <input\n              id=\"avatarForm\"\n              type=\"file\"\n              className=\"session__fileField\"\n              onChange={this.onChangeFile}\n            />\n            {uri === ''\n              ? <FontAwesomeIcon icon={['fas', 'user']} className=\"session__fileIcon\" />\n              : <img src={uri} alt=\"avatar\" className=\"session__preview\" />}\n          </label>\n          <div className=\"session__fileLabel\">Upload your avatar</div>\n          <input\n            type=\"text\"\n            className=\"session__name\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={this.onChangeName}\n          />\n          <input\n            type=\"text\"\n            className=\"session__email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={this.onChangeEmail}\n          />\n          <button type=\"button\" onClick={this.handleUpdate} className=\"session__submit\">\n            Update\n          </button>\n        </div>\n        {confirmVisible && (\n          <Confirm\n            type={confirmType}\n            closeConfirm={this.closeConfirm}\n            title={confirmTitle}\n            description={confirmDescription}\n            confirm={confirm}\n          />\n        )}\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport ProjectForm from './ProjectForm'\nimport ResourceForm from './ResourceForm'\nimport EditAccount from './EditAccount'\nimport '../css/SideBar.scss'\n\nexport default class SideBar extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      projectFormVisible: false,\n      resourceFormVisible: false,\n      accountMenuVisible: false,\n      editAccuountVisible: false,\n      isSignOut: false,\n    }\n  }\n\n  openProjectForm = () => this.setState({ projectFormVisible: true })\n\n  closeProjectForm = () => this.setState({ projectFormVisible: false })\n\n  openResourceForm = () => this.setState({ resourceFormVisible: true })\n\n  closeResourceForm = () => this.setState({ resourceFormVisible: false })\n\n  openEditAccount = () => this.setState({ editAccuountVisible: true })\n\n  closeEditAccount = () => this.setState({ editAccuountVisible: false })\n\n  toggleAccountMenu = () => {\n    const { accountMenuVisible } = this.state\n    this.setState({ accountMenuVisible: !accountMenuVisible })\n  }\n\n  changeMode = () => {\n    const { changeMode } = this.props\n    changeMode()\n  }\n\n  signOut = () => {\n    localStorage.removeItem('token')\n    this.setState({ isSignOut: true })\n  }\n\n  render() {\n    const { refreshProject, getProjectIndex, refreshResource } = this.props\n    const {\n      projectFormVisible,\n      resourceFormVisible,\n      accountMenuVisible,\n      editAccuountVisible,\n      isSignOut,\n    } = this.state\n\n    return (\n      isSignOut ? <Redirect to=\"/reach/signin\" /> : (\n        <div className=\"sidebar\">\n          <div className=\"sidebar__iconWrapper--plus\" onClick={this.openProjectForm}>\n            <FontAwesomeIcon icon={['fas', 'plus']} className=\"sidebar__icon\" />\n          </div>\n          <div className=\"sidebar__iconWrapper--minus\" onClick={this.changeMode}>\n            <FontAwesomeIcon icon={['fas', 'minus']} className=\"sidebar__icon\" />\n          </div>\n          <div className=\"sidebar__iconWrapper--resource\" onClick={this.openResourceForm}>\n            <FontAwesomeIcon icon={['fas', 'tags']} className=\"sidebar__icon\" />\n          </div>\n          <div className=\"sidebar__iconWrapper--account\" onClick={this.toggleAccountMenu}>\n            <FontAwesomeIcon icon={['fas', 'user']} className=\"sidebar__icon\" />\n          </div>\n          {accountMenuVisible && (\n            <div className=\"overlay\" onClick={this.toggleAccountMenu}>\n              <div className=\"accountMenu\">\n                <div className=\"accountMenu__edit\" onClick={this.openEditAccount}>Edit account</div>\n                <div className=\"accountMenu__signout\" onClick={this.signOut}>Sign out</div>\n              </div>\n            </div>\n          )}\n          {projectFormVisible\n            && <ProjectForm action=\"new\" refresh={refreshProject} closeModal={this.closeProjectForm} />}\n          {resourceFormVisible\n            && <ResourceForm action=\"new\" refresh={refreshResource} closeModal={this.closeResourceForm} />}\n          {editAccuountVisible\n            && <EditAccount refresh={getProjectIndex} closeEditAccount={this.closeEditAccount} />}\n        </div>\n      )\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nimport Confirm from './Confirm'\n\nimport Utils from '../utils/Utils'\nimport {\n  badRequest,\n  checkParams,\n  reload,\n  serverError,\n} from '../utils/Text'\n\nconst notExist = -1\n\nexport default class GanttIndexHeader extends Component {\n  constructor(props) {\n    super(props)\n    this.token = localStorage.getItem('token')\n    this.state = {\n      users: [],\n      searchByNameVisible: false,\n      searchByDateVisible: false,\n      searchByDurationVisible: false,\n      searchByUsersVisible: false,\n      searchByResourceVisible: false,\n      dateType: '',\n      projectId: '',\n      taskName: '',\n      startDateFrom: '',\n      startDateTo: '',\n      endDateFrom: '',\n      endDateTo: '',\n      extendFrom: '',\n      extendTo: '',\n      orderDuration: '',\n      orderStartDate: '',\n      orderEndDate: '',\n      orderExtend: '',\n      inCharge: [],\n      selectedResources: [],\n      confirmVisible: false,\n      confirmType: '',\n      confirmTitle: '',\n      confirmDescription: '',\n      confirm: () => {},\n    }\n  }\n\n  componentDidMount() {\n    this.getUserIndex()\n  }\n\n  getUserIndex = () => {\n    const url = Utils.buildRequestUrl('/users')\n    fetch(url, {\n      method: 'GET',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then(({ users, is_authenticated }) => {\n        if (is_authenticated) {\n          this.setState({ users })\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  search = () => {\n    const {\n      projectId,\n      taskName,\n      startDateFrom,\n      startDateTo,\n      endDateFrom,\n      endDateTo,\n      extendFrom,\n      extendTo,\n      orderDuration,\n      orderStartDate,\n      orderEndDate,\n      orderExtend,\n      inCharge,\n      selectedResources,\n    } = this.state\n\n    const url = Utils.buildRequestUrl('/tasks/search')\n    const params = {\n      project_id: projectId,\n      task_name: taskName,\n      start_date: { from: startDateFrom, to: startDateTo, order: orderStartDate },\n      end_date: { from: endDateFrom, to: endDateTo, order: orderEndDate },\n      extend: { from: extendFrom, to: extendTo, order: orderExtend },\n      duration: { order: orderDuration },\n      in_charge: inCharge,\n      resources: selectedResources,\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(params),\n    })\n      .then((_res) => _res.json())\n      .then(({ projects }) => {\n        if (projects === undefined) {\n          this.openConfirm('error', serverError, reload, this.closeConfirm)\n        } else {\n          const { updateProject } = this.props\n          updateProject(projects)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  sortingByDateRange = (type) => {\n    const {\n      startDateFrom,\n      startDateTo,\n      endDateFrom,\n      endDateTo,\n      extendFrom,\n      extendTo,\n      orderStartDate,\n      orderEndDate,\n      orderExtend,\n    } = this.state\n\n    switch (type) {\n      case 'start':\n        return {\n          rangeStart: startDateFrom,\n          rangeEnd: startDateTo,\n          onChangeRangeStart: this.onChangeStartDateRangeS,\n          onChangeRangeEnd: this.onChangeStartDateRangeE,\n          order: orderStartDate,\n        }\n      case 'end':\n        return {\n          rangeStart: endDateFrom,\n          rangeEnd: endDateTo,\n          onChangeRangeStart: this.onChangeEndDateRangeS,\n          onChangeRangeEnd: this.onChangeEndDateRangeE,\n          order: orderEndDate,\n        }\n      case 'extend':\n        return {\n          rangeStart: extendFrom,\n          rangeEnd: extendTo,\n          onChangeRangeStart: this.onChangeExtendRangeS,\n          onChangeRangeEnd: this.onChangeExtendRangeE,\n          order: orderExtend,\n        }\n      default:\n        return {}\n    }\n  }\n\n  openConfirm = (type, title, description, confirm) => {\n    this.setState({\n      confirmVisible: true,\n      confirmType: type,\n      confirmTitle: title,\n      confirmDescription: description,\n      confirm,\n    })\n  }\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  onClickResource = () => {\n    const { searchByResourceVisible } = this.state\n    this.setState({ searchByResourceVisible: !searchByResourceVisible })\n  }\n\n  onClickName = () => {\n    const { searchByNameVisible } = this.state\n    this.setState({ searchByNameVisible: !searchByNameVisible })\n  }\n\n  onClickDate = (event) => {\n    const { type } = event.currentTarget.dataset\n    const { searchByDateVisible } = this.state\n    this.setState({ searchByDateVisible: !searchByDateVisible, dateType: type })\n  }\n\n  onClickDuration = () => {\n    const { searchByDurationVisible } = this.state\n    this.setState({ searchByDurationVisible: !searchByDurationVisible })\n  }\n\n  onClickInCharge = () => {\n    const { searchByUsersVisible } = this.state\n    this.setState({ searchByUsersVisible: !searchByUsersVisible })\n  }\n\n  onChangeOrder = async (event) => {\n    const { by } = event.currentTarget.dataset\n    const order = event.target.value\n\n    switch (by) {\n      case 'duration':\n        await this.setState({\n          orderDuration: order,\n          orderStartDate: '',\n          orderEndDate: '',\n          orderExtend: '',\n        })\n        break\n      case 'start':\n        await this.setState({\n          orderDuration: '',\n          orderStartDate: order,\n          orderEndDate: '',\n          orderExtend: '',\n        })\n        break\n      case 'end':\n        await this.setState({\n          orderDuration: '',\n          orderStartDate: '',\n          orderEndDate: order,\n          orderExtend: '',\n        })\n        break\n      case 'extend':\n        await this.setState({\n          orderDuration: '',\n          orderStartDate: '',\n          orderEndDate: '',\n          orderExtend: order,\n        })\n        break\n      default:\n    }\n    this.search()\n  }\n\n  onChangeProject = async (event) => {\n    const projectId = event.target.value\n    await this.setState({ projectId })\n    this.search()\n  }\n\n  onChangeTask = async (event) => {\n    const taskName = event.target.value\n    await this.setState({ taskName })\n    this.search()\n  }\n\n  onChangeStartDateRangeS = async (startDateFrom) => {\n    await this.setState({ startDateFrom })\n    this.search()\n  }\n\n  onChangeStartDateRangeE = async (startDateTo) => {\n    await this.setState({ startDateTo })\n    this.search()\n  }\n\n  onChangeEndDateRangeS = async (endDateFrom) => {\n    await this.setState({ endDateFrom })\n    this.search()\n  }\n\n  onChangeEndDateRangeE = async (endDateTo) => {\n    this.setState({ endDateTo })\n    this.search()\n  }\n\n  onChangeExtendRangeS = async (extendFrom) => {\n    await this.setState({ extendFrom })\n    this.search()\n  }\n\n  onChangeExtendRangeE = async (extendTo) => {\n    await this.setState({ extendTo })\n    this.search()\n  }\n\n  onClickAvatar = async (event) => {\n    const { inCharge } = this.state\n    const inChargeCopy = inCharge\n    const { id } = event.currentTarget.dataset\n    const targetIndex = inCharge.indexOf(id)\n    if (targetIndex === notExist) {\n      inChargeCopy.push(id)\n    } else {\n      inChargeCopy.splice(targetIndex, 1)\n    }\n    await this.setState({ inCharge: inChargeCopy })\n    this.search()\n  }\n\n  onClickResourceIcon = async (event) => {\n    const { selectedResources } = this.state\n    const selectedResourcesCopy = selectedResources\n    const { id } = event.currentTarget.dataset\n    const targetIndex = selectedResources.indexOf(id)\n    if (targetIndex === notExist) {\n      selectedResourcesCopy.push(id)\n    } else {\n      selectedResourcesCopy.splice(targetIndex, 1)\n    }\n    await this.setState({ selectedResources: selectedResourcesCopy })\n    this.search()\n  }\n\n  clearSearchName = async () => {\n    await this.setState({\n      taskName: '',\n      projectId: '',\n      searchByNameVisible: false,\n    })\n    this.search()\n  }\n\n  clearSearchStartDate = async () => {\n    await this.setState({\n      startDateFrom: '',\n      startDateTo: '',\n      orderStartDate: '',\n      searchByDateVisible: false,\n    })\n    this.search()\n  }\n\n  clearSearchEndDate = async () => {\n    await this.setState({\n      endDateFrom: '',\n      endDateTo: '',\n      orderEndDate: '',\n      searchByDateVisible: false,\n    })\n    this.search()\n  }\n\n  clearSearchExtend = async () => {\n    await this.setState({\n      extendFrom: '',\n      extendTo: '',\n      orderExtend: '',\n      searchByDateVisible: false,\n    })\n    this.search()\n  }\n\n  clearSearchDuration = async () => {\n    await this.setState({ orderDuration: '', searchByDurationVisible: false })\n    this.search()\n  }\n\n  clearSearchInCharge = async () => {\n    await this.setState({ inCharge: [], searchByUsersVisible: false })\n    this.search()\n  }\n\n  closeAllModal = () => {\n    this.setState({\n      searchByNameVisible: false,\n      searchByDateVisible: false,\n      searchByDurationVisible: false,\n      searchByUsersVisible: false,\n      searchByResourceVisible: false,\n    })\n  }\n\n  stopPropagation = (event) => event.stopPropagation()\n\n  render() {\n    const { projects, resources } = this.props\n    const {\n      users,\n      searchByNameVisible,\n      searchByDateVisible,\n      searchByDurationVisible,\n      searchByUsersVisible,\n      searchByResourceVisible,\n      projectId,\n      taskName,\n      dateType,\n      startDateFrom,\n      startDateTo,\n      endDateFrom,\n      endDateTo,\n      extendFrom,\n      extendTo,\n      orderStartDate,\n      orderEndDate,\n      orderExtend,\n      orderDuration,\n      inCharge,\n      selectedResources,\n      confirmVisible,\n      confirmType,\n      confirmTitle,\n      confirmDescription,\n      confirm,\n    } = this.state\n\n    const resourceIconClass = selectedResources.length === 0 ? 'resourceIcon' : 'resourceIcon--selected'\n    const dateProps = this.sortingByDateRange(dateType)\n    const {\n      rangeStart,\n      rangeEnd,\n      onChangeRangeStart,\n      onChangeRangeEnd,\n      order,\n    } = dateProps\n\n    return (\n      <div className=\"gantt-index-header\">\n        <div className=\"gantt-index-header__resource\">\n          <div className={resourceIconClass} onClick={this.onClickResource} />\n        </div>\n        <div className=\"gantt-index-header__name\">\n          {projectId === '' && taskName === ''\n            ? <span className=\"gantt-index-header__label\" onClick={this.onClickName}>Name</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" onClick={this.onClickName}>Name</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchName}>×</span>\n              </div>\n            )}\n        </div>\n\n        <div className=\"gantt-index-header__startDate\">\n          {startDateFrom === '' && startDateTo === '' && orderStartDate === ''\n            ? (\n              <span className=\"gantt-index-header__label\" data-type=\"start\" onClick={this.onClickDate}>\n                StartDate\n              </span>\n            ) : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" data-type=\"start\" onClick={this.onClickDate}>\n                  StartDate\n                </span>\n                <span className=\"selected__clear\" onClick={this.clearSearchStartDate}>×</span>\n              </div>\n            )}\n        </div>\n\n        <div className=\"gantt-index-header__endDate\">\n          {endDateFrom === '' && endDateTo === '' && orderEndDate === ''\n            ? (\n              <span className=\"gantt-index-header__label\" data-type=\"end\" onClick={this.onClickDate}>\n                EndDate\n              </span>\n            ) : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" data-type=\"end\" onClick={this.onClickDate}>\n                  EndDate\n                </span>\n                <span className=\"selected__clear\" onClick={this.clearSearchEndDate}>×</span>\n              </div>\n            )}\n        </div>\n\n        <div className=\"gantt-index-header__extend\">\n          {extendFrom === '' && extendTo === '' && orderExtend === ''\n            ? (\n              <span className=\"gantt-index-header__label\" data-type=\"extend\" onClick={this.onClickDate}>\n                Extend\n              </span>\n            ) : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" data-type=\"extend\" onClick={this.onClickDate}>\n                  Extend\n                </span>\n                <span className=\"selected__clear\" onClick={this.clearSearchExtend}>×</span>\n              </div>\n            )}\n        </div>\n\n        <div className=\"gantt-index-header__duration\">\n          {orderDuration === ''\n            ? <span className=\"gantt-index-header__label\" onClick={this.onClickDuration}>Duration</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" onClick={this.onClickDuration}>Duration</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchDuration}>×</span>\n              </div>\n            )}\n        </div>\n        <div className=\"gantt-index-header__inCharge\">\n          {inCharge.length === 0\n            ? <span className=\"gantt-index-header__label\" onClick={this.onClickInCharge}>InCharge</span>\n            : (\n              <div className=\"selected\">\n                <span className=\"selected__label\" onClick={this.onClickInCharge}>InCharge</span>\n                <span className=\"selected__clear\" onClick={this.clearSearchInCharge}>×</span>\n              </div>\n            )}\n        </div>\n        {searchByResourceVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByResource\n              resources={resources}\n              selectedResources={selectedResources}\n              onClickResource={this.onClickResourceIcon}\n              stopPropagation={this.stopPropagation}\n            />\n          </div>\n        )}\n        {searchByNameVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByName\n              projectId={projectId}\n              projects={projects}\n              onChangeProject={this.onChangeProject}\n              taskName={taskName}\n              onChangeTask={this.onChangeTask}\n              stopPropagation={this.stopPropagation}\n            />\n          </div>\n        )}\n        {searchByDateVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByDate\n              dateType={dateType}\n              rangeStart={rangeStart}\n              rangeEnd={rangeEnd}\n              onChangeRangeStart={onChangeRangeStart}\n              onChangeRangeEnd={onChangeRangeEnd}\n              onChangeOrder={this.onChangeOrder}\n              selected={order}\n              stopPropagation={this.stopPropagation}\n            />\n          </div>\n        )}\n        {searchByDurationVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByDuration\n              onChangeOrder={this.onChangeOrder}\n              selected={orderDuration}\n              stopPropagation={this.stopPropagation}\n            />\n          </div>\n        )}\n        {searchByUsersVisible && (\n          <div className=\"overlay\" onClick={this.closeAllModal}>\n            <SearchByUsers\n              users={users}\n              inCharge={inCharge}\n              onClickAvatar={this.onClickAvatar}\n              stopPropagation={this.stopPropagation}\n            />\n          </div>\n        )}\n        {confirmVisible && (\n          <Confirm\n            type={confirmType}\n            closeConfirm={this.closeConfirm}\n            title={confirmTitle}\n            description={confirmDescription}\n            confirm={confirm}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst OrderBy = (props) => {\n  const { onChangeOrder, by, selected } = props\n  const selections = [{ label: 'ASC', value: 'ASC' }, { label: 'DESC', value: 'DESC' }]\n  return (\n    <select data-by={by} value={selected} onChange={onChangeOrder} className=\"search__order\">\n      <option key=\"default\" value={null} aria-label=\"order\" />\n      {selections.map((selection) => (\n        <option key={selection.label} value={selection.value}>{selection.label}</option>\n      ))}\n    </select>\n  )\n}\n\nconst SearchByDuration = (props) => {\n  const { onChangeOrder, selected, stopPropagation } = props\n  return (\n    <div className=\"search--duration\" onClick={stopPropagation}>\n      <div className=\"search__label\">Order by duration</div>\n      <OrderBy by=\"duration\" onChangeOrder={onChangeOrder} selected={selected} />\n      <div className=\"search__divide\" />\n    </div>\n  )\n}\n\nconst SearchByDate = (props) => {\n  const {\n    rangeStart,\n    rangeEnd,\n    onChangeRangeStart,\n    onChangeRangeEnd,\n    dateType,\n    onChangeOrder,\n    order,\n    stopPropagation,\n  } = props\n\n  const className = `search--${dateType}`\n  const title = `Filter by ${dateType} date`\n  return (\n    <div className={className} onClick={stopPropagation}>\n      <div className=\"search__label\">Order by duration</div>\n      <OrderBy by={dateType} onChangeOrder={onChangeOrder} selected={order} />\n      <div className=\"search__divide\" />\n      <div className=\"search__label\">{title}</div>\n      <div className=\"search__dateWrapper\">\n        <DatePicker\n          className=\"search__dateRange\"\n          dateFormat=\"yyyy/MM/dd\"\n          showWeekNumbers\n          placeholderText=\"Select range start\"\n          selected={rangeStart}\n          onChange={onChangeRangeStart}\n        />\n        <DatePicker\n          className=\"search__dateRange\"\n          dateFormat=\"yyyy/MM/dd\"\n          showWeekNumbers\n          placeholderText=\"Select range end\"\n          selected={rangeEnd}\n          onChange={onChangeRangeEnd}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst SearchByName = (props) => {\n  const {\n    projectId,\n    projects,\n    onChangeProject,\n    taskName,\n    onChangeTask,\n    stopPropagation,\n  } = props\n\n  return (\n    <div className=\"search--name\" onClick={stopPropagation}>\n      <div className=\"search__label\">Filter by Project</div>\n      <select value={projectId} onChange={onChangeProject} className=\"search__project\">\n        <option key=\"default\" value={null} aria-label=\"selectProject\" />\n        {projects.map((project) => (\n          <option key={project.name} value={project.id}>{project.name}</option>\n        ))}\n      </select>\n      <div className=\"search__divide\" />\n      <div className=\"search__label\">Search by Task name</div>\n      <input type=\"text\" className=\"search__task\" value={taskName} onChange={onChangeTask} />\n    </div>\n  )\n}\n\nconst Users = ({ users, onClickAvatar, inCharge }) => (\n  users.map((user) => {\n    const targetIndex = inCharge.indexOf(String(user.id))\n    return (\n      <div key={user.id} className=\"avatar\">\n        <div data-id={user.id} onClick={onClickAvatar} className=\"avatar__wrapper\">\n          <img src={user.avatar} alt={user.name} className=\"avatar__image\" />\n          {targetIndex !== notExist && <div className=\"avatar__selected\" />}\n        </div>\n        <div className=\"avatar__name\">{user.name}</div>\n      </div>\n    )\n  })\n)\n\nconst SearchByUsers = (props) => {\n  const {\n    users,\n    inCharge,\n    onClickAvatar,\n    stopPropagation,\n  } = props\n\n  return (\n    <div className=\"search--user\" onClick={stopPropagation}>\n      <div className=\"search__label\">Search by users</div>\n      <div className=\"search__usersWrapper\">\n        <Users users={users} inCharge={inCharge} onClickAvatar={onClickAvatar} />\n      </div>\n    </div>\n  )\n}\n\nconst Resources = ({ resources, selectedResources, onClickResource }) => (\n  resources.map((resource) => {\n    const targetIndex = selectedResources.indexOf(String(resource.id))\n    return (\n      <div key={resource.id} className=\"resource\">\n        <div data-id={resource.id} onClick={onClickResource} className=\"resource__wrapper\">\n          <div className=\"resource__icon\" style={{ backgroundColor: resource.color }} />\n          {targetIndex !== notExist && <div className=\"resource__selected\" />}\n        </div>\n        <div className=\"resource__name\">{resource.name}</div>\n      </div>\n    )\n  })\n)\n\nconst SearchByResource = (props) => {\n  const {\n    resources,\n    selectedResources,\n    onClickResource,\n    stopPropagation,\n  } = props\n\n  return (\n    <div className=\"search--resource\" onClick={stopPropagation}>\n      <div className=\"search__label\">Search by resource</div>\n      <div className=\"search__resourceWrapper\">\n        <Resources\n          resources={resources}\n          selectedResources={selectedResources}\n          onClickResource={onClickResource}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Confirm from './Confirm'\nimport Utils from '../utils/Utils'\nimport {\n  badRequest,\n  checkParams,\n  reload,\n  serverError,\n} from '../utils/Text'\n\nimport '../css/Task.scss'\n\nconst Avatars = ({ members }) => (\n  members.map((member, i) => {\n    if (i > 3) {\n      return null\n    }\n    if (i < 3) {\n      return <img key={member.name} src={member.avatar} alt={member.name} className=\"task__avatar\" />\n    }\n    return <div key={String(i)} className=\"task__avatar--length\">{members.length}</div>\n  })\n)\n\nexport default class Task extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      confirmVisible: false,\n      confirmType: '',\n      confirmTitle: '',\n      confirmDescription: '',\n      confirm: () => {},\n    }\n  }\n\n  handleDestroy = (event) => {\n    event.stopPropagation()\n    this.token = localStorage.getItem('token')\n    const { id } = event.currentTarget.dataset\n    const url = Utils.buildRequestUrl(`/tasks/${id}`)\n\n    fetch(url, {\n      method: 'DELETE',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then(({ is_delete, task }) => {\n        if (is_delete) {\n          const { index, refresh } = this.props\n          refresh(task, index, 'destroy')\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  openConfirm = (type, title, description, confirm) => {\n    this.setState({\n      confirmVisible: true,\n      confirmType: type,\n      confirmTitle: title,\n      confirmDescription: description,\n      confirm,\n    })\n  }\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  onClickOverlay = (event) => event.stopPropagation()\n\n  render() {\n    const { tasks, onClick, destroyMode } = this.props\n    const {\n      confirmVisible,\n      confirmType,\n      confirmTitle,\n      confirmDescription,\n      confirm,\n    } = this.state\n\n    return (\n      tasks.map((task) => {\n        const className = task.percentComplete === 'progress' ? 'task' : 'task--complete'\n        return (\n          <div key={task.id} data-action=\"edit\" data-id={task.id} className={className} onClick={onClick}>\n            <div className=\"task__icon\" onClick={this.onClickOverlay}>\n              {destroyMode ? (\n                <FontAwesomeIcon\n                  data-id={task.id}\n                  icon={['fas', 'minus-circle']}\n                  className=\"task__delete\"\n                  onClick={this.handleDestroy}\n                />\n              ) : <div className=\"task__resource\" style={{ backgroundColor: task.resource.color }} />}\n            </div>\n            <div className=\"task__name\">{task.name}</div>\n            <div className=\"task__startDate\">{task.startDate}</div>\n            <div className=\"task__endDate\">{task.endDate}</div>\n            <div className=\"task__extend\">{task.extend}</div>\n            <div className=\"task__duration\">{task.duration}</div>\n            <div className=\"task__inCharge\">\n              <Avatars members={task.users} />\n            </div>\n            {confirmVisible && (\n              <Confirm\n                type={confirmType}\n                closeConfirm={this.closeConfirm}\n                title={confirmTitle}\n                description={confirmDescription}\n                confirm={confirm}\n              />\n            )}\n          </div>\n        )\n      })\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport DatePicker from 'react-datepicker'\nimport Moment from 'moment'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nimport Confirm from './Confirm'\nimport ErrorMessage from './Error'\nimport Utils from '../utils/Utils'\nimport {\n  badRequest,\n  checkParams,\n  reload,\n  serverError,\n} from '../utils/Text'\n\nimport '../css/Form.scss'\n\nconst notExist = -1\n\nexport default class TaskForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      resources: [],\n      users: [],\n      name: '',\n      resource: '',\n      startDate: null,\n      endDate: null,\n      complete: false,\n      inCharge: [],\n      description: '',\n      errors: [],\n      confirmVisible: false,\n      confirmType: '',\n      confirmTitle: '',\n      confirmDescription: '',\n      confirm: () => {},\n    }\n  }\n\n  componentDidMount() {\n    const { taskID, action } = this.props\n    if (action === 'new') {\n      this.getTaskFormValue()\n    } else if (action === 'edit') {\n      this.editTaskFormValue(taskID)\n    }\n  }\n\n  getTaskFormValue = () => {\n    this.token = localStorage.getItem('token')\n    const url = Utils.buildRequestUrl('/tasks/new')\n    fetch(url, {\n      method: 'GET',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then((res) => {\n        const { is_authenticated, resources, users } = res\n        if (is_authenticated) {\n          this.setState({ resources, users })\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  editTaskFormValue = (taskID) => {\n    this.token = localStorage.getItem('token')\n    const url = Utils.buildRequestUrl(`/tasks/${taskID}/edit`)\n    fetch(url, {\n      method: 'GET',\n      headers: { 'X-Reach-token': this.token },\n    })\n      .then((_res) => _res.json())\n      .then((res) => {\n        const { is_authenticated, resources, users } = res\n        if (is_authenticated) {\n          const {\n            description,\n            startDate,\n            endDate,\n            extend,\n            name,\n            percentComplete,\n            userIds,\n            resourceId,\n          } = res.task\n\n          const complete = percentComplete === 'complete'\n          const stringUserIds = userIds.map((userId) => String(userId))\n          this.setState({\n            resources,\n            users,\n            name,\n            complete,\n            description,\n            startDate: new Date(startDate),\n            endDate: extend ? new Date(extend) : new Date(endDate),\n            inCharge: stringUserIds,\n            resource: resourceId,\n          })\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  openConfirm = (type, title, description, confirm) => {\n    this.setState({\n      confirmVisible: true,\n      confirmType: type,\n      confirmTitle: title,\n      confirmDescription: description,\n      confirm,\n    })\n  }\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  onChangeName = (event) => {\n    const name = event.target.value\n    this.setState({ name })\n  }\n\n  onChangeResource = (event) => {\n    const resource = event.target.value\n    this.setState({ resource })\n  }\n\n  onChangeStartDate = (date) => {\n    this.setState({ startDate: date })\n  }\n\n  onChangeEndDate = (date) => {\n    this.setState({ endDate: date })\n  }\n\n  onCheck = () => {\n    const { complete } = this.state\n    this.setState({ complete: !complete })\n  }\n\n  onClickAvatar = (event) => {\n    const { inCharge } = this.state\n    const inChargeCopy = inCharge\n    const { id } = event.currentTarget.dataset\n    const targetIndex = inCharge.indexOf(id)\n    if (targetIndex === notExist) {\n      inChargeCopy.push(id)\n    } else {\n      inChargeCopy.splice(targetIndex, 1)\n    }\n    this.setState({ inCharge: inChargeCopy })\n  }\n\n  onChangeDescription = (event) => {\n    const description = event.target.value\n    this.setState({ description })\n  }\n\n  createTask = () => {\n    const { id, taskID, action } = this.props\n    const {\n      name,\n      resource,\n      startDate,\n      endDate,\n      complete,\n      inCharge,\n      description,\n    } = this.state\n\n    const request = Utils.preparingRequest(action, taskID, 'tasks')\n    if (request === null) {\n      return\n    }\n    const url = Utils.buildRequestUrl(request.uriPattern)\n    const duration = Moment(endDate).diff(Moment(startDate), 'days')\n    const percent_complete = complete ? 'complete' : 'progress'\n    const params = {\n      name,\n      description,\n      duration,\n      percent_complete,\n      resource_id: resource,\n      project_id: id,\n      start_date: startDate,\n      end_date: endDate,\n      user_ids: inCharge,\n    }\n\n    if (action === 'edit') {\n      params.extend = endDate\n      delete params.end_date\n    }\n\n    fetch(url, {\n      method: request.method,\n      headers: { 'X-Reach-token': this.token, 'Content-Type': 'application/json' },\n      body: JSON.stringify(params),\n    })\n      .then((_res) => _res.json())\n      .then(({ is_created, errors, task }) => {\n        if (is_created) {\n          const { refresh, index } = this.props\n          refresh(task, index, action)\n          this.setState({ errors: [] })\n        } else {\n          this.setState({ errors })\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  render() {\n    const { closeModal, action } = this.props\n    const title = action === 'edit' ? 'Update' : 'Add'\n    const {\n      users,\n      resources,\n      resource,\n      name,\n      startDate,\n      endDate,\n      complete,\n      inCharge,\n      description,\n      errors,\n      confirmVisible,\n      confirmType,\n      confirmTitle,\n      confirmDescription,\n      confirm,\n    } = this.state\n\n    return (\n      <div className=\"taskForm\">\n        <div className=\"taskForm__close\" onClick={closeModal}>×</div>\n        <div className=\"taskForm__title\">\n          {title}\n          Task\n        </div>\n        {errors.length !== 0 && <ErrorMessage action=\"Task creation\" errors={errors} />}\n        <div className=\"taskFormRow\">\n          <div className=\"taskFormRow__label\">Name</div>\n          <input\n            type=\"text\"\n            className=\"taskFormRow__name\"\n            value={name}\n            onChange={this.onChangeName}\n          />\n        </div>\n        <div className=\"taskFormRow\">\n          <div className=\"taskFormRow__label\">Resource</div>\n          <select\n            value={resource}\n            onChange={this.onChangeResource}\n            className=\"taskFormRow__resource\"\n          >\n            <option key=\"default\" value={null} aria-label=\"...select\" />\n            <Resources resources={resources} />\n          </select>\n          <div className=\"taskFormRow__divide\" />\n        </div>\n        <div className=\"taskFormRow\">\n          <div className=\"taskFormRow__label\">Start date</div>\n          <DatePicker\n            className=\"taskFormRow__date\"\n            dateFormat=\"yyyy/MM/dd\"\n            showWeekNumbers\n            selected={startDate}\n            onChange={this.onChangeStartDate}\n          />\n        </div>\n        <div className=\"taskFormRow\">\n          <div className=\"taskFormRow__label\">End date</div>\n          <DatePicker\n            className=\"taskFormRow__date\"\n            dateFormat=\"yyyy/MM/dd\"\n            showWeekNumbers\n            selected={endDate}\n            onChange={this.onChangeEndDate}\n          />\n        </div>\n        {action === 'edit' && (\n          <div className=\"taskFormRow\">\n            <div className=\"taskFormRow__label\">Complete</div>\n            <div className=\"taskFormRow__complete\" onClick={this.onCheck}>\n              <div className=\"taskFormRow__checkbox\">\n                <FontAwesomeIcon icon={['far', 'square']} />\n                {complete\n                  && <FontAwesomeIcon icon={['fas', 'check']} className=\"taskFormRow__checked\" />}\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"taskFormRow\">\n          <div className=\"taskFormRow__label\">In charge</div>\n          <div className=\"taskFormRow__inCharge\">\n            <Users users={users} inCharge={inCharge} onClickAvatar={this.onClickAvatar} />\n          </div>\n        </div>\n        <div className=\"taskFormRow\">\n          <div className=\"taskFormRow__label\">Description</div>\n          <textarea\n            className=\"taskFormRow__description\"\n            value={description}\n            onChange={this.onChangeDescription}\n          />\n        </div>\n        <button type=\"button\" onClick={this.createTask} className=\"taskForm__button\">\n          {title}\n        </button>\n        {confirmVisible && (\n          <Confirm\n            type={confirmType}\n            closeConfirm={this.closeConfirm}\n            title={confirmTitle}\n            description={confirmDescription}\n            confirm={confirm}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst Resources = ({ resources }) => (\n  resources.map((resource) => (\n    <option key={resource.id} value={resource.id}>{resource.name}</option>\n  ))\n)\n\nconst Users = ({ users, onClickAvatar, inCharge }) => (\n  users.map((user) => {\n    const targetIndex = inCharge.indexOf(String(user.id))\n    return (\n      <div key={user.id} className=\"avatar\">\n        <div data-id={user.id} onClick={onClickAvatar} className=\"avatar__wrapper\">\n          <img src={user.avatar} alt={user.name} className=\"avatar__image\" />\n          {targetIndex !== notExist && <div className=\"avatar__selected\" />}\n        </div>\n        <div className=\"avatar__name\">{user.name}</div>\n      </div>\n    )\n  })\n)\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Task from './Task'\nimport TaskForm from './TaskForm'\nimport ProjectForm from './ProjectForm'\nimport '../css/Project.scss'\n\nclass Project extends Component {\n  constructor(props) {\n    super(props)\n    const { project } = this.props\n    this.state = {\n      name: project.name,\n      isVisible: false,\n      projectFormVisible: false,\n    }\n  }\n\n  openModal = (event) => {\n    this.id = event.currentTarget.dataset.id || null\n    this.action = event.currentTarget.dataset.action\n    this.setState({ isVisible: true })\n  }\n\n  closeModal = () => this.setState({ isVisible: false })\n\n  openProjectForm = () => this.setState({ projectFormVisible: true })\n\n  closeProjectForm = () => this.setState({ projectFormVisible: false })\n\n  updateProject = (name) => this.setState({ name })\n\n  render() {\n    const {\n      project,\n      index,\n      refreshTask,\n      destroyMode,\n      refreshProject,\n    } = this.props\n\n    const { tasks, id } = project\n    const { isVisible, projectFormVisible, name } = this.state\n    return (\n      <div key={name} className=\"project\">\n        <div className=\"projectHeader\">\n          <div className=\"projectHeader__name\">{name}</div>\n          <FontAwesomeIcon\n            icon={['fas', 'edit']}\n            className=\"projectHeader__edit\"\n            onClick={this.openProjectForm}\n          />\n          <FontAwesomeIcon\n            icon={['fas', 'plus']}\n            data-action=\"new\"\n            className=\"projectHeader__addTask\"\n            onClick={this.openModal}\n          />\n        </div>\n        {tasks && (\n          <Task\n            destroyMode={destroyMode}\n            index={index}\n            refresh={refreshTask}\n            tasks={tasks}\n            onClick={this.openModal}\n          />\n        )}\n        {isVisible && (\n          <TaskForm\n            id={id}\n            action={this.action}\n            taskID={this.id}\n            refresh={refreshTask}\n            index={index}\n            closeModal={this.closeModal}\n          />\n        )}\n        {projectFormVisible && (\n          <ProjectForm\n            id={id}\n            refreshProject={refreshProject}\n            refresh={this.updateProject}\n            action=\"edit\"\n            closeModal={this.closeProjectForm}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst Projects = (props) => {\n  const {\n    projects,\n    refreshTask,\n    mode,\n    refreshProject,\n  } = props\n\n  return projects.map((project, index) => (\n    <Project\n      refreshTask={refreshTask}\n      refreshProject={refreshProject}\n      project={project}\n      key={project.name}\n      index={index}\n      destroyMode={mode}\n    />\n  ))\n}\n\nexport default Projects\n","import React, { Component } from 'react'\n\nimport ResourceForm from './ResourceForm'\n\nexport default class Resource extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      resourceFormVisible: false,\n    }\n  }\n\n  toggleResourceForm = () => {\n    const { resourceFormVisible } = this.state\n    this.setState({ resourceFormVisible: !resourceFormVisible })\n  }\n\n  render() {\n    const { resourceFormVisible } = this.state\n    const { resource, refresh } = this.props\n\n    return (\n      <div className=\"resource__wrapper\" onClick={this.toggleResourceForm}>\n        <div className=\"resource__icon\" style={{ backgroundColor: resource.color }} />\n        <div className=\"resource__name\">{resource.name}</div>\n        {resourceFormVisible && (\n          <ResourceForm\n            id={resource.id}\n            action=\"edit\"\n            refresh={refresh}\n            closeModal={this.toggleResourceForm}\n          />\n        )}\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\n\nimport '../css/ChartBar.scss'\n\nexport default class ChartBar extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isHover: false,\n      offsetX: 0,\n      offsetY: 0,\n    }\n  }\n\n  onMouseEnter = (event) => {\n    const isOverflowX = window.innerWidth < (event.clientX + 300)\n    const isOverflowY = window.innerHeight < (event.clientY + 300)\n    const offsetX = isOverflowX ? event.clientX - 230 : event.clientX\n    const offsetY = isOverflowY ? event.clientY - 150 : event.clientY\n    this.setState({ isHover: true, offsetX, offsetY })\n  }\n\n  onMouseLeave = () => this.setState({ isHover: false })\n\n  render() {\n    const { chartWidth, data } = this.props\n    const { isHover, offsetX, offsetY } = this.state\n    return (\n      <div\n        style={{ width: chartWidth, backgroundColor: data.resource.color }}\n        className=\"chartbar\"\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n      >\n        {isHover && <Window data={data} offsetX={offsetX} offsetY={offsetY} />}\n      </div>\n    )\n  }\n}\n\nconst Members = ({ users }) => (\n  users.map((user) => <div key={user.name} className=\"windowMembers__name\">{user.name}</div>)\n)\n\nconst Window = ({ data, offsetX, offsetY }) => (\n  <div className=\"window\" style={{ top: offsetY, left: offsetX }}>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">Name:</div>\n      <div className=\"windowRow__name\">{data.name}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">StartDate:</div>\n      <div className=\"window__startDate\">{data.startDate}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">EndDate:</div>\n      <div className=\"window__endDate\">{data.endDate}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">Extend:</div>\n      <div className=\"window__extend\">{data.extend}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">Duration:</div>\n      <div className=\"window__duration\">{data.duration}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">Progress:</div>\n      <div className=\"window__progress\">{data.percentComplete}</div>\n    </div>\n    <div className=\"windowRow\">\n      <div className=\"windowRow__label\">InCharge:</div>\n      <div className=\"windowMembers\">\n        <Members users={data.users} />\n      </div>\n    </div>\n    <div className=\"windowCol\">\n      <div className=\"windowCol__label\">Description:</div>\n      <div className=\"windowCol__description\">{data.description}</div>\n    </div>\n  </div>\n)\n","import React, { Component } from 'react'\nimport Moment from 'moment'\n\nimport ChartBar from './ChartBar'\nimport '../css/Project.scss'\nimport Utils from '../utils/Utils'\n\nclass GanttTask extends Component {\n  constructor(props) {\n    super(props)\n    this.start = Utils.dateRangeStart()\n    this.baseChartWidth = 45\n  }\n\n  calcOffset = (task) => {\n    const offset = Moment(task.startDate, 'YYYY/MM/DD').startOf('days').diff(this.start, 'days')\n    return (offset - 1) * this.baseChartWidth\n  }\n\n  calcOffsetForWeeks = (task) => {\n    const offset = Math.ceil(\n      Moment(task.startDate, 'YYYY/MM/DD').startOf('week').diff(this.start, 'weeks', true),\n    )\n    return offset * this.baseChartWidth\n  }\n\n  calcChartWidthForWeeks = (task) => {\n    const end = task.extend || task.endDate\n    const startDate = Moment(task.startDate, 'YYYY/MM/DD').startOf('week')\n    const endDate = Moment(end, 'YYYY/MM/DD').endOf('week')\n    return Math.ceil(endDate.diff(startDate, 'weeks', true))\n  }\n\n  isBefore = (task) => Moment(task.startDate, 'YYYY/MM/DD').isSameOrBefore(this.start)\n\n  isBeforeForWeek = (task) => Moment(task.startDate, 'YYYY/MM/DD').isBefore(this.start.startOf('week'))\n\n  render() {\n    const { scheduleType, tasks } = this.props\n    return (\n      tasks.map((task) => {\n        const offset = scheduleType === 'days' ? this.calcOffset(task) : this.calcOffsetForWeeks(task)\n        let diff = scheduleType === 'days' ? task.duration : this.calcChartWidthForWeeks(task)\n\n        if (this.isBefore(task) && scheduleType === 'days') {\n          diff -= Math.ceil(\n            this.start.diff(Moment(task.startDate, 'YYYY/MM/DD').startOf('days'), 'days', true),\n          )\n        } else if (this.isBeforeForWeek(task) && scheduleType === 'weeks') {\n          diff -= Math.ceil(this.start.diff(Moment(task.startDate, 'YYYY/MM/DD'), 'week', true))\n        } else if (scheduleType === 'days') {\n          diff += 1\n        }\n\n        const chartWidth = this.baseChartWidth * diff\n        const className = task.percentComplete === 'progress' ? 'task' : 'task--complete'\n\n        return (\n          <div key={task.id} style={{ paddingLeft: offset }} className={className}>\n            <ChartBar chartWidth={chartWidth} data={task} />\n          </div>\n        )\n      })\n    )\n  }\n}\n\nconst Gantt = (props) => (\n  props.projects.map((project) => (\n    <div key={project.name} className=\"project\">\n      <div className=\"projectHeader\" />\n      {project.tasks && <GanttTask tasks={project.tasks} scheduleType={props.scheduleType} />}\n    </div>\n  ))\n)\n\nexport default Gantt\n","import React, { PureComponent } from 'react'\nimport Moment from 'moment'\n\nimport SideBar from './SideBar'\nimport GanttIndexHeader from './GanttIndexHeader'\nimport Project from './Project'\nimport Resource from './Resource'\nimport Gantt from './Gantt'\nimport Confirm from './Confirm'\nimport '../css/Main.scss'\n\nimport Utils from '../utils/Utils'\nimport {\n  badRequest,\n  checkParams,\n  reload,\n  serverError,\n} from '../utils/Text'\n\nconst sun = 0\nconst sat = 6\nconst startDate = Utils.dateRangeStart()\nconst endDate = Utils.dateRangeEnd()\n\n\nconst whatDayIsToday = (day) => {\n  switch (day.get('day')) {\n    case sun:\n      return '--sun'\n    case sat:\n      return '--sat'\n    default:\n      return ''\n  }\n}\n\nconst scheduleAttr = (day, scheduleType) => {\n  const attr = {}\n  if (scheduleType === 'days') {\n    attr.formatDate = day.format('MMM D')\n    attr.className = `gantt-schedule-header__date${whatDayIsToday(day)}`\n  } else {\n    const startOfWeek = day.startOf('week')\n    attr.formatDate = `W${day.format('W')} ${startOfWeek.format('M/D')}`\n    attr.className = 'gantt-schedule-header__week'\n  }\n  return attr\n}\n\nconst Schedule = ({ scheduleType }) => {\n  const schedules = []\n  for (let day = Moment(startDate); day <= endDate; day.add(1, scheduleType)) {\n    const attr = scheduleAttr(day, scheduleType)\n    schedules.push(\n      <div className={attr.className} key={day.format('YYYYMMDD')}>\n        {attr.formatDate}\n      </div>,\n    )\n  }\n  return schedules\n}\n\nconst Header = (props) => {\n  const {\n    scheduleType,\n    onClick,\n    resources,\n    refreshResource,\n  } = props\n\n  const className = { weeks: 'switchView__button', days: 'switchView__button' }\n  if (scheduleType === 'weeks') {\n    className.weeks += '--disable'\n  } else if (scheduleType === 'days') {\n    className.days += '--disable'\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"switchView\">\n        <div\n          className={className.weeks}\n          onClick={onClick}\n          onKeyUp={onClick}\n          data-type=\"weeks\"\n          role=\"link\"\n          tabIndex=\"0\"\n        >\n          Week\n        </div>\n        <div className=\"switchView__divider\">|</div>\n        <div\n          className={className.days}\n          onClick={onClick}\n          onKeyUp={onClick}\n          data-type=\"days\"\n          role=\"link\"\n          tabIndex=\"0\"\n        >\n          Day\n        </div>\n      </div>\n      <div className=\"resource\">\n        {resources.map((resource) => (\n          <Resource refresh={refreshResource} key={resource.id} resource={resource} />))}\n      </div>\n    </div>\n  )\n}\n\nexport default class Main extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      resources: [],\n      projects: [],\n      type: 'weeks',\n      destroyMode: false,\n      confirmVisible: false,\n      confirmType: '',\n      confirmTitle: '',\n      confirmDescription: '',\n      confirm: () => {},\n    }\n  }\n\n  componentDidMount() {\n    this.getProjectIndex()\n  }\n\n  getProjectIndex = () => {\n    const url = Utils.buildRequestUrl('/projects')\n    const token = localStorage.getItem('token')\n    fetch(url, {\n      method: 'GET',\n      headers: { 'X-Reach-token': token },\n    })\n      .then((_res) => _res.json())\n      .then(({ is_authenticated, projects, resources }) => {\n        if (is_authenticated) {\n          this.setState({ projects, resources })\n        } else {\n          this.openConfirm('error', badRequest, checkParams, this.closeConfirm)\n        }\n      })\n      .catch(() => {\n        this.openConfirm('error', serverError, reload, this.closeConfirm)\n      })\n  }\n\n  changeScheduleType = (event) => {\n    const { type } = event.target.dataset\n    this.setState({ type })\n  }\n\n  changeMode = () => {\n    const { destroyMode } = this.state\n    this.setState({ destroyMode: !destroyMode })\n  }\n\n  openConfirm = (type, title, description, confirm) => {\n    this.setState({\n      confirmVisible: true,\n      confirmType: type,\n      confirmTitle: title,\n      confirmDescription: description,\n      confirm,\n    })\n  }\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  updateProject = (projectsCopy) => this.setState({ projects: projectsCopy })\n\n  refreshResource = (resource) => {\n    const { resources } = this.state\n    const resourcesCopy = resources.slice()\n    resourcesCopy.push(resource)\n    this.setState({ resources: resourcesCopy })\n  }\n\n  refreshProject = (project, action) => {\n    const { projects } = this.state\n    if (action === 'new') {\n      const projectsCopy = projects.slice()\n      projectsCopy.push(project)\n      this.updateProject(projectsCopy)\n    } else if (action === 'destroy') {\n      const projectsCopy = projects.filter((existingProject) => (\n        existingProject.id !== project.id\n      ))\n      this.updateProject(projectsCopy)\n    }\n  }\n\n  refreshTask = (task, index, action) => {\n    const { projects } = this.state\n    if (action === 'new') {\n      const projectsCopy = projects.slice()\n      projectsCopy[index].tasks.push(task)\n      this.updateProject(projectsCopy)\n    } else if (action === 'edit') {\n      const tasksCopy = projects[index].tasks.map((existingTask) => (\n        existingTask.id === task.id ? task : existingTask\n      ))\n      const projectsCopy = projects.map((_project, i) => {\n        const project = _project\n        if (index === i) {\n          project.tasks = tasksCopy\n        }\n        return project\n      })\n      this.updateProject(projectsCopy)\n    } else if (action === 'destroy') {\n      const tasksCopy = projects[index].tasks.filter((existingTask) => (\n        existingTask.id !== task.id\n      ))\n      const projectsCopy = projects.map((_project, i) => {\n        const project = _project\n        if (index === i) {\n          project.tasks = tasksCopy\n        }\n        return project\n      })\n      this.updateProject(projectsCopy)\n    }\n  }\n\n  render() {\n    const {\n      type,\n      projects,\n      resources,\n      destroyMode,\n      confirmVisible,\n      confirmType,\n      confirmTitle,\n      confirmDescription,\n      confirm,\n    } = this.state\n\n    return (\n      <div className=\"App\">\n        <SideBar\n          getProjectIndex={this.getProjectIndex}\n          refreshProject={this.refreshProject}\n          refreshResource={this.refreshResource}\n          changeMode={this.changeMode}\n        />\n        <div className=\"mainContainer\">\n          <Header\n            resources={resources}\n            refreshResource={this.getProjectIndex}\n            scheduleType={type}\n            onClick={this.changeScheduleType}\n          />\n          <div className=\"gantt\">\n            <div className=\"gantt-index\">\n              <GanttIndexHeader\n                resources={resources}\n                projects={projects}\n                updateProject={this.updateProject}\n              />\n              <Project\n                refreshProject={this.refreshProject}\n                refreshTask={this.refreshTask}\n                projects={projects}\n                mode={destroyMode}\n              />\n            </div>\n            <div className=\"gantt-schedule\">\n              <div className=\"gantt-schedule-header\">\n                <Schedule scheduleType={type} />\n              </div>\n              <Gantt projects={projects} scheduleType={type} />\n            </div>\n          </div>\n        </div>\n        {confirmVisible && (\n          <Confirm\n            type={confirmType}\n            closeConfirm={this.closeConfirm}\n            title={confirmTitle}\n            description={confirmDescription}\n            confirm={confirm}\n          />\n        )}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\n\nimport ErrorMessage from './Error'\nimport Confirm from './Confirm'\nimport Utils from '../utils/Utils'\nimport { reload, serverError } from '../utils/Text'\n\nimport '../css/Session.scss'\n\nexport default class SignIn extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n      isSignIn: false,\n      errors: [],\n      confirmVisible: false,\n    }\n  }\n\n  handleSignIn = () => {\n    const { email, password } = this.state\n    const url = Utils.buildRequestUrl('/sessions')\n    const params = { email, password }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((_res) => _res.json())\n      .then((res) => {\n        const { result, token, errors } = res\n        if (result) {\n          localStorage.setItem('token', token)\n          this.setState({ isSignIn: true })\n        } else if (errors !== undefined) {\n          this.setState({ errors })\n        } else {\n          this.openConfirm()\n        }\n      })\n      .catch(() => {\n        this.openConfirm()\n      })\n  }\n\n  openConfirm = () => this.setState({ confirmVisible: true })\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  emailOnChange = (event) => {\n    const email = event.target.value\n    this.setState({ email })\n  }\n\n  passwordOnChange = (event) => {\n    const password = event.target.value\n    this.setState({ password })\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      isSignIn,\n      errors,\n      confirmVisible,\n    } = this.state\n\n    return (\n      isSignIn ? <Redirect to=\"/reach\" /> : (\n        <div className=\"background\">\n          <div className=\"session\">\n            <div className=\"session__title\">Sign in to Reach</div>\n            {errors.length !== 0 && <ErrorMessage action=\"Authentication\" errors={errors} />}\n            <input\n              type=\"text\"\n              className=\"session__email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={this.emailOnChange}\n            />\n            <input\n              type=\"password\"\n              className=\"session__password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={this.passwordOnChange}\n            />\n            <button type=\"button\" onClick={this.handleSignIn} className=\"session__submit\">\n              Sign In\n            </button>\n            <Link to=\"/reach/signup\" className=\"session__switch\">Create account</Link>\n          </div>\n          {confirmVisible && (\n            <Confirm\n              type=\"error\"\n              closeConfirm={this.closeConfirm}\n              title={serverError}\n              description={reload}\n              confirm={this.closeConfirm}\n            />\n          )}\n        </div>\n      )\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport ErrorMessage from './Error'\nimport Confirm from './Confirm'\nimport Utils from '../utils/Utils'\nimport { reload, serverError } from '../utils/Text'\nimport '../css/Session.scss'\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      uri: '',\n      avatar: null,\n      name: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      errors: [],\n      isSignIn: false,\n      confirmVisible: false,\n    }\n  }\n\n  handleSignUp = () => {\n    const {\n      avatar,\n      name,\n      email,\n      password,\n      passwordConfirmation,\n    } = this.state\n\n    const params = new FormData()\n    params.append('user[name]', name)\n    params.append('user[email]', email)\n    params.append('user[password]', password)\n    params.append('user[password_confirmation]', passwordConfirmation)\n    if (avatar) {\n      params.append('user[avatar]', avatar)\n    }\n\n    const url = Utils.buildRequestUrl('/users')\n    fetch(url, {\n      method: 'POST',\n      body: params,\n    })\n      .then((_res) => _res.json())\n      .then(({ is_created, errors, token }) => {\n        if (is_created) {\n          localStorage.setItem('token', token)\n          this.setState({ isSignIn: true })\n        } else if (errors !== undefined) {\n          this.setState({ errors })\n        } else {\n          this.openConfirm()\n        }\n      })\n      .catch(() => {\n        this.openConfirm()\n      })\n  }\n\n  openConfirm = () => this.setState({ confirmVisible: true })\n\n  closeConfirm = () => this.setState({ confirmVisible: false })\n\n  onChangeFile = (event) => {\n    const avatar = event.target.files[0]\n    const uri = URL.createObjectURL(avatar)\n    this.setState({ uri, avatar })\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value\n    this.setState({ name })\n  }\n\n  onChangeEmail = (event) => {\n    const email = event.target.value\n    this.setState({ email })\n  }\n\n  onChangePassword = (event) => {\n    const password = event.target.value\n    this.setState({ password })\n  }\n\n  onChangePasswordConfirmation = (event) => {\n    const passwordConfirmation = event.target.value\n    this.setState({ passwordConfirmation })\n  }\n\n  render() {\n    const {\n      uri,\n      name,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      isSignIn,\n      confirmVisible,\n    } = this.state\n\n    return (\n      isSignIn ? <Redirect to=\"/reach\" /> : (\n        <div className=\"background\">\n          <div className=\"session\">\n            <div className=\"session__title\">Create account</div>\n            {errors.length !== 0 && <ErrorMessage action=\"Registration\" errors={errors} />}\n            <label htmlFor=\"avatarForm\" className=\"session__avatar\">\n              <input\n                id=\"avatarForm\"\n                type=\"file\"\n                className=\"session__fileField\"\n                onChange={this.onChangeFile}\n              />\n              {uri === ''\n                ? <FontAwesomeIcon icon={['fas', 'user']} className=\"session__fileIcon\" />\n                : <img src={uri} alt=\"avatar\" className=\"session__preview\" />}\n            </label>\n            <div className=\"session__fileLabel\">Upload your avatar</div>\n            <input\n              type=\"text\"\n              className=\"session__name\"\n              placeholder=\"Name\"\n              value={name}\n              onChange={this.onChangeName}\n            />\n            <input\n              type=\"text\"\n              className=\"session__email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={this.onChangeEmail}\n            />\n            <input\n              type=\"password\"\n              className=\"session__password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={this.onChangePassword}\n            />\n            <input\n              type=\"password\"\n              className=\"session__password\"\n              placeholder=\"Password confirmation\"\n              value={passwordConfirmation}\n              onChange={this.onChangePasswordConfirmation}\n            />\n            <button type=\"button\" onClick={this.handleSignUp} className=\"session__submit\">\n              Sign Up\n            </button>\n            <Link to=\"/reach/signin\" className=\"session__switch\">Move to Sign In</Link>\n          </div>\n          {confirmVisible && (\n            <Confirm\n              type=\"error\"\n              closeConfirm={this.closeConfirm}\n              title={serverError}\n              description={reload}\n              confirm={this.closeConfirm}\n            />\n          )}\n        </div>\n      )\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom'\n\nimport Main from './Main'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    const token = localStorage.getItem('token')\n    const isAuthenticated = token !== null\n    this.state = {\n      isAuthenticated,\n    }\n  }\n\n  render() {\n    const { isAuthenticated } = this.state\n    return isAuthenticated ? <Main /> : <Redirect to=\"/reach/signin\" />\n  }\n}\n\nconst App = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/reach/signin\"><SignIn /></Route>\n      <Route path=\"/reach/signup\"><SignUp /></Route>\n      <Route exact path=\"/reach\"><Home /></Route>\n      <Route exact><SignIn /></Route>\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nlibrary.add(fab, fas, far)\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}